{"version":3,"file":"generated.js","sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/es6-object-assign/src/index.js","src/prototypo-canvas.js","src/utils/glyph.js","src/utils/init.js","src/utils/loadFont.js","src/utils/mouseHandlers.js","src/worker.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","PrototypoCanvas","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"assign","target","firstSource","undefined","TypeError","to","Object","arguments","nextSource","keysArray","keys","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","polyfill","defineProperty","configurable","writable","value","prototypo","glyph","mouseHandlers","init","loadFont","_","paper","opts","setup","canvas","setAttribute","fill","shoNodes","zoomFactor","jQueryListeners","glyphrUrl","view","center","project","activeLayer","applyMatrix","scale","worker","_queue","_fill","_showNodes","showNodes","fontsMap","isMousedown","addEventListener","currentJob","callback","data","ArrayBuffer","font","addToFonts","dequeue","bind","$","jQuery","type","on","onWheel","onMove","onDown","document","onUp","raf","requestAnimationFrame","webkitRequestAnimationFrame","updateLoop","latestRafValues","currGlyph","update","prototype","defineProperties","zoom","get","set","bool","displayGlyph","showCoords","settings","drawCoords","subset","enqueue","displayChar","latestChar","charMap","charCodeAt","PaperScope","Path","_drawSelected","handleSize","handleColor","nodeColor","handleFont","priorities","message","indexOf","cb","postMessage","emptyQueue","values","latestValues","download","name","openInGlyphr","handler","removeEventListener","source","origin","open","displayComponents","components","forEach","component","visible","contours","contour","fullySelected","skeleton","_glyph","glyphMap","fillColor","strokeWidth","_project","_needsUpdate","SelectionState","HANDLE_IN","HANDLE_OUT","POINT","SEGMENT","worldCoords","Float32Array","viewCoords","drawHandles","ctx","segments","matrix","size","half","pX","pY","drawHandle","j","hX","Math","round","hY","text","beginPath","strokeStyle","fillStyle","moveTo","lineTo","stroke","arc","PI","globalAlpha","fillText","measureText","width","segment","_transformCoordinates","state","_selectionState","fillRect","_segments","_scope","_view","_zoom","shell","URL","webkitURL","constructor","workerUrl","createObjectURL","Blob","toString","Promise","resolve","Worker","initWorker","Array","isArray","workerDeps","then","translateGlyph","ot","unicode","fontSource","charAt","fetch","result","fontObj","JSON","parse","key","glyphs","solvingOrder","parametricFont","wheelHandler","event","bcr","getBoundingClientRect","currPos","Point","clientX","left","clientY","top","viewPos","viewToProject","factor","abs","deltaY","deltaMode","newZoom","beta","difference","subtract","newCenter","multiply","preventDefault","moveHandler","delta","prevPos","divide","downHandler","button","upHandler","zoomIn","zoomOut","prepareWorker","runWorker","handlers","currValues","currSubset","translateSubset","map","filter","Boolean","height","onmessage","solvingOrders","params","_updateVersion","updateOTCommands","toBuffer","prevGlyphs","getGlyphSubset","otfFont","allChars","importScripts"],"mappings":"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":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n","var prototypo = (typeof window !== \"undefined\" ? window.prototypo : typeof global !== \"undefined\" ? global.prototypo : null),\n\tassign = require('es6-object-assign').assign,\n\t// Grid = require('./grid'),\n\tglyph = require('./utils/glyph'),\n\tmouseHandlers = require('./utils/mouseHandlers'),\n\tinit = require('./utils/init'),\n\tloadFont = require('./utils/loadFont');\n\nvar _ = { assign: assign },\n\tpaper = prototypo.paper;\n\n// constructor\nfunction PrototypoCanvas( opts ) {\n\tpaper.setup( opts.canvas );\n\t// enable pointerevents on the canvas\n\topts.canvas.setAttribute('touch-action', 'none');\n\n\tthis.opts = _.assign({\n\t\tfill: true,\n\t\tshoNodes: false,\n\t\tzoomFactor: 0.05,\n\t\tjQueryListeners: true,\n\t\tglyphrUrl: 'http://www.glyphrstudio.com/online/'\n\t}, opts);\n\n\tthis.canvas = opts.canvas;\n\tthis.view = paper.view;\n\tthis.view.center = [ 0, 0 ];\n\tthis.project = paper.project;\n\tthis.project.activeLayer.applyMatrix = false;\n\tthis.project.activeLayer.scale( 1, -1 );\n\tthis.worker = opts.worker;\n\tthis._queue = [];\n\tthis._fill = this.opts.fill;\n\tthis._showNodes = this.opts.showNodes;\n\tthis.fontsMap = {};\n\tthis.isMousedown = false;\n\n\t// this.grid = new Grid( paper );\n\n\t// bind workerHandlers\n\tif ( this.worker ) {\n\t\tthis.worker.addEventListener('message', function(e) {\n\t\t\t// the job might have been cancelled\n\t\t\tif ( !this.currentJob ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( this.currentJob.callback ) {\n\t\t\t\tthis.currentJob.callback( e.data );\n\n\t\t\t// default callback for buffers: use it as a font\n\t\t\t} else if ( e.data instanceof ArrayBuffer ) {\n\t\t\t\tthis.font.addToFonts( e.data );\n\t\t\t}\n\n\t\t\tthis.currentJob = false;\n\t\t\tthis.dequeue();\n\n\t\t}.bind(this));\n\t}\n\n\t// bind mouseHandlers (jQuery is an optional dependency)\n\tif ( ( 'jQuery' in window ) && this.opts.jQueryListeners ) {\n\t\tvar $ = window.jQuery,\n\t\t\ttype = ( 'PointerEventsPolyfill' in window ) ||\n\t\t\t\t( 'PointerEvent' in window ) ? 'pointer' : 'mouse';\n\n\t\t$(opts.canvas).on( 'wheel', this.onWheel.bind(this) );\n\n\t\t$(opts.canvas).on( type + 'move', this.onMove.bind(this) );\n\n\t\t$(opts.canvas).on( type + 'down', this.onDown.bind(this) );\n\n\t\t$(document).on( type + 'up', this.onUp.bind(this) );\n\t}\n\n\t// setup raf loop\n\tvar raf = window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame,\n\t\tupdateLoop = function() {\n\t\t\traf(updateLoop);\n\n\t\t\tif ( !this.latestRafValues || !this.currGlyph ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.font.update( this.latestRafValues, [ this.currGlyph ] );\n\t\t\tthis.view.update();\n\t\t\tdelete this.latestRafValues;\n\n\t\t}.bind(this);\n\tupdateLoop();\n}\n\nPrototypoCanvas.init = init;\nPrototypoCanvas.prototype.loadFont = loadFont;\n_.assign( PrototypoCanvas.prototype, mouseHandlers );\n\nObject.defineProperties( PrototypoCanvas.prototype, {\n\tzoom: {\n\t\tget: function() {\n\t\t\treturn this.view.zoom;\n\t\t},\n\t\tset: function( zoom ) {\n\t\t\tthis.view.zoom = zoom;\n\t\t\t// this.grid.zoom = zoom;\n\t\t}\n\t},\n\tfill: {\n\t\tget: function() {\n\t\t\treturn this._fill;\n\t\t},\n\t\tset: function( bool ) {\n\t\t\tthis._fill = bool;\n\t\t\tthis.displayGlyph();\n\t\t}\n\t},\n\tshowNodes: {\n\t\tget: function() {\n\t\t\treturn this._showNodes;\n\t\t},\n\t\tset: function( bool ) {\n\t\t\tthis._showNodes = bool;\n\t\t\tthis.displayGlyph();\n\t\t}\n\t},\n\tshowCoords: {\n\t\tget: function() {\n\t\t\treturn paper.settings.drawCoords;\n\t\t},\n\t\tset: function( bool ) {\n\t\t\tpaper.settings.drawCoords = bool;\n\t\t\tthis.displayGlyph();\n\t\t}\n\t},\n\tsubset: {\n\t\tget: function() {\n\t\t\treturn this.font.subset;\n\t\t},\n\t\tset: function( set ) {\n\t\t\tthis.enqueue({\n\t\t\t\ttype: 'subset',\n\t\t\t\tdata: set\n\t\t\t});\n\n\t\t\tthis.font.subset = set;\n\t\t}\n\t}\n});\n\nPrototypoCanvas.prototype.displayGlyph = glyph.displayGlyph;\n\nPrototypoCanvas.prototype.displayChar = function( code ) {\n\tthis.latestChar = code;\n\tthis.displayGlyph( typeof code === 'string' ?\n\t\tthis.font.charMap[ code.charCodeAt(0) ] : code\n\t);\n};\n\n// overwrite the appearance of #selected items in paper.js\npaper.PaperScope.prototype.Path.prototype._drawSelected = glyph._drawSelected;\n_.assign( paper.settings, {\n\thandleSize: 6,\n\thandleColor: '#FF725E',\n\tnodeColor: '#00C4D6',\n\tdrawCoords: false,\n\thandleFont: '12px monospace'\n});\n\n// The worker queue is not your ordinary queue: the priority of the job is\n// defined arbitrarily, and any message previously present\n// at this position will be overwritten. The priorities associated to the\n// message type are hardcoded below (in ascending priority order).\nPrototypoCanvas.priorities = [ 'update', 'subset', 'svgFont', 'otfFont' ];\nPrototypoCanvas.prototype.enqueue = function( message ) {\n\tthis._queue[ PrototypoCanvas.priorities.indexOf( message.type ) ] = message;\n\tthis.dequeue();\n};\n\nPrototypoCanvas.prototype.dequeue = function() {\n\tif ( this.currentJob || !this.worker ) {\n\t\treturn;\n\t}\n\n\t// send the highest priority mesage in the queue (0 is lowest)\n\tfor ( var i = this._queue.length; i--; ) {\n\t\tif ( this._queue[i] ) {\n\t\t\tthis.currentJob = this._queue[i];\n\n\t\t\t// the callback function shouldn't be sent\n\t\t\tvar cb = this.currentJob.callback;\n\t\t\tdelete this.currentJob.callback;\n\n\t\t\tthis.worker.postMessage( this.currentJob );\n\n\t\t\tthis.currentJob.callback = cb;\n\t\t\tthis._queue[i] = null;\n\t\t\tbreak;\n\t\t}\n\t}\n};\n\nPrototypoCanvas.prototype.emptyQueue = function() {\n\tthis._queue = [];\n\tthis.currentJob = false;\n};\n\nPrototypoCanvas.prototype.update = function( values ) {\n\t// latestValues are used in displayGlyph\n\t// latestWorkerValues is used and disposed by th/sue fontBufferHandler\n\t// latestRafValues is used and disposed by the raf loop\n\t// so we need all three!\n\tthis.latestValues = this.latestRafValues = values;\n\n\tthis.enqueue({\n\t\ttype: 'update',\n\t\tdata: values\n\t});\n};\n\nPrototypoCanvas.prototype.download = function( cb, name ) {\n\tif ( !this.worker || !this.latestValues ) {\n\t\t// the UI should wait for the first update to happen before allowing\n\t\t// the download button to be clicked\n\t\treturn false;\n\t}\n\n\tthis.enqueue({\n\t\ttype: 'otfFont',\n\t\tdata: name,\n\t\tcallback: function( data ) {\n\t\t\tthis.font.download( data );\n\t\t\tif ( cb ) {\n\t\t\t\tcb();\n\t\t\t}\n\t\t}.bind(this)\n\t});\n};\n\nPrototypoCanvas.prototype.openInGlyphr = function( cb ) {\n\tif ( !this.worker || !this.latestValues ) {\n\t\t// the UI should wait for the first update to happen before allowing\n\t\t// the download button to be clicked\n\t\treturn false;\n\t}\n\n\tthis.enqueue({\n\t\t// otf/svg switch\n\t\ttype: 'otfFont',\n\t\t// type: 'svgFont',\n\t\tcallback: function( data ) {\n\t\t\tvar handler = function(e) {\n\t\t\t\twindow.removeEventListener('message', handler);\n\t\t\t\tif ( e.data !== 'ready' ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// otf/svg switch\n\t\t\t\te.source.postMessage( data, e.origin, [ data ] );\n\t\t\t\t// e.source.postMessage( data, e.origin );\n\t\t\t\tif ( cb ) {\n\t\t\t\t\tcb();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\twindow.open( this.opts.glyphrUrl );\n\t\t\twindow.addEventListener('message', handler);\n\t\t}.bind(this)\n\t});\n};\n\nmodule.exports = PrototypoCanvas;\n","function displayComponents( glyph, showNodes ) {\n\tglyph.components.forEach(function(component) {\n\t\tcomponent.visible = true;\n\t\tcomponent.contours.forEach(function(contour) {\n\t\t\tcontour.fullySelected = showNodes && !contour.skeleton;\n\t\t});\n\n\t\tif ( component.components.length ) {\n\t\t\tdisplayComponents( component, showNodes );\n\t\t}\n\t});\n}\n\nfunction displayGlyph( _glyph ) {\n\tvar glyph =\n\t\t\t// no glyph means we're switching fill mode for the current glyph\n\t\t\t_glyph === undefined ? this.currGlyph :\n\t\t\t// accept glyph name and glyph object\n\t\t\ttypeof _glyph === 'string' ? this.font.glyphMap[_glyph] :\n\t\t\t_glyph;\n\n\tif ( glyph === undefined ) {\n\t\treturn;\n\t}\n\n\t// hide previous glyph\n\tif ( this.currGlyph && this.currGlyph !== glyph ) {\n\t\tthis.currGlyph.visible = false;\n\t\tthis.currGlyph.components.forEach(function(component) {\n\t\t\tcomponent.visible = false;\n\t\t}, this);\n\t}\n\n\tthis.currGlyph = glyph;\n\n\t// make sure the glyph is up-to-update\n\tif ( _glyph && this.latestValues ) {\n\t\tthis.currGlyph.update( this.latestValues );\n\t}\n\n\t// .. and show it\n\tthis.currGlyph.visible = true;\n\n\tif ( this._fill ) {\n\t\tthis.currGlyph.fillColor = '#333333';\n\t\tthis.currGlyph.strokeWidth = 0;\n\t} else {\n\t\tthis.currGlyph.fillColor = null;\n\t\tthis.currGlyph.strokeWidth = 1;\n\t}\n\n\tthis.currGlyph.contours.forEach(function(contour) {\n\t\tcontour.fullySelected = this._showNodes && !contour.skeleton;\n\t}, this);\n\n\tif ( this.currGlyph.components.length ) {\n\t\tdisplayComponents( this.currGlyph, this._showNodes );\n\t}\n\n\tthis.view._project._needsUpdate = true;\n\tthis.view.update();\n}\n\n// Path#_selectedSegmentState is the addition of all segment's states, and is\n// compared with SelectionState.SEGMENT, the combination of all SelectionStates\n// to see if all segments are fully selected.\nvar SelectionState = {\n\t\tHANDLE_IN: 1,\n\t\tHANDLE_OUT: 2,\n\t\tPOINT: 4,\n\t\tSEGMENT: 7 // HANDLE_IN | HANDLE_OUT | POINT\n\t},\n\tworldCoords = new Float32Array(6),\n\tviewCoords = new Float32Array(6);\n\nfunction drawHandles(ctx, segments, matrix, settings, zoom) {\n\tvar size = settings.handleSize,\n\t\thalf = size / 2,\n\t\tpX,\n\t\tpY;\n\n\tfunction drawHandle(j) {\n\t\tvar hX = Math.round( viewCoords[j] ),\n\t\t\thY = Math.round( viewCoords[j + 1] ),\n\t\t\ttext;\n\n\t\tif ( viewCoords[0] !== viewCoords[j] ||\n\t\t\t\tviewCoords[1] !== viewCoords[j + 1]) {\n\n\t\t\tctx.beginPath();\n\t\t\tctx.strokeStyle = settings.handleColor;\n\t\t\tctx.fillStyle = settings.handleColor;\n\t\t\tctx.moveTo(pX, pY);\n\t\t\tctx.lineTo(hX, hY);\n\t\t\tctx.stroke();\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\tctx.fill();\n\n\t\t\tif ( settings.drawCoords ) {\n\t\t\t\ttext = Math.round( worldCoords[j] ) + ',' +\n\t\t\t\t\tMath.round( worldCoords[j + 1] );\n\n\t\t\t\t// use alpha to reduce the clutter caused by all this text when\n\t\t\t\t// zooming out\n\t\t\t\tif ( zoom < 1.7 ) {\n\t\t\t\t\tctx.globalAlpha = 0.2;\n\t\t\t\t} else if ( zoom < 3 ) {\n\t\t\t\t\tctx.globalAlpha = 0.4;\n\t\t\t\t}\n\t\t\t\tctx.fillText(\n\t\t\t\t\ttext,\n\t\t\t\t\thX - half - 3 - ctx.measureText(text).width,\n\t\t\t\t\t// The text is slightly above the marker. This avoids\n\t\t\t\t\t// overlapping when the handle vector is horizontal, which\n\t\t\t\t\t// is quite a frequent case.\n\t\t\t\t\thY - 2\n\t\t\t\t);\n\t\t\t\tif ( zoom < 3 ) {\n\t\t\t\t\tctx.globalAlpha = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\tvar segment = segments[i];\n\t\tsegment._transformCoordinates(null, worldCoords, false);\n\t\tsegment._transformCoordinates(matrix, viewCoords, false);\n\t\tvar state = segment._selectionState;\n\t\tpX = Math.round( viewCoords[0] );\n\t\tpY = Math.round( viewCoords[1] );\n\t\tif ( state & /*#=*/ SelectionState.HANDLE_IN ) {\n\t\t\tdrawHandle(2);\n\t\t}\n\t\tif ( state & /*#=*/ SelectionState.HANDLE_OUT ) {\n\t\t\tdrawHandle(4);\n\t\t}\n\t\t// Draw a rectangle at segment.point:\n\t\tctx.fillStyle = settings.nodeColor;\n\t\tctx.fillRect( pX - half, pY - half, size, size );\n\t\tctx.font = settings.handleFont;\n\n\t\tif ( settings.drawCoords ) {\n\t\t\tif ( zoom < 1.7 ) {\n\t\t\t\tctx.globalAlpha = 0.4;\n\t\t\t}\n\t\t\tctx.fillText(\n\t\t\t\tMath.round( worldCoords[0] ) + ',' +\n\t\t\t\tMath.round( worldCoords[1] ),\n\t\t\t\tpX + half + 5,\n\t\t\t\tpY - 2\n\t\t\t);\n\t\t\tif ( zoom < 1.7 ) {\n\t\t\t\tctx.globalAlpha = 1;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction _drawSelected( ctx, matrix ) {\n\tctx.beginPath();\n\t// Now stroke it and draw its handles:\n\tctx.stroke();\n\tdrawHandles(\n\t\tctx,\n\t\tthis._segments,\n\t\tmatrix,\n\t\tthis._project._scope.settings,\n\t\tthis._project._view._zoom\n\t);\n}\n\nmodule.exports = {\n\tdisplayGlyph: displayGlyph,\n\t_drawSelected: _drawSelected\n};\n","var shell = require('./../worker');\n\nvar URL = typeof window !== 'undefined' && ( window.URL || window.webkitURL );\n\nmodule.exports = function init( opts ) {\n\tvar constructor = this;\n\n\t// the worker can be loaded from a file by specifying its url (dev\n\t// environment), or by building it as a blob, from a require'd file.\n\tif ( !opts.workerUrl ) {\n\t\topts.workerUrl = URL.createObjectURL(\n\t\t\tnew Blob([\n\t\t\t\t// IIFE power\n\t\t\t\t'(' + shell.toString() + ')();' +\n\t\t\t\t// For some reason [object Object] is appended to the source\n\t\t\t\t// by Firefox when the worker is created, which causes the\n\t\t\t\t// script to throw without the following comment.\n\t\t\t\t'//',\n\t\t\t\t{ type: 'text/javascript' }\n\t\t\t])\n\t\t);\n\t}\n\n\t// create the worker\n\treturn new Promise(function( resolve ) {\n\t\tvar worker = opts.worker = new Worker( opts.workerUrl ),\n\t\t\thandler = function initWorker() {\n\t\t\t\tworker.removeEventListener('message', handler);\n\t\t\t\tresolve();\n\t\t\t};\n\n\t\tworker.addEventListener('message', handler);\n\t\tworker.postMessage( Array.isArray( opts.workerDeps ) ?\n\t\t\topts.workerDeps :\n\t\t\t[ opts.workerDeps ]\n\t\t);\n\n\t}).then(function() {\n\t\treturn new constructor( opts );\n\t});\n};\n","// switch the current glyph with one that has the same name\n// in the next font, or one with the same unicode, or .undef\nfunction translateGlyph( self ) {\n\tif ( !self.currGlyph ) {\n\t\treturn;\n\t}\n\n\tself.displayGlyph(\n\t\tself.font.glyphMap[ self.currGlyph.name ] ||\n\t\tself.font.charMap[ self.currGlyph.ot.unicode ] ||\n\t\tself.font.glyphMap[ '.undef' ]\n\t);\n}\n\nmodule.exports = function loadFont( name, fontSource ) {\n\t// ignore the job currently running, empty the queue and clear update values\n\tthis.emptyQueue();\n\tthis.latestValues = this.latestRafValues = null;\n\n\t// TODO: memoizing should have a limited size!\n\tif ( name in this.fontsMap ) {\n\t\tthis.font = this.fontsMap[name];\n\t\ttranslateGlyph( this );\n\t\tthis.worker.postMessage({\n\t\t\ttype: 'font',\n\t\t\tname: name\n\t\t});\n\t\treturn Promise.resolve( this.font );\n\t}\n\n\treturn ( fontSource.charAt(0) === '{' ?\n\t\tPromise.resolve( fontSource ) :\n\t\t// fetch the resource from URL\n\t\tfetch( fontSource )\n\n\t).then(function( result ) {\n\t\treturn typeof result === 'string' || result.text();\n\n\t}).then(function( result ) {\n\t\tif ( result !== true ) {\n\t\t\tfontSource = result;\n\t\t}\n\n\t\treturn new Promise(function( resolve ) {\n\t\t\tvar fontObj = JSON.parse( fontSource ),\n\t\t\t\thandler = function( e ) {\n\t\t\t\t\tif ( typeof e.data !== 'object' ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.worker.removeEventListener('message', handler);\n\n\t\t\t\t\t// merge solvingOrders with the source\n\t\t\t\t\tObject.keys( e.data ).forEach(function(key) {\n\t\t\t\t\t\tif ( fontObj.glyphs[key] ) {\n\t\t\t\t\t\t\tfontObj.glyphs[key].solvingOrder = e.data[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.font = prototypo.parametricFont( fontObj );\n\t\t\t\t\tthis.fontsMap[name] = this.font;\n\t\t\t\t\ttranslateGlyph( this );\n\n\t\t\t\t\tresolve( this );\n\t\t\t\t}.bind(this);\n\n\t\t\tthis.worker.addEventListener('message', handler);\n\n\t\t\tthis.worker.postMessage({\n\t\t\t\ttype: 'font',\n\t\t\t\tname: name,\n\t\t\t\tdata: fontSource\n\t\t\t});\n\n\t\t}.bind(this));\n\t}.bind(this));\n};\n","var paper = (typeof window !== \"undefined\" ? window.prototypo : typeof global !== \"undefined\" ? global.prototypo : null).paper;\n\nfunction wheelHandler( event ) {\n\tvar bcr = this.canvas.getBoundingClientRect(),\n\t\tcurrPos = new paper.Point(\n\t\t\tevent.clientX - bcr.left,\n\t\t\tevent.clientY - bcr.top\n\t\t),\n\t\tviewPos = this.view.viewToProject( currPos ),\n\t\t// normalize the deltaY value. Expected values are ~40 pixels or 3 lines\n\t\tfactor = 1 + ( this.opts.zoomFactor *\n\t\t\t( Math.abs( event.deltaY / event.deltaMode ? 3 : 40 * 20 ) ) ),\n\t\tnewZoom =\n\t\t\tevent.deltaY < 0 ?\n\t\t\t\tthis.view.zoom * factor :\n\t\t\t\tevent.deltaY > 0 ?\n\t\t\t\t\tthis.view.zoom / factor :\n\t\t\t\t\tthis.view.zoom,\n\t\tbeta = this.view.zoom / newZoom,\n\t\tdifference = viewPos.subtract( this.view.center ),\n\t\tnewCenter = viewPos.subtract( difference.multiply(beta) );\n\n\tthis.zoom = newZoom;\n\tthis.view.center = newCenter;\n\n\tevent.preventDefault();\n}\n\nfunction moveHandler(event) {\n\tif ( !this.isMousedown ) {\n\t\treturn;\n\t}\n\n\tvar currPos = new paper.Point( event.clientX, event.clientY ),\n\t\tdelta = currPos.subtract( this.prevPos );\n\n\tthis.prevPos = currPos;\n\n\tthis.view.center = this.view.center.subtract(\n\t\t\tdelta.divide( this.view.zoom ) );\n}\n\nfunction downHandler(event) {\n\tif (event.button && event.button !== 0) {\n\t\treturn;\n\t}\n\n\tthis.isMousedown = true;\n\tthis.prevPos = new paper.Point( event.clientX, event.clientY );\n}\n\nfunction upHandler() {\n\tthis.isMousedown = false;\n}\n\nfunction zoomIn() {\n\tthis.zoom = this.view.zoom * 1 + this.opts.zoomFactor;\n}\n\nfunction zoomOut() {\n\tthis.zoom = this.view.zoom / 1 + this.opts.zoomFactor;\n}\n\nmodule.exports = {\n\tonWheel: wheelHandler,\n\tonMove: moveHandler,\n\tonDown: downHandler,\n\tonUp: upHandler,\n\tzoomIn: zoomIn,\n\tzoomOut: zoomOut\n};\n","function prepareWorker() {\n\tfunction runWorker() {\n\t\tvar font,\n\t\t\thandlers = {},\n\t\t\tfontsMap = {},\n\t\t\tcurrValues,\n\t\t\tcurrSubset = [],\n\t\t\ttranslateSubset = function() {\n\t\t\t\tif ( !currSubset.length ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfont.subset = currSubset.map(function( glyph ) {\n\t\t\t\t\treturn font.charMap[ glyph.ot.unicode ];\n\t\t\t\t}).filter(Boolean);\n\n\t\t\t\tcurrSubset = font.subset;\n\t\t\t};\n\n\t\tprototypo.paper.setup({\n\t\t\twidth: 1024,\n\t\t\theight: 1024\n\t\t});\n\n\t\t// mini router\n\t\tself.onmessage = function(e) {\n\t\t\tvar result;\n\n\t\t\tif ( e.data.type && e.data.type in handlers ) {\n\t\t\t\tresult = handlers[ e.data.type ]( e.data.data, e.data.name );\n\n\t\t\t\tif ( result === null ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tself.postMessage(\n\t\t\t\t\tresult,\n\t\t\t\t\tresult instanceof ArrayBuffer ? [ result ] : undefined );\n\t\t\t}\n\t\t};\n\n\t\thandlers.font = function( fontSource, name ) {\n\t\t\t// TODO: this should be done using a memoizing table of limited size\n\t\t\tif ( name in fontsMap ) {\n\t\t\t\tfont = fontsMap[name];\n\t\t\t\ttranslateSubset();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar fontObj = JSON.parse( fontSource );\n\n\t\t\tfont = prototypo.parametricFont(fontObj);\n\t\t\tfontsMap[name] = font;\n\n\t\t\ttranslateSubset();\n\n\t\t\tvar solvingOrders = {};\n\t\t\tObject.keys( font.glyphMap ).forEach(function(key) {\n\t\t\t\tsolvingOrders[key] = font.glyphMap[key].solvingOrder;\n\t\t\t});\n\n\t\t\treturn solvingOrders;\n\t\t};\n\n\t\thandlers.update = function( params ) {\n\t\t\tcurrValues = params;\n\t\t\tfont.update( currValues );\n\t\t\t// the following is required so that the globalMatrix of glyphs\n\t\t\t// takes the font matrix into account. I assume this is done in the\n\t\t\t// main thread when calling view.update();\n\t\t\tfont._project._updateVersion++;\n\t\t\tfont.updateOTCommands();\n\t\t\treturn font.ot.toBuffer();\n\t\t};\n\n\t\thandlers.subset = function( set ) {\n\t\t\tvar prevGlyphs = currSubset.map(function( glyph ) {\n\t\t\t\treturn glyph.name;\n\t\t\t});\n\t\t\tfont.subset = set;\n\t\t\tcurrSubset = font.subset;\n\n\t\t\tif ( !currValues ) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// search for glyphs *added* to the subset\n\t\t\tcurrSubset.filter(function( glyph ) {\n\t\t\t\treturn prevGlyphs.indexOf( glyph.name ) === -1;\n\n\t\t\t// update those glyphs\n\t\t\t}).forEach(function( glyph ) {\n\t\t\t\tglyph.update( currValues );\n\t\t\t\tglyph.updateOTCommands();\n\t\t\t});\n\n\t\t\t// Recreate the correct font.ot.glyphs array, without touching the\n\t\t\t// ot commands\n\t\t\tfont.ot.glyphs = font.getGlyphSubset().map(function( glyph ) {\n\t\t\t\treturn glyph.ot;\n\t\t\t});\n\t\t\treturn font.ot.toBuffer();\n\t\t};\n\n\t\thandlers.otfFont = function() {\n\t\t\t// force-update of the whole font, ignoring the current subset\n\t\t\tvar allChars = font.getGlyphSubset( false );\n\t\t\tfont.update( currValues, allChars );\n\n\t\t\tfont.updateOTCommands( allChars );\n\t\t\treturn font.ot.toBuffer();\n\t\t};\n\t}\n\n\t// This is how bundle dependencies are loaded\n\tif ( typeof global === 'undefined' && 'importScripts' in self ) {\n\t\tvar handler = function initWorker( e ) {\n\t\t\t\tself.removeEventListener('message', handler);\n\t\t\t\tself.importScripts( e.data );\n\t\t\t\trunWorker();\n\t\t\t\tself.postMessage('ready');\n\t\t\t};\n\n\t\tself.addEventListener('message', handler);\n\t}\n}\n\n// When the worker is loaded from URL, worker() needs to be called explicitely\nif ( typeof global === 'undefined' && 'importScripts' in self ) {\n\tprepareWorker();\n} else {\n\tmodule.exports = prepareWorker;\n}\n"]}