{"version":3,"file":"generated.js","sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/es6-object-assign/src/index.js","src/drawNodes.js","src/fontBufferHandler.js","src/load.js","src/prototypo-canvas.js","src/worker.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","PrototypoCanvas","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"assign","target","firstSource","undefined","TypeError","to","Object","arguments","nextSource","keysArray","keys","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","polyfill","defineProperty","configurable","writable","value","SelectionState","HANDLE_IN","HANDLE_OUT","POINT","SEGMENT","worldCoords","Float32Array","viewCoords","drawHandles","ctx","segments","matrix","settings","zoom","size","handleSize","half","pX","pY","drawHandle","j","hX","Math","round","hY","text","beginPath","strokeStyle","handleColor","fillStyle","moveTo","lineTo","stroke","arc","PI","fill","drawCoords","globalAlpha","fillText","measureText","width","segment","_transformCoordinates","state","_selectionState","nodeColor","fillRect","font","handleFont","_drawSelected","_segments","_project","_scope","_view","_zoom","fontBufferHandler","isWorkerBusy","data","ArrayBuffer","latestBuffer","addToFonts","latestWorkerValues","worker","postMessage","type","latestSubset","shell","_","URL","webkitURL","instance","load","opts","fontUrl","prototypoUrl","Promise","all","fontSource","prototypoSource","map","url","fetch","then","results","fontObj","JSON","parse","workerUrl","encodeURIComponent","createObjectURL","Blob","toString","resolve","Worker","onmessage","forEach","key","glyphs","solvingOrder","changeFont","values","loadFont","prototypo","utils","paper","setup","canvas","setAttribute","shoNodes","zoomFactor","jQueryListeners","view","center","project","activeLayer","applyMatrix","scale","_fill","_showNodes","showNodes","fontRegister","parametricFont","fontinfo","familyName","isMousedown","bind","$","jQuery","on","wheelHandler","moveHandler","downHandler","document","upHandler","raf","requestAnimationFrame","webkitRequestAnimationFrame","updateLoop","latestRafValues","currGlyph","update","defineProperties","prototype","get","set","bool","displayGlyph","showCoords","subset","currSubset","saveSubset","event","bcr","getBoundingClientRect","currPos","Point","clientX","left","clientY","top","viewPos","viewToProject","factor","abs","deltaY","deltaMode","newZoom","beta","difference","subtract","newCenter","multiply","preventDefault","delta","prevPos","divide","button","zoomIn","zoomOut","_glyph","glyph","glyphMap","visible","components","component","latestValues","fillColor","strokeWidth","contours","contour","fullySelected","skeleton","_needsUpdate","displayChar","latestChar","charMap","charCodeAt","download","name","cb","fontCb","openInGlyphr","PaperScope","Path","importScripts","decodeURIComponent","location","search","replace","handlers","currValues","height","Font","buffer","ot","toBuffer","solvingOrders","params","_updateVersion","updateOTCommands","prevGlyphs","filter","indexOf"],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n","// Path#_selectedSegmentState is the addition of all segment's states, and is\n// compared with SelectionState.SEGMENT, the combination of all SelectionStates\n// to see if all segments are fully selected.\nvar SelectionState = {\n\t\tHANDLE_IN: 1,\n\t\tHANDLE_OUT: 2,\n\t\tPOINT: 4,\n\t\tSEGMENT: 7 // HANDLE_IN | HANDLE_OUT | POINT\n\t},\n\tworldCoords = new Float32Array(6),\n\tviewCoords = new Float32Array(6);\n\nfunction drawHandles(ctx, segments, matrix, settings, zoom) {\n\tvar size = settings.handleSize,\n\t\thalf = size / 2,\n\t\tpX,\n\t\tpY;\n\n\tfunction drawHandle(j) {\n\t\tvar hX = Math.round( viewCoords[j] ),\n\t\t\thY = Math.round( viewCoords[j + 1] ),\n\t\t\ttext;\n\n\t\tif ( viewCoords[0] !== viewCoords[j] ||\n\t\t\t\tviewCoords[1] !== viewCoords[j + 1]) {\n\n\t\t\tctx.beginPath();\n\t\t\tctx.strokeStyle = settings.handleColor;\n\t\t\tctx.fillStyle = settings.handleColor;\n\t\t\tctx.moveTo(pX, pY);\n\t\t\tctx.lineTo(hX, hY);\n\t\t\tctx.stroke();\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\tctx.fill();\n\n\t\t\tif ( settings.drawCoords ) {\n\t\t\t\ttext = Math.round( worldCoords[j] ) + ',' +\n\t\t\t\t\tMath.round( worldCoords[j + 1] );\n\n\t\t\t\t// use alpha to reduce the clutter caused by all this text when\n\t\t\t\t// zooming out\n\t\t\t\tif ( zoom < 1.7 ) {\n\t\t\t\t\tctx.globalAlpha = 0.2;\n\t\t\t\t} else if ( zoom < 3 ) {\n\t\t\t\t\tctx.globalAlpha = 0.4;\n\t\t\t\t}\n\t\t\t\tctx.fillText(\n\t\t\t\t\ttext,\n\t\t\t\t\thX - half - 3 - ctx.measureText(text).width,\n\t\t\t\t\t// The text is slightly above the marker. This avoids\n\t\t\t\t\t// overlapping when the handle vector is horizontal, which\n\t\t\t\t\t// is quite a frequent case.\n\t\t\t\t\thY - 2\n\t\t\t\t);\n\t\t\t\tif ( zoom < 3 ) {\n\t\t\t\t\tctx.globalAlpha = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\tvar segment = segments[i];\n\t\tsegment._transformCoordinates(null, worldCoords, false);\n\t\tsegment._transformCoordinates(matrix, viewCoords, false);\n\t\tvar state = segment._selectionState;\n\t\tpX = Math.round( viewCoords[0] );\n\t\tpY = Math.round( viewCoords[1] );\n\t\tif ( state & /*#=*/ SelectionState.HANDLE_IN ) {\n\t\t\tdrawHandle(2);\n\t\t}\n\t\tif ( state & /*#=*/ SelectionState.HANDLE_OUT ) {\n\t\t\tdrawHandle(4);\n\t\t}\n\t\t// Draw a rectangle at segment.point:\n\t\tctx.fillStyle = settings.nodeColor;\n\t\tctx.fillRect( pX - half, pY - half, size, size );\n\t\tctx.font = settings.handleFont;\n\n\t\tif ( settings.drawCoords ) {\n\t\t\tif ( zoom < 1.7 ) {\n\t\t\t\tctx.globalAlpha = 0.4;\n\t\t\t}\n\t\t\tctx.fillText(\n\t\t\t\tMath.round( worldCoords[0] ) + ',' +\n\t\t\t\tMath.round( worldCoords[1] ),\n\t\t\t\tpX + half + 5,\n\t\t\t\tpY - 2\n\t\t\t);\n\t\t\tif ( zoom < 1.7 ) {\n\t\t\t\tctx.globalAlpha = 1;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction _drawSelected( ctx, matrix ) {\n\tctx.beginPath();\n\t// Now stroke it and draw its handles:\n\tctx.stroke();\n\tdrawHandles(\n\t\tctx,\n\t\tthis._segments,\n\t\tmatrix,\n\t\tthis._project._scope.settings,\n\t\tthis._project._view._zoom\n\t);\n}\n\nmodule.exports = { _drawSelected: _drawSelected };\n","// var dotsvgTemplate = require('./dotsvg.tpl');\n\n// handles buffers coming from the worker\nmodule.exports = function fontBufferHandler(e) {\n\t// prevent the worker to be stuck with a busy flag if this method throws\n\tthis.isWorkerBusy = false;\n\n\t// if ( 'type' in e.data ) {\n\t// \tif ( e.data.type === 'otfFont' ) {\n\t// \t\tthis.font.download( this.latestBuffer );\n\t// \t}\n\t//\n\t// \tif ( typeof this.fontCb === 'function' ) {\n\t// \t\tthis.fontCb();\n\t// \t}\n\t//\n\t// \tthis.fontCb = false;\n\t// }\n\n\tif ( !(e.data instanceof ArrayBuffer) ) {\n\t\treturn;\n\t}\n\n\tthis.latestBuffer = e.data;\n\tthis.font.addToFonts( e.data );\n\n\t// process latest Values\n\tif ( this.latestWorkerValues ) {\n\t\tthis.isWorkerBusy = true;\n\t\tthis.worker.postMessage({\n\t\t\ttype: 'update',\n\t\t\tdata: this.latestWorkerValues\n\t\t});\n\n\t\tdelete this.latestWorkerValues;\n\n\t} else if ( this.latestSubset ) {\n\t\tthis.isWorkerBusy = true;\n\t\tthis.worker.postMessage({\n\t\t\ttype: 'subset',\n\t\t\tdata: this.latestSubset\n\t\t});\n\n\t\tdelete this.latestSubset;\n\t}\n};\n","var shell = require('./worker'),\n\tassign = require('es6-object-assign').assign;\n\nvar _ = { assign: assign },\n\tURL = typeof window !== 'undefined' && ( window.URL || window.webkitURL );\n\nvar worker,\n\tinstance;\n\nfunction load( opts ) {\n\tvar PrototypoCanvas = this;\n\n\topts = _.assign({\n\t\tfontUrl: 'font.json',\n\t\tprototypoUrl: 'prototypo.js'\n\t}, opts);\n\n\t// if the sources are provided\n\treturn Promise.all([\n\t\t!opts.fontSource && opts.fontUrl,\n\t\t!opts.prototypoSource && opts.prototypoUrl\n\t].map(function( url ) {\n\t\t// only fetch the resources if we have just the url, not the source\n\t\treturn url && fetch( url );\n\n\t})).then(function( results ) {\n\t\t// parse fetched resources\n\t\treturn Promise.all([\n\t\t\tresults[0] && results[0].text(),\n\t\t\tresults[1] && results[1].text()\n\t\t]);\n\n\t}).then(function( results ) {\n\t\tif ( results[0] ) {\n\t\t\topts.fontSource = results[0];\n\t\t}\n\t\tif ( results[1] ) {\n\t\t\topts.prototypoSource = results[1];\n\t\t}\n\n\t\topts.fontObj = JSON.parse( opts.fontSource );\n\t\t// the worker can be created by specifying the URL of the complete\n\t\t// file (dev environment), or by creating\n\t\tif ( opts.workerUrl ) {\n\t\t\t// The search fragment of workerUrl must include prototypo.js URL\n\t\t\topts.workerUrl +=\n\t\t\t\t'?bundleurl=' + encodeURIComponent( opts.prototypoUrl );\n\t\t} else {\n\t\t\topts.workerUrl = URL.createObjectURL(\n\t\t\t\tnew Blob([\n\t\t\t\t\topts.prototypoSource + ';\\n\\n' +\n\t\t\t\t\t// IIFE power\n\t\t\t\t\t'(' + shell.toString() + ')();' +\n\t\t\t\t\t// For some reason [object Object] is appended to the source\n\t\t\t\t\t// by Firefox when the worker is created, which causes the\n\t\t\t\t\t// script to throw without the following comment.\n\t\t\t\t\t'//',\n\t\t\t\t\t{ type: 'text/javascript' }\n\t\t\t\t])\n\t\t\t);\n\t\t}\n\n\t\t// create the worker\n\t\treturn new Promise(function( resolve ) {\n\t\t\tworker = new Worker( opts.workerUrl );\n\n\t\t\tworker.onmessage = function(e) {\n\t\t\t\t// load the font\n\t\t\t\tif ( e.data.type === 'ready' ) {\n\t\t\t\t\tworker.postMessage({\n\t\t\t\t\t\ttype: 'font',\n\t\t\t\t\t\tdata: opts.fontSource\n\t\t\t\t\t});\n\n\t\t\t\t// reuse the solvingOrders computed in the worker (this is a\n\t\t\t\t// fairly heavy operation, better doing it only once,\n\t\t\t\t// asynchronously)\n\t\t\t\t} else if ( e.data.type === 'solvingOrders' ) {\n\t\t\t\t\topts.worker = worker;\n\t\t\t\t\t// merge solvingOrders with the source\n\t\t\t\t\tObject.keys( e.data.data ).forEach(function(key) {\n\t\t\t\t\t\tif ( e.data.data[key] ) {\n\t\t\t\t\t\t\topts.fontObj.glyphs[key].solvingOrder =\n\t\t\t\t\t\t\t\te.data.data[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t// We're done with the asynchronous stuff!\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t}).then(function() {\n\t\tinstance = new PrototypoCanvas( opts );\n\t\treturn instance;\n\t});\n}\n\nfunction changeFont( opts, values ) {\n\n\treturn Promise.all([\n\t\t!opts.fontSource && opts.fontUrl\n\t].map(function( url ) {\n\t\t// only fetch the resources if we have just the url, not the source\n\t\treturn url && fetch( url );\n\n\t})).then(function( results ) {\n\t\t// parse fetched resources\n\t\treturn Promise.all([\n\t\t\tresults[0] && results[0].text()\n\t\t]);\n\n\t}).then(function( results ) {\n\t\tif ( results[0] ) {\n\t\t\topts.fontSource = results[0];\n\t\t}\n\n\t\topts.fontObj = JSON.parse( opts.fontSource );\n\t\treturn new Promise(function( resolve ) {\n\n\t\t\tworker.postMessage({\n\t\t\t\ttype: 'font',\n\t\t\t\tdata: opts.fontSource\n\t\t\t});\n\n\t\t\tworker.onmessage = function(e) {\n\t\t\t\t// load the font\n\t\t\t\tif ( e.data.type === 'solvingOrders' ) {\n\t\t\t\t\topts.worker = worker;\n\t\t\t\t\t// merge solvingOrders with the source\n\t\t\t\t\tObject.keys( e.data.data ).forEach(function(key) {\n\t\t\t\t\t\tif ( e.data.data[key] ) {\n\t\t\t\t\t\t\topts.fontObj.glyphs[key].solvingOrder =\n\t\t\t\t\t\t\t\te.data.data[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t// We're done with the asynchronous stuff!\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t}).then(function() {\n\t\tinstance.loadFont( opts );\n\t});\n}\n\nmodule.exports = {\n\tload: load,\n\tchangeFont: changeFont\n};\n","var prototypo = (typeof window !== \"undefined\" ? window['prototypo'] : typeof global !== \"undefined\" ? global['prototypo'] : null),\n\tassign = require('es6-object-assign').assign,\n\t// Grid = require('./grid'),\n\tfontBufferHandler = require('./fontBufferHandler'),\n\t_drawSelected = require('./drawNodes')._drawSelected,\n\tutils = require('./load'),\n\tload = utils.load,\n\tchangeFont = utils.changeFont;\n\nvar _ = { assign: assign },\n\tpaper = prototypo.paper;\n\n// constructor\nfunction PrototypoCanvas( opts ) {\n\tpaper.setup( opts.canvas );\n\t// enable pointerevents on the canvas\n\topts.canvas.setAttribute('touch-action', 'none');\n\n\tthis.opts = _.assign({\n\t\tfill: true,\n\t\tshoNodes: false,\n\t\tzoomFactor: 0.05,\n\t\tjQueryListeners: true\n\t}, opts);\n\n\tthis.canvas = opts.canvas;\n\tthis.view = paper.view;\n\tthis.view.center = [ 0, 0 ];\n\tthis.project = paper.project;\n\tthis.project.activeLayer.applyMatrix = false;\n\tthis.project.activeLayer.scale( 1, -1 );\n\tthis.worker = opts.worker;\n\tthis._fill = this.opts.fill;\n\tthis._showNodes = this.opts.showNodes;\n\tthis.fontRegister = {};\n\n\t// this.grid = new Grid( paper );\n\n\tthis.font = prototypo.parametricFont( opts.fontObj );\n\tthis.fontRegister[opts.fontObj.fontinfo.familyName] = this.font;\n\tthis.isMousedown = false;\n\n\tif ( this.worker ) {\n\t\tthis.worker.onmessage = fontBufferHandler.bind(this);\n\t}\n\n\t// jQuery is an optional dependency\n\tif ( ( 'jQuery' in window ) && this.opts.jQueryListeners ) {\n\t\tvar $ = window.jQuery,\n\t\t\ttype = ( 'PointerEventsPolyfill' in window ) ||\n\t\t\t\t( 'PointerEvent' in window ) ? 'pointer' : 'mouse';\n\n\t\t$(opts.canvas).on( 'wheel', this.wheelHandler.bind(this) );\n\n\t\t$(opts.canvas).on( type + 'move', this.moveHandler.bind(this) );\n\n\t\t$(opts.canvas).on( type + 'down', this.downHandler.bind(this) );\n\n\t\t$(document).on( type + 'up', this.upHandler.bind(this) );\n\t}\n\n\tvar raf = window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame,\n\t\tupdateLoop = function() {\n\t\t\traf(updateLoop);\n\n\t\t\tif ( !this.latestRafValues || !this.currGlyph ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.font.update( this.latestRafValues, [ this.currGlyph ] );\n\t\t\tthis.view.update();\n\t\t\tdelete this.latestRafValues;\n\n\t\t}.bind(this);\n\tupdateLoop();\n}\n\nObject.defineProperties( PrototypoCanvas.prototype, {\n\tzoom: {\n\t\tget: function() {\n\t\t\treturn this.view.zoom;\n\t\t},\n\t\tset: function( zoom ) {\n\t\t\tthis.view.zoom = zoom;\n\t\t\t// this.grid.zoom = zoom;\n\t\t}\n\t},\n\tfill: {\n\t\tget: function() {\n\t\t\treturn this._fill;\n\t\t},\n\t\tset: function( bool ) {\n\t\t\tthis._fill = bool;\n\t\t\tthis.displayGlyph();\n\t\t}\n\t},\n\tshowNodes: {\n\t\tget: function() {\n\t\t\treturn this._showNodes;\n\t\t},\n\t\tset: function( bool ) {\n\t\t\tthis._showNodes = bool;\n\t\t\tthis.displayGlyph();\n\t\t}\n\t},\n\tshowCoords: {\n\t\tget: function() {\n\t\t\treturn paper.settings.drawCoords;\n\t\t},\n\t\tset: function( bool ) {\n\t\t\tpaper.settings.drawCoords = bool;\n\t\t\tthis.displayGlyph();\n\t\t}\n\t},\n\tsubset: {\n\t\tget: function() {\n\t\t\treturn this.font.subset;\n\t\t},\n\t\tset: function( set ) {\n\t\t\tif ( this.worker && !this.isWorkerBusy ) {\n\t\t\t\tif ( this.currSubset !== undefined ) {\n\t\t\t\t\t// block updates\n\t\t\t\t\tthis.isWorkerBusy = true;\n\t\t\t\t}\n\n\t\t\t\tthis.worker.postMessage({\n\t\t\t\t\ttype: 'subset',\n\t\t\t\t\tdata: set\n\t\t\t\t});\n\n\t\t\t// if the worker is already busy, store the latest values so that we\n\t\t\t// can eventually update the font with the latest values\n\t\t\t} else {\n\t\t\t\tthis.latestSubset = set;\n\t\t\t\tthis.saveSubset = set;\n\t\t\t}\n\n\t\t\tthis.font.subset = this.currSubset = set;\n\t\t}\n\t}\n});\n\nPrototypoCanvas.prototype.wheelHandler = function( event ) {\n\tvar bcr = this.canvas.getBoundingClientRect(),\n\t\tcurrPos = new paper.Point(\n\t\t\tevent.clientX - bcr.left,\n\t\t\tevent.clientY - bcr.top\n\t\t),\n\t\tviewPos = this.view.viewToProject( currPos ),\n\t\t// normalize the deltaY value. Expected values are ~40 pixels or 3 lines\n\t\tfactor = 1 + ( this.opts.zoomFactor *\n\t\t\t( Math.abs( event.deltaY / event.deltaMode ? 3 : 40 * 20 ) ) ),\n\t\tnewZoom =\n\t\t\tevent.deltaY < 0 ?\n\t\t\t\tthis.view.zoom * factor :\n\t\t\t\tevent.deltaY > 0 ?\n\t\t\t\t\tthis.view.zoom / factor :\n\t\t\t\t\tthis.view.zoom,\n\t\tbeta = this.view.zoom / newZoom,\n\t\tdifference = viewPos.subtract( this.view.center ),\n\t\tnewCenter = viewPos.subtract( difference.multiply(beta) );\n\n\tthis.zoom = newZoom;\n\tthis.view.center = newCenter;\n\n\tevent.preventDefault();\n};\n\nPrototypoCanvas.prototype.moveHandler = function(event) {\n\tif ( !this.isMousedown ) {\n\t\treturn;\n\t}\n\n\tvar currPos = new paper.Point( event.clientX, event.clientY ),\n\t\tdelta = currPos.subtract( this.prevPos );\n\n\tthis.prevPos = currPos;\n\n\tthis.view.center = this.view.center.subtract(\n\t\t\tdelta.divide( this.view.zoom ) );\n};\n\nPrototypoCanvas.prototype.downHandler = function(event) {\n\tif (event.button && event.button !== 0) {\n\t\treturn;\n\t}\n\n\tthis.isMousedown = true;\n\tthis.prevPos = new paper.Point( event.clientX, event.clientY );\n};\n\nPrototypoCanvas.prototype.upHandler = function() {\n\tthis.isMousedown = false;\n};\n\nPrototypoCanvas.prototype.zoomIn = function() {\n\tthis.zoom = this.view.zoom * 1 + this.opts.zoomFactor;\n};\n\nPrototypoCanvas.prototype.zoomOut = function() {\n\tthis.zoom = this.view.zoom / 1 + this.opts.zoomFactor;\n};\n\nPrototypoCanvas.prototype.displayGlyph = function( _glyph ) {\n\tvar glyph =\n\t\t\t// no glyph means we're switching fill mode for the current glyph\n\t\t\t_glyph === undefined ? this.currGlyph :\n\t\t\t// accept glyph name and glyph object\n\t\t\ttypeof _glyph === 'string' ? this.font.glyphMap[_glyph] :\n\t\t\t_glyph;\n\n\tif ( glyph === undefined ) {\n\t\treturn;\n\t}\n\n\t// hide previous glyph\n\tif ( this.currGlyph && this.currGlyph !== glyph ) {\n\t\tthis.currGlyph.visible = false;\n\t\tthis.currGlyph.components.forEach(function(component) {\n\t\t\tcomponent.visible = false;\n\t\t}, this);\n\t}\n\n\tthis.currGlyph = glyph;\n\n\t// make sure the glyph is up-to-update\n\tif ( _glyph && this.latestValues ) {\n\t\tthis.currGlyph.update( this.latestValues );\n\t}\n\n\t// .. and show it\n\tthis.currGlyph.visible = true;\n\n\tif ( this._fill ) {\n\t\tthis.currGlyph.fillColor = '#333333';\n\t\tthis.currGlyph.strokeWidth = 0;\n\t} else {\n\t\tthis.currGlyph.fillColor = null;\n\t\tthis.currGlyph.strokeWidth = 1;\n\t}\n\n\tthis.currGlyph.contours.forEach(function(contour) {\n\t\tcontour.fullySelected = this._showNodes && !contour.skeleton;\n\t}, this);\n\n\tthis.currGlyph.components.forEach(function(component) {\n\t\tcomponent.visible = true;\n\t\tcomponent.contours.forEach(function(contour) {\n\t\t\tcontour.fullySelected = this._showNodes && !contour.skeleton;\n\t\t}, this);\n\t}, this);\n\n\tthis.view._project._needsUpdate = true;\n\tthis.view.update();\n};\n\nPrototypoCanvas.prototype.displayChar = function( code ) {\n\tthis.latestChar = code;\n\tthis.displayGlyph( typeof code === 'string' ?\n\t\tthis.font.charMap[ code.charCodeAt(0) ] : code\n\t);\n};\n\nPrototypoCanvas.prototype.update = function( values ) {\n\t// latestValues are used in displayGlyph\n\t// latestWorkerValues is used and disposed by th/sue fontBufferHandler\n\t// latestRafValues is used and disposed by the raf loop\n\t// so we need all three!\n\tthis.latestValues = this.latestRafValues = values;\n\n\tif ( this.worker && !this.isWorkerBusy ) {\n\t\t// block updates\n\t\tthis.isWorkerBusy = true;\n\n\t\tthis.worker.postMessage({\n\t\t\ttype: 'update',\n\t\t\tdata: values\n\t\t});\n\n\t// if the worker is already busy, store the latest values so that we can\n\t// eventually update the font with the latest values\n\t} else {\n\t\tthis.latestWorkerValues = values;\n\t}\n};\n\nPrototypoCanvas.prototype.download = function( name, cb ) {\n\tif ( !this.worker || !this.latestValues || this.fontCb ) {\n\t\t// the UI should wait for the first update to happen before allowing\n\t\t// the download button to be clicked\n\t\treturn;\n\t}\n\n\tthis.fontCb = cb || true;\n\tthis.isWorkerBusy = true;\n\n\t// We don't care if the worker is busy here\n\tthis.worker.postMessage({\n\t\ttype: 'otfFont'\n\t});\n};\n\nPrototypoCanvas.prototype.openInGlyphr = function( cb ) {\n\tif ( !this.worker || !this.latestValues || this.fontCb ) {\n\t\t// the UI should wait for the first update to happen before allowing\n\t\t// the download button to be clicked\n\t\treturn;\n\t}\n\n\t// We don't care if the worker is busy here\n\tthis.fontCb = cb || true;\n\tthis.isWorkerBusy = true;\n\n\t// We don't care if the worker is busy here\n\tthis.worker.postMessage({\n\t\ttype: 'svgFont'\n\t});\n};\n\nPrototypoCanvas.prototype.changeFont = function( opts ) {\n\treturn changeFont( opts );\n}\n\nPrototypoCanvas.prototype.loadFont = function( opts ) {\n\tthis.worker.onmessage = fontBufferHandler.bind(this);\n\tif ( this.fontRegister[opts.fontObj.fontinfo.familyName] ) {\n\t\tthis.font = this.fontRegister[opts.fontObj.fontinfo.familyName];\n\t} else {\n\t\tthis.font = prototypo.parametricFont( opts.fontObj );\n\t\tthis.fontRegister[opts.fontObj.fontinfo.familyName] = this.font;\n\t}\n\n\t// Ok I think I know how it works now.\n\t// getGlyphSubset return a whole subset when you call update in the worker (don't know why)\n\t// So if the font is not complete when you call update the font is incomplete and\n\t// cannot be loaded with window.FontFace.\n\t// When you load an incomplete font you have to call the subset getter to load the font\n\t// properly\n\t// displayChar is called to update the whole glyph in canvas.\n\tthis.update( this.latestValues, this.subset );\n\tthis.subset = this.saveSubset;\n\tthis.displayChar( this.latestChar );\n}\n\nPrototypoCanvas.load = load;\n\n// overwrite the appearance of #selected items in paper.js\npaper.PaperScope.prototype.Path.prototype._drawSelected = _drawSelected;\n_.assign( paper.settings, {\n\thandleSize: 6,\n\thandleColor: '#FF725E',\n\tnodeColor: '#00C4D6',\n\tdrawCoords: false,\n\thandleFont: '12px monospace'\n});\n\nmodule.exports = PrototypoCanvas;\n","if ( typeof global === 'undefined' && 'importScripts' in self ) {\n\t// When the worker is loaded by URL, the search fragment must include\n\t// the URL of prototypo.js\n\tself.importScripts( decodeURIComponent(\n\t\tself.location.search.replace(/(\\?|&)bundleurl=(.*?)(&|$)/, '$2')\n\t) );\n}\n\nfunction worker() {\n\tvar font,\n\t\thandlers = {},\n\t\tfontRegister = {},\n\t\tcurrValues,\n\t\tcurrSubset = [];\n\n\tself.postMessage({ type: 'ready' });\n\n\tprototypo.paper.setup({\n\t\twidth: 1024,\n\t\theight: 1024\n\t});\n\n\t// Overwrite addToFonts to send the buffer over to the UI\n\tprototypo.paper.Font.prototype.addToFonts = function() {\n\t\tvar buffer = this.ot.toBuffer();\n\t\tself.postMessage( buffer, [ buffer ] );\n\t};\n\n\t// mini router\n\tself.onmessage = function(e) {\n\t\thandlers[ e.data.type ]( e.data.data );\n\t};\n\n\thandlers.font = function( fontSource ) {\n\t\tvar fontObj = JSON.parse( fontSource );\n\n\t\tif ( fontRegister[fontObj.fontinfo.familyName] ) {\n\t\t\tfont = fontRegister[fontObj.fontinfo.familyName];\n\t\t} else {\n\t\t\tfont = prototypo.parametricFont(fontObj);\n\t\t\tfontRegister[fontObj.fontinfo.familyName] = font;\n\t\t}\n\n\t\tvar solvingOrders = {};\n\t\tObject.keys( font.glyphMap ).forEach(function(key) {\n\t\t\tsolvingOrders[key] = font.glyphMap[key].solvingOrder;\n\t\t});\n\n\t\tself.postMessage({\n\t\t\ttype: 'solvingOrders',\n\t\t\tdata: solvingOrders\n\t\t});\n\t};\n\n\thandlers.update = function( params ) {\n\t\tcurrValues = params;\n\t\t// invalidate the previous subset\n\t\tcurrSubset = [];\n\n\t\tfont.update( params );\n\t\t// the following is required so that the globalMatrix of glyphs takes\n\t\t// the font matrix into account. I assume this is done in the main\n\t\t// thread when calling view.update();\n\t\tfont._project._updateVersion++;\n\t\tfont.updateOTCommands()\n\t\t\t.addToFonts();\n\t};\n\n\thandlers.subset = function( set ) {\n\t\tvar prevGlyphs = currSubset.map(function( glyph ) {\n\t\t\treturn glyph.name;\n\t\t});\n\t\tfont.subset = set;\n\t\tcurrSubset = font.subset;\n\n\t\t// search for glyphs *added* to the subset\n\t\tcurrSubset.filter(function( glyph ) {\n\t\t\treturn prevGlyphs.indexOf( glyph.name ) === -1;\n\n\t\t// update those glyphs\n\t\t}).forEach(function( glyph ) {\n\t\t\tglyph.update( currValues );\n\t\t\tglyph.updateOTCommands();\n\t\t});\n\n\t\t// Recreate the correct font.ot.glyphs array, without touching the ot\n\t\t// commands\n\t\tfont.updateOTCommands([]);\n\t\tfont.addToFonts();\n\t};\n}\n\n// When the worker is loaded from URL, worker() needs to be called explicitely\nif ( typeof global === 'undefined' && 'importScripts' in self ) {\n\tworker();\n} else {\n\tmodule.exports = worker;\n}\n"]}