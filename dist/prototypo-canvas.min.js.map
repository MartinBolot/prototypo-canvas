{"version":3,"file":"generated.js","sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/es6-object-assign/src/index.js","node_modules/prototypo.js/dist/prototypo.js","src/drawNodes.js","src/load.js","src/prototypo-canvas.js","src/worker.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","PrototypoCanvas","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"assign","target","firstSource","undefined","TypeError","to","Object","arguments","nextSource","keysArray","keys","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","polyfill","defineProperty","configurable","writable","value","prototypo","DepTree","nodes","prototype","add","node","dependants","Array","resolveNode","resolved","processing","deps","forEach","dep","indexOf","push","resolve",2,"baseAssign","createAssigner","assignWith","object","source","customizer","index","props","key","result","lodash._baseassign","lodash._createassigner","lodash.keys",3,"baseCopy","lodash._basecopy",4,5,"bindCallback","isIterateeCall","restParam","assigner","sources","guard","thisArg","lodash._bindcallback","lodash._isiterateecall","lodash.restparam",6,"func","argCount","identity","collection","accumulator","other","apply",7,"reIsUint","MAX_SAFE_INTEGER","baseProperty","getLength","isArrayLike","isLength","isIndex","test","isObject","type",8,"FUNC_ERROR_TEXT","nativeMax","Math","max","start","args","rest","otherArgs",9,"getNative","isArguments","isArray","objectProto","hasOwnProperty","nativeKeys","shimKeys","keysIn","propsLength","allowIndexes","Ctor","constructor","isProto","skipIndexes","lodash._getnative","lodash.isarguments","lodash.isarray",10,"funcTag","reRegExpChars","reHasRegExpChars","RegExp","reIsHostCtor","baseToString","isObjectLike","fnToString","Function","toString","objToString","reIsNative","escapeRegExp","replace","isNative","string",11,"argsTag",12,"arrayTag","nativeIsArray",13,"baseClone","clone","isDeep","lodash._baseclone",14,"arrayCopy","arrayEach","baseFor","boolTag","dateTag","errorTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","weakMapTag","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reFlags","cloneableTags","ArrayBuffer","bufferSlice","floor","Uint8Array","Float64Array","FLOAT64_BYTES_PER_ELEMENT","BYTES_PER_ELEMENT","stackA","stackB","isArr","initCloneArray","tag","isFunc","initCloneObject","initCloneByTag","baseForOwn","subValue","iteratee","bufferClone","buffer","constant","byteLength","floatLength","offset","view","set","array","input","byteOffset","exec","lastIndex","lodash._arraycopy","lodash._arrayeach","lodash._basefor",15,16,17,"dup",18,19,"createBaseFor","fromRight","keysFunc","iterable","toObject",20,21,22,23,24,25,26,"plumin","opentype","argument","predicate","message","assert","line","ctx","x1","y1","x2","y2","beginPath","moveTo","lineTo","stroke","cffStandardStrings","cffStandardEncoding","cffExpertEncoding","standardNames","DefaultEncoding","font","charToGlyphIndex","c","charCodeAt","glyphs","glyph","j","unicodes","CmapEncoding","cmap","glyphIndexMap","CffEncoding","encoding","charset","charName","GlyphNames","post","version","names","slice","numberOfGlyphs","glyphNameIndex","nameToGlyphIndex","name","glyphIndexToName","gid","addGlyphNames","tables","charCodes","glyphIndex","addUnicode","parseInt","cffEncoding","glyphNames","path","sfnt","Font","options","familyName","styleName","designer","designerURL","manufacturer","manufacturerURL","license","licenseURL","description","copyright","trademark","unitsPerEm","ascender","descender","supported","hasChar","charToGlyph","stringToGlyphs","nameToGlyph","nametoGlyphIndex","getKerningValue","leftGlyph","rightGlyph","gposKerning","getGposKerningValue","kerningPairs","forEachGlyph","text","x","y","fontSize","callback","kerning","fontScale","advanceWidth","kerningValue","getPath","fullPath","Path","gX","gY","gFontSize","glyphPath","extend","draw","drawPoints","drawMetrics","validate","warnings","_this","assertStringAttribute","attrName","trim","toTables","fontToTable","toBuffer","sfntTable","bytes","encode","intArray","download","fileName","requestFileSystem","webkitRequestFileSystem","TEMPORARY","fs","root","getFile","create","fileEntry","createWriter","writer","dataView","DataView","blob","Blob","write","addEventListener","location","href","toURL","err","./encoding","./path","./tables/sfnt","check","Glyph","unicode","xMin","yMin","xMax","yMax","scale","p","commands","cmd","quadraticCurveTo","curveTo","closePath","getContours","points","contours","currentContour","pt","lastPointOfContour","getMetrics","xCoords","yCoords","metrics","min","leftSideBearing","rightSideBearing","drawCircles","PI_SQ","PI","arc","fill","blueCircles","redCircles","fillStyle","lineWidth","strokeStyle","./check","./draw","_font","parse","cff","glyf","gpos","head","hhea","hmtx","kern","loca","maxp","_name","os2","toArrayBuffer","arrayBuffer","data","loadFromFile","readFile","loadFromUrl","url","request","XMLHttpRequest","open","responseType","onload","status","statusText","response","send","parseBuffer","indexToLocFormat","hmtxOffset","glyfOffset","locaOffset","cffOffset","kernOffset","gposOffset","getFixed","outlinesFormat","getTag","numTables","getUShort","getULong","numberOfHMetrics","numGlyphs","fontFamily","fontSubfamily","shortVersion","locaTable","load","isNode","loadFn","_parse","./font","./glyph","./parse","./tables/cff","./tables/cmap","./tables/glyf","./tables/gpos","./tables/head","./tables/hhea","./tables/hmtx","./tables/kern","./tables/loca","./tables/maxp","./tables/name","./tables/os2","./tables/post","getByte","getUint8","getCard8","getUint16","getCard16","getShort","getInt16","getUint32","decimal","fraction","String","fromCharCode","getInt8","getOffset","offSize","v","getBytes","startOffset","endOffset","bytesToString","typeOffsets","byte","uShort","short","uLong","fixed","longDateTime","Parser","relativeOffset","parseByte","parseChar","parseCard8","parseUShort","parseCard16","parseSID","parseOffset16","parseShort","parseF2Dot14","parseULong","parseFixed","parseOffset16List","parseUShortList","count","offsets","parseString","parseTag","parseLongDateTime","parseVersion","major","minor","skip","amount","strokeWidth","bezierCurveTo","quadTo","close","pathOrCommands","toPathData","decimalPlaces","floatToString","round","toFixed","packValues","d","toSVG","svg","sizeOf","Table","tableName","fields","field","optionKeys","k","sizeOfFunction","TABLE","./types","_glyph","table","equals","b","parseCFFIndex","conversionFn","objects","objectOffset","offsetSize","pos","parseFloatOperand","parser","eof","lookup","n1","n2","parseFloat","parseOperand","b0","b1","b2","b3","b4","entriesToObject","entries","values","parseCFFDict","size","operands","op","getCFFString","strings","interpretDict","dict","meta","newDict","m","parseCFFHeader","header","formatMajor","formatMinor","TOP_DICT_META","PRIVATE_DICT_META","parseCFFTopDict","parseCFFPrivateDict","parseCFFCharset","nGlyphs","sid","format","parseCFFEncoding","enc","nCodes","nRanges","first","nLeft","parseCFFCharstring","c1x","c1y","c2x","c2y","stack","nStems","haveWidth","width","defaultWidthX","newContour","parseStems","hasWidthArg","shift","nominalWidthX","codeIndex","subrCode","jpx","jpy","c3x","c3y","c4x","c4y","pop","subrsBias","subrs","abs","console","log","gsubrsBias","gsubrs","calcCFFSubroutineBias","bias","parseCFFTable","nameIndex","topDictIndex","stringIndex","globalSubrIndex","topDictData","topDict","privateDictOffset","privateDict","subrOffset","subrIndex","charStringsIndex","charStrings","charString","encodeString","makeHeader","makeNameIndex","fontNames","makeDict","attrs","entry","makeTopDict","makeTopDictIndex","topDicts","makeStringIndex","makeGlobalSubrIndex","makeCharsets","glyphName","glyphSID","glyphToOps","ops","dx","dy","_13","_23","dx1","dy1","dx2","dy2","makeCharStringsIndex","makePrivateDict","makePrivateDictIndex","privateDicts","makeCFFTable","fullName","weight","weightName","private","privateAttrs","postScriptName","charsets","privateDictIndex","make","../encoding","../glyph","../parse","../path","../table","parseCmapTable","platformId","encodingId","language","segCount","endCountParser","startCountParser","idDeltaParser","idRangeOffsetParser","glyphIndexOffset","endCount","startCount","idDelta","idRangeOffset","addSegment","segments","end","delta","addTerminatorSegment","makeCmapTable","sort","segCountX2","searchRange","pow","entrySelector","rangeShift","endCounts","startCounts","idDeltas","idRangeOffsets","glyphIds","segment","concat","glyphId","../check","parseGlyphCoordinate","flag","previousValue","shortVectorBitMask","sameBitMask","parseGlyph","numberOfContours","flags","endPointIndices","instructionLength","instructions","numberOfCoordinates","repeatCount","point","onCurve","px","py","isComposite","components","moreComponents","component","xScale","scale01","scale10","yScale","transformPoints","transform","newPoints","newPt","contour","firstPt","lastPt","curvePt","realFirstPoint","prevPt","midPt","parseGlyfTable","nextOffset","componentGlyph","transformedPoints","parseTaggedListTable","list","parseCoverageTable","coverage","begin","parseClassDefTable","startGlyph","glyphCount","classes","glyphID","rangeCount","startGlyphs","endGlyphs","classValues","parsePairPosSubTable","coverageOffset","valueFormat1","valueFormat2","value1","value2","sharedPairSets","pairSetCount","pairSet","pairSetOffsets","firstGlyph","pairSetOffset","sharedPairSet","pairValueCount","secondGlyph","pairs","classDef1Offset","classDef2Offset","class1Count","class2Count","getClass1","getClass2","kerningMatrix","kerningRow","covered","class1","class2","parseLookupTable","lookupType","lookupFlag","useMarkFilteringSet","subTableCount","subTableOffsets","markFilteringSet","subtables","parseGposTable","tableVersion","lookupListOffset","lookupCount","lookupTableOffsets","lookupListAbsoluteOffset","parseHeadTable","fontRevision","checkSumAdjustment","magicNumber","created","modified","macStyle","lowestRecPPEM","fontDirectionHint","glyphDataFormat","makeHeadTable","parseHheaTable","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","makeHheaTable","parseHmtxTable","numMetrics","makeHmtxTable","parseKernTable","subTableVersion","nPairs","leftIndex","rightIndex","parseLocaTable","parseFn","glyphOffsets","glyphOffset","parseMaxpTable","maxPoints","maxContours","maxCompositePoints","maxCompositeContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","makeMaxpTable","nameTableNames","parseNameTable","stringOffset","unknownCount","platformID","encodingID","languageID","nameID","property","codePoints","str","langTagCount","makeNameRecord","addMacintoshNameRecord","recordID","stringBytes","STRING","records","addWindowsNameRecord","utf16Bytes","UTF16","makeNameTable","../types","unicodeRanges","getUnicodeRange","range","parseOS2Table","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","achVendID","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContent","makeOS2Table","parsePostTable","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","nameLength","makePostTable","log2","computeCheckSum","sum","makeTableRecord","checkSum","makeSfntTable","highestPowerOf2","recordFields","tableFields","tableLength","tableRecord","isNaN","r1","r2","metricsForChar","chars","notFoundMetrics","average","vs","fontToSfntTable","xMins","yMins","xMaxs","yMaxs","advanceWidths","leftSideBearings","rightSideBearings","firstCharIndex","lastCharIndex","position","globals","advanceWidthAvg","maxLeftSideBearing","headTable","hheaTable","maxpTable","os2Table","hmtxTable","cmapTable","nameTable","uniqueID","preferredFamily","preferredSubfamily","postTable","cffTable","checkSumAdjusted","./cff","./cmap","./head","./hhea","./hmtx","./maxp","./name","./os2","./post","LIMIT16","LIMIT32","decode","BYTE","CHAR","CHARARRAY","USHORT","SHORT","UINT24","ULONG","LONG","FIXED","FWORD","UFWORD","LONGDATETIME","TAG","Card8","Card16","OffSize","SID","NUMBER","NUMBER16","NUMBER32","NAME","INDEX","dataSize","OBJECT","encodedOffsets","offsetEncoder","encodedOffset","DICT","OPERAND","OPERATOR","OP","wmm","WeakMap","CHARSTRING","has","get","encodingFunction","LITERAL","paper","noCanvas","process","browser","WorkerGlobalScope","Base","hidden","iter","bind","forIn","proto","__proto__","describe","obj","__lookupGetter__","__lookupSetter__","_define","__defineGetter__","__defineSetter__","inject","dest","src","beans","preserve","beansNames","val","substring","res","prev","bean","base","match","toLowerCase","isPlainObject","part","each","exclude","statics","ctor","initialize","pick","_id","_class","Formatter","instance","number","join","getClassName","exportJSON","toJSON","serialize","_set","dontCheck","orig","_filtering","obj1","obj2","checkKeys","o1","o2","read","peek","__index","readIndex","_readIndex","readNull","__read","remain","readAll","readNamed","getNamed","hasObject","filtered","_filtered","arg","_hasObject","hasNamed","isPlainValue","asString","compact","dictionary","formatter","precision","definitions","references","item","id","ref","unshift","_serialize","_compact","deserialize","json","_data","isRoot","isDictionary","JSON","stringify","importJSON","isTarget","Item","Layer","insert","splice","items","remove","append","_index","removed","capitalize","toUpperCase","camelize","all","chr","hyphenate","Emitter","on","_eventTypes","handlers","_callbacks","install","off","uninstall","once","emit","event","stop","responds","attach","detach","fire","_installEvents","events","_events","types","isString","PaperScope","settings","applyMatrix","handleSize","hitTolerance","project","projects","tools","palettes","_scopes","support","CanvasProvider","getContext","nativeDash","nativeBlendModes","BlendMode","nativeModes","release","navigator","userAgent","v1","v2","rv","chrome","versionNumber","webkit","atom","getView","getPaper","execute","PaperScript","View","updateFocus","scope","that","setup","element","Project","activate","clear","handleAttribute","el","attr","getAttribute","hasAttribute","PaperScopeItem","_scope","_list","_reference","isActive","multiplier","pair","val1","val2","separator","height","rectangle","Numerical","abscissas","weights","sqrt","TOLERANCE","EPSILON","MACHINE_EPSILON","KAPPA","isZero","integrate","w","A","B","Ax","findRoot","df","tolerance","fx","nx","solveQuadratic","roots","Infinity","D","gmC","mult","LOG10E","isFinite","R","q","solveCubic","c2","ec","x0","qd","tmp","Point","arg0","arg1","hasY","angle","setAngle","setLength","_angle","cos","sin","getAngle","getAngleInRadians","setAngleInRadians","getAngleInDegrees","setAngleInDegrees","atan2","div","NaN","dot","acos","getQuadrant","getDirectedAngle","cross","getDistance","squared","normalize","current","rotate","center","subtract","matrix","_transformPoint","multiply","divide","modulo","negate","isInside","Rectangle","contains","isClose","isColinear","isOrthogonal","point1","point2","random","LinkedPoint","owner","setter","_x","_y","_owner","_setter","_dontNotify","getX","setX","getY","setY","Size","hasHeight","size1","size2","LinkedSize","_width","_height","getWidth","setWidth","getHeight","setHeight","arg2","arg3","from","next","rect","rt","getPoint","_dontLink","setPoint","getSize","setSize","_fixX","_fixY","_fixW","_fixH","getLeft","setLeft","left","getTop","setTop","top","getRight","setRight","right","getBottom","setBottom","bottom","getCenterX","setCenterX","getCenterY","setCenterY","getCenter","setCenter","getArea","isEmpty","_containsRectangle","_containsPoint","intersects","touches","intersect","unite","include","expand","hor","ver","parts","xFirst","LinkedRectangle","internal","isSelected","_boundsSelected","setSelected","selected","_selectedSegmentState","Matrix","ok","_a","_c","_b","_d","_tx","_ty","reset","tx","ty","_changed","getValues","_applyMatrix","mx","recursively","_setApplyMatrix","isIdentity","translate","shear","skew","toRadians","tan","concatenate","a1","c1","d1","a2","d2","tx2","ty2","preConcatenate","tx1","ty1","chain","orNullIfIdentity","isInvertible","_getDeterminant","isSingular","dst","_transformCoordinates","_transformCorners","coords","_transformBounds","bounds","inverseTransform","_inverseTransform","det","decompose","scaleX","scaleY","scaling","rotation","shearing","getTranslation","getScaling","getRotation","inverted","shiftless","applyToContext","prop","Line","arg4","asVector","_px","_py","_vx","_vy","getVector","isInfinite","getSide","getSignedDistance","apx","apy","avx","avy","bpx","bpy","bvx","bvy","ta","tb","vx","vy","v2x","v2y","ccw","layers","_activeLayer","symbols","_currentStyle","Style","_view","getCanvas","_selectedItems","_selectedItemCount","_updateVersion","getCurrentStyle","setCurrentStyle","style","getIndex","getOptions","getActiveLayer","getSelectedItems","isInserted","insertChild","_preserve","_remove","_setProject","_changes","NO_INSERT","addChild","_updateSelection","selectedItems","_selected","selectAll","setFullySelected","deselectAll","hitTest","HitResult","_hitTest","getItems","_getItems","getItem","layer","pixelRatio","save","param","viewMatrix","matrices","updateMatrix","restore","_drawSelection","Symbol","dontCenter","setDefinition","_definition","_clearBoundsCache","_needsUpdate","getDefinition","_dontCenter","_parentSymbol","setPosition","place","PlacedSymbol","symbol","definition","_serializeFields","_canApplyMatrix","_selectChildren","pivot","locked","visible","blendMode","opacity","guide","clipMask","_initialize","hasProps","_matrix","_style","_project","parent","setParent","mouseFlags","mousedown","mousedrag","click","doubleclick","mouseup","mousemove","mouseenter","mouseleave","mouseEvent","counters","_eventCounters","onFrame","_animateItem","onLoad","animate","Group","_defaults","cacheParent","_parent","_bounds","_position","_decomposed","_globalMatrix","_currentPath","_changesById","getId","getName","setName","unique","_removeNamed","children","_children","namedChildren","_namedChildren","getStyle","setStyle","_locked","_visible","_blendMode","_opacity","_guide","noChildren","isFullySelected","isClipMask","_clipMask","setClipMask","setFillColor","setStrokeColor","getData","setData","getPosition","_pivot","getBounds","getPivot","setPivot","getRegistration","setRegistration","getter","internalGetter","boundsGetter","_boundsGetter","_getCachedBounds","_getBounds","cacheItem","child","setBounds","cache","_boundsCache","ids","cached","_internal","_decompose","decomposed","setRotation","setScaling","getMatrix","setMatrix","getGlobalMatrix","_dontClone","updateVersion","getApplyMatrix","setApplyMatrix","getTransformContent","setTransformContent","getProject","installEvents","getLayer","getParent","getChildren","setChildren","removeChildren","addChildren","getFirstChild","getLastChild","getNextSibling","getPreviousSibling","_equals","_clone","copy","insertAbove","copyTo","itemOrProject","rasterize","resolution","getStrokeBounds","getResolution","topLeft","getTopLeft","bottomRight","getBottomRight","ceil","canvas","raster","Raster","setCanvas","_contains","getInternalBounds","_asPathItem","getIntersections","guides","parentTotalMatrix","_totalMatrix","totalMatrix","tolerancePadding","_tolerancePadding","_getPenPadding","getInternalRoughBounds","checkSelf","class","checkBounds","opts","_getChildHitTestOptions","_hitTestSelf","hasFill","matches","compare","matchObject","firstOnly","overlapping","inside","childMatrix","insertChildren","_proto","notifySelf","_insertSibling","insertBelow","sendToBack","bringToFront","appendTop","appendBottom","moveAbove","moveBelow","reduce","namedArray","notifyParent","replaceWith","reverseChildren","reverse","isEditable","hasStroke","hasShadow","_getOrder","getList","list1","list2","hasChildren","isAbove","isBelow","isParent","isChild","isDescendant","isAncestor","isGroupedWith","_applyRecursively","_transformContent","fillColor","getFillColor","strokeColor","getStrokeColor","decomp","applyRecursively","globalToLocal","localToGlobal","parentToLocal","localToParent","fitBounds","itemRatio","rectRatio","newBounds","_setStyles","shadowColor","getShadowColor","toCanvasStyle","getStrokeWidth","strokeJoin","getStrokeJoin","strokeCap","getStrokeCap","miterLimit","getMiterLimit","lineJoin","lineCap","dashArray","getDashArray","dashOffset","getDashOffset","setLineDash","lineDashOffset","mozDash","mozDashOffset","shadowBlur","getShadowBlur","getShadowOffset","shadowOffsetX","shadowOffsetY","parentStrokeMatrix","globalMatrix","getViewMatrix","normalBlend","nativeBlend","direct","dontStart","clip","_canComposite","mainCtx","itemOffset","prevOffset","strokeMatrix","getStrokeScaling","clipItem","globalAlpha","globalCompositeOperation","setTransform","_draw","dontFinish","_isUpdated","CompoundPath","updated","_drawSelected","color","getSelectedColor","half","fillRect","hash","removeOn","sets","_removeSets","_clipItem","_getClipItem","isClipped","setClipped","clipped","currentPath","Shape","radius","_type","_size","_radius","setType","setRadius","getType","getShape","setShape","getRadius","rad","toPath","dontPaint","untransformed","isCircle","rx","ry","kappa","cx","cy","getWindingRule","getCornerCenter","halfSize","dir","corner","getEllipseRadius","hit","outer","inner","createShape","Circle","Ellipse","ellipse","_readEllipse","setSource","setImage","_loaded","getSource","image","_image","_canvas","copyCanvas","drawImage","getElement","getPpi","getImage","complete","naturalWidth","naturalHeight","_context","modify","setContext","context","toDataURL","loaded","update","document","getElementById","Image","setTimeout","DomEvent","getSubCanvas","getSubRaster","getAverageColor","PathItem","sampleSize","_sampleContext","clearRect","pixels","getImageData","channels","total","alpha","Color","getPixel","setPixel","_convert","_alpha","imageData","createImageData","putImageData","setImageData","setSymbol","_symbol","getSymbol","handles","ends","Segment","arg5","handleIn","handleOut","SegmentPoint","isLinear","_point","_handleIn","_handleOut","_path","curves","_curves","curve","_closed","getHandleIn","setHandleIn","getHandleOut","setHandleOut","setLinear","linear","next1","getNext","next2","getPrevious","isArc","handle1","handle2","_selectionState","state","oldState","getCurve","_segments","getCurves","getLocation","CurveLocation","_segment1","removeSegment","interpolate","segment0","segment1","coef","dxPoint","dyPoint","dxHandleIn","dyHandleIn","dxHandleOut","dyHandleOut","change","Curve","arg6","arg7","_segment2","segment2","_length","getPoint1","setPoint1","getPoint2","setPoint2","getHandle1","setHandle1","getHandle2","setHandle2","getSegment1","getSegment2","getPoints","getPart","getPartLength","filterIntersections","_getParameter","isParameter","parameter","getParameterAt","ignoreLinear","subdivide","split","p1","h1","h2","p2","evaluate","p1x","p1y","p2x","p2y","bx","ax","by","ay","p3x","p3y","p4x","p4y","p5x","p5y","p6x","p6y","p7x","p7y","p8x","p8y","coord","getParameterOf","txs","tys","sx","sy","isFlatEnough","ux","uy","getEdgeSum","_addBounds","v0","v3","padding","tMin","tMax","getLocationAt","getLocationOf","getOffsetOf","loc","getNearestLocation","minDist","minT","refine","dist","step","getNearestPoint","getLengthIntegrand","getIterations","ds","forward","rangeLength","guess","addLocation","locations","curve1","t1","curve2","t2","addCurveIntersections","uMin","uMax","oldTDiff","recursion","q0x","q0y","q3x","q3y","factor","dMin","dMax","dp0","dp1","dp2","dp3","tMinNew","tMaxNew","tDiff","hull","getConvexHull","tMinClip","tMaxClip","clipConvexHull","dq0","dq1","dq2","dq3","p0","p3","dist1","dist2","flip","pmax","distZero","hullTop","hullBottom","clipConvexHullPart","threshold","qx","qy","addCurveLineIntersections","vc","vl","lx1","ly1","lx2","ly2","ldx","ldy","rlx2","rvl","rvc","tc","tl","addLineIntersection","linear1","linear2","c1p1","c1p2","c2p1","c2p2","_expand","last","_curve","_curve2","_parameter","_parameter2","loc1","loc2","path1","path2","getParameter","getIntersection","_point2","_distance","getSegment","_preferFirst","_segment","_uncached","intersection","_intersection","_getOffset","getCurveOffset","getPointAt","curves1","curves2","matrix1","matrix2","length1","length2","values2","values1","seg1","seg2","setPathData","relative","previous","control","getCoord","command","lower","move","cubicCurveTo","arcTo","winding","_getWinding","closed","setSegments","_clockwise","_monoCurves","getSegments","fullySelected","_add","getFirstSegment","getLastSegment","_countCurves","getFirstCurve","getLastCurve","isClosed","setClosed","getPathData","_precision","curX","curY","prevX","prevY","inX","inY","outX","outY","skipLine","isPolygon","segs","_adjustCurves","insertSegment","addSegments","insertSegments","removeSegments","_includeCurves","area","_selectSegments","newState","flatten","maxDistance","iterator","PathIterator","simplify","fitter","PathFitter","fit","isClockwise","setClockwise","clockwise","last1","last2","first2","first1","path0","toShape","topCenter","shape","numSegments","strokePadding","cap","hitStroke","hitFill","hitCurves","isCloseEnough","checkSegmentPoint","seg","anchor","checkSegmentPoints","addToArea","checkSegmentStroke","_addBevelJoin","_addSquareCap","minLoc","drawHandles","drawHandle","hX","hY","pX","pY","drawSegments","drawSegment","handle","dashLength","drawPart","getFirstControlPoints","rhs","smooth","overlap","knots","f1","f2","ie","je","getCurrentSegment","moveBy","through","extent","vector","middle","large","epsilon","rxSq","rySq","xSq","ySq","l1","l2","throughSide","centerSide","ext","inc","z","out","_in","lineBy","curveBy","cubicCurveBy","quadraticCurveBy","arcBy","prevCoords","processSegment","joinBounds","addRound","addJoin","addCap","phi","atan","addPoint","normal1","getNormalAt","normal2","normal","getNormal","getHandleBounds","joinPadding","paddingX","paddingY","xn","xx","yn","yx","getRoughBounds","strokeRadius","joinRadius","ellipseSegments","createPath","createEllipse","bl","getBottomLeft","tr","getTopRight","br","hx","hy","RoundRectangle","Oval","Arc","RegularPolygon","sides","three","Star","radius1","radius2","compoundpath0","compoundpath1","paths","getCurrentPath","operators","computeBoolean","operation","operator","preparePath","reorient","_path1","_path2","splitPath","monoCurves","collect","_getMonoCurves","_winding","startSeg","totalLength","windingSum","curveLength","getTangentAt","getWinding","tracePaths","intersections","linearHandles","resetLinear","newCurve","horizontal","testContains","windLeft","windRight","yTop","yBottom","yBefore","yAfter","xBefore","xAfter","prevT","slope","selfOp","_visited","inter","startInterSeg","added","interSeg","c4","c3","t3","t4","w3","w4","nextCurve","nextSeg","firstSegment","lastSegment","prevCurve","insertCurve","y0","handleCurve","y3","getInteriorPoint","xIntercepts","maxRecursion","minDifference","addCurve","computeParts","maxT","halfT","prevVal","prevLen","error","fitCubic","tan1","tan2","pt1","pt2","uPrime","chordLengthParameterize","maxError","generateBezier","findMaxError","reparameterize","V1","V2","tanCenter","C","X","detC0C1","alpha1","alpha2","detC0X","detXC1","c0","segLength","diff","degree","maxDist","P","TextItem","content","_content","_lines","setContent","getContent","getCharacterStyle","setCharacterStyle","getParagraphStyle","setParagraphStyle","PointText","lines","leading","getLeading","getFontStyle","textAlign","getJustification","fillText","strokeText","numLines","justification","getTextWidth","gray","rgb","hsb","hsl","gradient","componentParsers","colorCache","colorCtx","fromCSS","hsbIndices","converters","rgb-hsb","h","hsb-rgb","rgb-hsl","achromatic","hsl-rgb","t3s","rgb-gray","gray-rgb","gray-hsb","gray-hsl","gradient-rgb","rgb-gradient","properties","hasOverlap","_components","Gradient","_removeOwner","_addOwner","_properties","argType","parsers","stops","radial","getComponents","_canvasStyle","converter","convert","getAlpha","setAlpha","hasAlpha","col","isGradient","toCSS","hex","_stops","origin","destination","canvasGradient","_radial","highlight","createRadialGradient","createLinearGradient","addColorStop","_rampPoint","_color","_types","components1","components2","acronym","setStops","setRadial","_owners","getStops","GradientStop","_defaultRamp","setRampPoint","getRadial","rampPoint","setColor","getRampPoint","getColor","defaults","strokeScaling","windingRule","shadowOffset","selectedColor","fontWeight","_textDefaults","isColor","isPoint","old","_values","_dontMerge","childValue","isStyle","getFontSize","getFontWeight","getFontFamily","getFont","setFont","getPixelSize","DomElement","handlePrefix","prefixes","suffix","prefix","getStyles","doc","nodeType","ownerDocument","defaultView","getComputedStyle","viewport","body","html","documentElement","getBoundingClientRect","clientLeft","clientTop","pageXOffset","scrollLeft","pageYOffset","scrollTop","getViewportBounds","innerWidth","clientWidth","innerHeight","clientHeight","isInvisible","isInView","getPrefixed","setPrefixed","removeEventListener","targetTouches","changedTouches","pageX","clientX","pageY","clientY","getTarget","srcElement","getRelatedTarget","relatedTarget","toElement","stopPropagation","preventDefault","requestAnimationFrame","nativeRequest","requested","callbacks","focused","timer","focus","blur","handleCallbacks","setInterval","_element","_pixelRatio","devicePixelRatio","setAttribute","_viewEvents","none","userSelect","touchAction","touchCallout","contentZooming","userDrag","tapHighlightColor","getCanvasSize","_windowEvents","resize","setViewSize","_setViewSize","Stats","_stats","stats","domElement","appendChild","_views","_viewsById","_viewSize","_zoom","_focused","_frameItems","_frameItemCount","_animate","play","pause","onResize","_time","_count","_requestFrame","_requested","_handleFrame","now","Date","_before","_handlingFrame","time","_handleFrameItems","_update","_transform","getPixelRatio","getViewSize","scrollBy","getZoom","setZoom","zoom","isVisible","projectToView","viewToProject","CanvasView","tool","prevFocus","tempFocus","dragging","handleMouseMove","_handleEvent","pointerEnabled","msPointerEnabled","viewEvents","selectstart dragstart","docEvents","mouseout","nodeName","scroll","HTMLCanvasElement","deviceRatio","backingStoreRatio","prevFont","measureText","downPoint","lastPoint","overPoint","downItem","lastItem","overItem","dragItem","dblClick","clickTime","callEvent","MouseEvent","isStopped","stopped","Event","isPrevented","getModifiers","Key","modifiers","KeyEvent","down","character","specialKeys",27,32,35,36,37,38,39,40,46,91,93,224,"specialChars","option","capsLock","space","charCodeMap","keyMap","downCode","handleKey","keyCode","charCode","specialKey","keydown","which","keypress","keyup","isDown","ToolEvent","_item","_choosePoint","toolPoint","getLastPoint","_lastPoint","setLastPoint","getDownPoint","_downPoint","setDownPoint","getMiddlePoint","_middlePoint","setMiddlePoint","middlePoint","getDelta","_delta","setDelta","getCount","_downCount","setCount","setItem","Tool","_firstMove","getMinDistance","_minDistance","setMinDistance","minDistance","_maxDistance","getMaxDistance","setMaxDistance","getFixedDistance","setFixedDistance","distance","_updateEvent","needsChange","matchMaxDistance","_fireEvent","called","Http","method","xhr","ActiveXObject","overrideMimeType","onreadystatechange","readyState","responseText","canvases","createElement","sr","sg","sb","sa","bg","bb","ba","dr","dg","db","getLum","setLum","mn","lmn","ln","mxl","getSat","setSat","md","modes","screen","overlay","soft-light","hard-light","color-dodge","color-burn","darken","lighten","difference","exclusion","hue","saturation","luminosity","negation","mode","srcContext","dstContext","srcCanvas","dstData","SVGStyles","true","false","attribute","fromSVG","exportFilter","SVGNamespaces","xlink","setAttributes","namespace","setAttributeNS","createElementNS","getTransform","coordinates","trans","exportGroup","childNode","exportSVG","clip-path","exportRaster","exportPath","matchShapes","exportShape","exportCompoundPath","exportPlacedSymbol","symbolNode","viewBox","overflow","exportGradient","gradientNode","getGradient","getOrigin","getDestination","getHighlight","fy","gradientUnits","stopColor","stop-color","exportText","textContent","exporters","applyStyle","visibility","svgs","exportDefinitions","defs","insertBefore","firstChild","XMLSerializer","serializeToString","exporter","onExport","setOptions","xmlns","xmlns:xlink","getValue","allowNull","getAttributeNS","convertValue","map","importGroup","childNodes","isClip","currentStyle","applyAttributes","importSVG","importPoly","importPath","pathData","importGradient","isRadial","importers","#document","nextSibling","clippath","polygon","polyline","lineargradient","radialgradient","use","circle","applyTransform","transforms","applyOpacity","attributes","gradientTransform","fill-opacity","stroke-opacity","setVisible","display","stop-opacity","percentage","styles","group","parentNode","onLoadCallback","File","reader","FileReader","readAsText","DOMParser","parseFromString","importer","onImport","expandShapes","Collection","cb","wrapConstructor","useConstructed","wrapper","arr","params","rconstructor","constructorFilter","unwrapArg","isPlural","unwrapArgs","proxy","methodNames","getOwnPropertyNames","filter","plural","ot","glyphMap","charMap","altMap","_subset","addGlyph","addGlyphs","fonts","addedFonts","delete","styleElement","styleSheet","styleSheets","ss","ownerNode","_lastSubset","getGlyphSubset","normalizeSubset","font0","font1","updateSVGData","updateOTCommands","importOT","otFont","otGlyph","_URL","URL","webkitURL","addToFonts","fontface","FontFace","createObjectURL","fontObjectURL","revokeObjectURL","deleteRule","insertRule","onloadend","readAsDataURL","lastIndexOf","../node_modules/opentype.js/dist/opentype.js","../node_modules/paper/dist/paper-core.js","./Glyph.js","Outline","anchors","parentAnchors","addAnchor","addAnchors","addParentAnchor","glyph0","glyph1","svgData","addContour","./Outline.js","outline0","outline1","defineProperties","firstNode","lastNode","_updateData","pushSimple","pushBezier","export","ctrl1","ctrl2","Node","./Collection.js","./Font.js","./Node.js","./Outline","./Path.js","updateUtils","Utils","_","ufoToPaper","parameters","outline","parentParameters","lib","transformList","solvingOrder","glyphFromSrc","fontSrc","naive","embed","mergeStatic","anchorSrc","contourSrc","nodeSrc","embedComponents","componentSrc","annotator","addComponent","cursor","propFromCursor","_dependencies","_parameters","_updaters","createUpdaters","leaf","_operation","solveDependencyTree","depTree","dependencyTree","order","simplified","simplifyResolutionOrder","parentSrc","leafSrc","currCursor","rdeg","transformsToMatrix","Float32Array","curr","rslt","../node_modules/deptree/index.js","../node_modules/plumin.js/dist/plumin.js","./updateUtils.js","lodash.clone",28,"inSkeleton","autoExpandedNodeSrc","side","expandedNodeUpdater","expandedTo","skeletonCopier","explicitExpandedNodeSrc","expandedContourSrc","curviness","prepareContour","updateContour","additionalContours","skeleton","leftContour","rightContour","leftNodes","rightNodes","leftNodesSrc","rightNodesSrc","leftSrc","rightSrc","expandedFrom","typeIn","typeOut","addContours","isLeft","distr","_dirOut","_dirIn","tensionIn","tensionOut","tension","lineAngle","startCtrl","endCtrl","startType","endType","startTension","endTension","startDir","endDir","rri","rayRayIntersection","dirIn","dirOut","./Utils.js","lodash.assign",29,"parametricFont","fontinfo","info","glyphSrc","_params","propName","transformOrigin","_node","_contour","prepareDataUpdate","isPrepared","./naive.js",30,"lineLineIntersection","p4","x3","x4","y4","onLine","SelectionState","HANDLE_IN","HANDLE_OUT","POINT","SEGMENT","worldCoords","viewCoords","handleColor","drawCoords","nodeColor","handleFont","shell","fontUrl","prototypoUrl","Promise","fontSource","prototypoSource","fetch","then","results","fontObj","workerUrl","encodeURIComponent","worker","Worker","onmessage","postMessage","fontBufferHandler","isWorkerBusy","latestBuffer","latestWorkerValues","latestSubset","shoNodes","zoomFactor","jQueryListeners","activeLayer","_fill","_showNodes","showNodes","isMousedown","$","jQuery","wheelHandler","moveHandler","downHandler","upHandler","raf","webkitRequestAnimationFrame","updateLoop","latestRafValues","currGlyph","bool","displayGlyph","showCoords","subset","currSubset","bcr","currPos","viewPos","deltaY","deltaMode","newZoom","beta","newCenter","prevPos","button","zoomIn","zoomOut","latestValues","displayChar","importScripts","decodeURIComponent","search","currValues","solvingOrders","prevGlyphs"],"mappings":"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AA,KAAA/D,IAAA,OACA+D,MAAA,KAAA/D,IAAA,OACA+D,MAAA,KAAA/D,IAAA,OACA+D,MAAA,KAAA/D,IAAA,OACA+D,MAAA,KAAA/D,IAAA,OACA+D,MAAA,KAAA/D,IAAA,OACA+D,MAAA,KAAA/D,IAAA,OACA+D,MAAA,KAAA/D,IAAA,OACA+D,MAAA,KAAA/D,IAAA,OACA+D,MAAA,KAAA/D,IAAA,OACA+D,MAAA,KAAA/D,IAAA,OACA+D,MAAA,KAAA/D,IAAA,OACA+D,MAAA,KAAA/D,IAAA,OACA+D,MAAA,KAAA/D,IAAA,OACA+D,MAAA,KAAA/D,IAAA,OACA+D,MAAA,KAAA/D,IAAA,OACA+D,MAAA,KAAA/D,IAAA,OACA+D,MAAA,KAAA/D,IAAA,QACA+D,MAAA,MAAA/D,IAAA,QACA+D,MAAA,MAAA/D,IAAA,QACA+D,MAAA,MAAA/D,IAAA,QACA+D,MAAA,MAAA/D,IAAA,QACA+D,MAAA,MAAA/D,IAAA,QACA+D,MAAA,MAAA/D,IAAA,QACA+D,MAAA,MAAA/D,IAAA,QACA+D,MAAA,MAAA/D,IAAA,QACA+D,MAAA,MAAA/D,IAAA,QACA+D,MAAA,MAAA/D,IAAA,QACA+D,MAAA,MAAA/D,IAAA,QACA+D,MAAA,MAAA/D,IAAA,QACA+D,MAAA,MAAA/D,IAAA,QACA+D,MAAA,MAAA/D,IAAA,QACA+D,MAAA,MAAA/D,IAAA,QACA+D,MAAA,MAAA/D,IAAA,QACA+D,MAAA,MAAA/D,IAAA,QACA+D,MAAA,MAAA/D,IAAA,QACA+D,MAAA,MAAA/D,IAAA,QACA+D,MAAA,MAAA/D,IAAA,QACA+D,MAAA,MAAA/D,IAAA,QACA+D,MAAA,MAAA/D,IAAA,QACA+D,MAAA,KAAA/D,IAAA,OACA+D,MAAA,KAAA/D,IAAA,OACA+D,MAAA,KAAA/D,IAAA,OACA+D,MAAA,KAAA/D,IAAA,OACA+D,MAAA,KAAA/D,IAAA,OACA+D,MAAA,KAAA/D,IAAA,OACA+D,MAAA,KAAA/D,IAAA,OACA+D,MAAA,KAAA/D,IAAA,OACA+D,MAAA,KAAA/D,IAAA,OACA+D,MAAA,KAAA/D,IAAA,OACA+D,MA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":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.prototypo = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar DepTree = function() {\n  this.nodes = {}; \n};\n\nDepTree.prototype.add = function(node, dependants) {\n  var self = this;\n\n  if (!dependants) {\n    dependants = [];\n  } else if (!(dependants instanceof Array)) {\n    dependants = [dependants];\n  }\n\n  this.nodes[node] = dependants;\n};\n\n\nDepTree.prototype.resolveNode = function(node, resolved, processing) {\n\n  var self = this;\n\n  resolved = resolved || [];\n  processing = processing || {};\n  var deps = this.nodes[node] || [];\n\n  processing[node] = true;\n\n  deps.forEach(function(dep) {\n    if (resolved.indexOf(dep) != -1) {\n      return;\n    }\n    if (processing[dep]) {\n      throw new Error('Circular dependency: '+dep);\n    }\n    self.resolveNode(dep, resolved, processing);\n  });\n\n  if (resolved.indexOf(node) == -1) {\n    processing[node] = false;\n    resolved.push(node);\n  }\n  return resolved;\n};\n\nDepTree.prototype.resolve = function() {\n\n  var resolved = [];\n  for (var node in this.nodes) {\n    this.resolveNode(node, resolved);\n  }\n\n  return resolved;\n\n};\n\n\nmodule.exports = DepTree;\n\n},{}],2:[function(require,module,exports){\n/**\n * lodash 3.2.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseAssign = require('lodash._baseassign'),\n    createAssigner = require('lodash._createassigner'),\n    keys = require('lodash.keys');\n\n/**\n * A specialized version of `_.assign` for customizing assigned values without\n * support for argument juggling, multiple sources, and `this` binding `customizer`\n * functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {Function} customizer The function to customize assigned values.\n * @returns {Object} Returns `object`.\n */\nfunction assignWith(object, source, customizer) {\n  var index = -1,\n      props = keys(source),\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index],\n        value = object[key],\n        result = customizer(value, source[key], key, object, source);\n\n    if ((result === result ? (result !== value) : (value === value)) ||\n        (value === undefined && !(key in object))) {\n      object[key] = result;\n    }\n  }\n  return object;\n}\n\n/**\n * Assigns own enumerable properties of source object(s) to the destination\n * object. Subsequent sources overwrite property assignments of previous sources.\n * If `customizer` is provided it is invoked to produce the assigned values.\n * The `customizer` is bound to `thisArg` and invoked with five arguments:\n * (objectValue, sourceValue, key, object, source).\n *\n * **Note:** This method mutates `object` and is based on\n * [`Object.assign`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign).\n *\n * @static\n * @memberOf _\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {*} [thisArg] The `this` binding of `customizer`.\n * @returns {Object} Returns `object`.\n * @example\n *\n * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n * // => { 'user': 'fred', 'age': 40 }\n *\n * // using a customizer callback\n * var defaults = _.partialRight(_.assign, function(value, other) {\n *   return _.isUndefined(value) ? other : value;\n * });\n *\n * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n * // => { 'user': 'barney', 'age': 36 }\n */\nvar assign = createAssigner(function(object, source, customizer) {\n  return customizer\n    ? assignWith(object, source, customizer)\n    : baseAssign(object, source);\n});\n\nmodule.exports = assign;\n\n},{\"lodash._baseassign\":3,\"lodash._createassigner\":5,\"lodash.keys\":9}],3:[function(require,module,exports){\n/**\n * lodash 3.2.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseCopy = require('lodash._basecopy'),\n    keys = require('lodash.keys');\n\n/**\n * The base implementation of `_.assign` without support for argument juggling,\n * multiple sources, and `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return source == null\n    ? object\n    : baseCopy(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n\n},{\"lodash._basecopy\":4,\"lodash.keys\":9}],4:[function(require,module,exports){\n/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property names to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @returns {Object} Returns `object`.\n */\nfunction baseCopy(source, props, object) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n    object[key] = source[key];\n  }\n  return object;\n}\n\nmodule.exports = baseCopy;\n\n},{}],5:[function(require,module,exports){\n/**\n * lodash 3.1.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar bindCallback = require('lodash._bindcallback'),\n    isIterateeCall = require('lodash._isiterateecall'),\n    restParam = require('lodash.restparam');\n\n/**\n * Creates a function that assigns properties of source object(s) to a given\n * destination object.\n *\n * **Note:** This function is used to create `_.assign`, `_.defaults`, and `_.merge`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return restParam(function(object, sources) {\n    var index = -1,\n        length = object == null ? 0 : sources.length,\n        customizer = length > 2 ? sources[length - 2] : undefined,\n        guard = length > 2 ? sources[2] : undefined,\n        thisArg = length > 1 ? sources[length - 1] : undefined;\n\n    if (typeof customizer == 'function') {\n      customizer = bindCallback(customizer, thisArg, 5);\n      length -= 2;\n    } else {\n      customizer = typeof thisArg == 'function' ? thisArg : undefined;\n      length -= (customizer ? 1 : 0);\n    }\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n\n},{\"lodash._bindcallback\":6,\"lodash._isiterateecall\":7,\"lodash.restparam\":8}],6:[function(require,module,exports){\n/**\n * lodash 3.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * A specialized version of `baseCallback` which only supports `this` binding\n * and specifying the number of arguments to provide to `func`.\n *\n * @private\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\nfunction bindCallback(func, thisArg, argCount) {\n  if (typeof func != 'function') {\n    return identity;\n  }\n  if (thisArg === undefined) {\n    return func;\n  }\n  switch (argCount) {\n    case 1: return function(value) {\n      return func.call(thisArg, value);\n    };\n    case 3: return function(value, index, collection) {\n      return func.call(thisArg, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(thisArg, accumulator, value, index, collection);\n    };\n    case 5: return function(value, other, key, object, source) {\n      return func.call(thisArg, value, other, key, object, source);\n    };\n  }\n  return function() {\n    return func.apply(thisArg, arguments);\n  };\n}\n\n/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = bindCallback;\n\n},{}],7:[function(require,module,exports){\n/**\n * lodash 3.0.9 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^\\d+$/;\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\n/**\n * Checks if the provided arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n      ? (isArrayLike(object) && isIndex(index, object.length))\n      : (type == 'string' && index in object)) {\n    var other = object[index];\n    return value === value ? (value === other) : (other !== other);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isIterateeCall;\n\n},{}],8:[function(require,module,exports){\n/**\n * lodash 3.6.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that invokes `func` with the `this` binding of the\n * created function and arguments from `start` and beyond provided as an array.\n *\n * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var say = _.restParam(function(what, names) {\n *   return what + ' ' + _.initial(names).join(', ') +\n *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n * });\n *\n * say('hello', 'fred', 'barney', 'pebbles');\n * // => 'hello fred, barney, & pebbles'\n */\nfunction restParam(func, start) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        rest = Array(length);\n\n    while (++index < length) {\n      rest[index] = args[start + index];\n    }\n    switch (start) {\n      case 0: return func.call(this, rest);\n      case 1: return func.call(this, args[0], rest);\n      case 2: return func.call(this, args[0], args[1], rest);\n    }\n    var otherArgs = Array(start + 1);\n    index = -1;\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = rest;\n    return func.apply(this, otherArgs);\n  };\n}\n\nmodule.exports = restParam;\n\n},{}],9:[function(require,module,exports){\n/**\n * lodash 3.1.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar getNative = require('lodash._getnative'),\n    isArguments = require('lodash.isarguments'),\n    isArray = require('lodash.isarray');\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^\\d+$/;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = getNative(Object, 'keys');\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * A fallback implementation of `Object.keys` which creates an array of the\n * own enumerable property names of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction shimKeys(object) {\n  var props = keysIn(object),\n      propsLength = props.length,\n      length = propsLength && object.length;\n\n  var allowIndexes = !!length && isLength(length) &&\n    (isArray(object) || isArguments(object));\n\n  var index = -1,\n      result = [];\n\n  while (++index < propsLength) {\n    var key = props[index];\n    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys)\n * for more details.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nvar keys = !nativeKeys ? shimKeys : function(object) {\n  var Ctor = object == null ? null : object.constructor;\n  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n      (typeof object != 'function' && isArrayLike(object))) {\n    return shimKeys(object);\n  }\n  return isObject(object) ? nativeKeys(object) : [];\n};\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  if (object == null) {\n    return [];\n  }\n  if (!isObject(object)) {\n    object = Object(object);\n  }\n  var length = object.length;\n  length = (length && isLength(length) &&\n    (isArray(object) || isArguments(object)) && length) || 0;\n\n  var Ctor = object.constructor,\n      index = -1,\n      isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n      result = Array(length),\n      skipIndexes = length > 0;\n\n  while (++index < length) {\n    result[index] = (index + '');\n  }\n  for (var key in object) {\n    if (!(skipIndexes && isIndex(key, length)) &&\n        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keys;\n\n},{\"lodash._getnative\":10,\"lodash.isarguments\":11,\"lodash.isarray\":12}],10:[function(require,module,exports){\n/**\n * lodash 3.9.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]';\n\n/**\n * Used to match `RegExp` [special characters](http://www.regular-expressions.info/characters.html#special).\n * In addition to special characters the forward slash is escaped to allow for\n * easier `eval` use and `Function` compilation.\n */\nvar reRegExpChars = /[.*+?^${}()|[\\]\\/\\\\]/g,\n    reHasRegExpChars = RegExp(reRegExpChars.source);\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/**\n * Converts `value` to a string if it's not one. An empty string is returned\n * for `null` or `undefined` values.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  if (typeof value == 'string') {\n    return value;\n  }\n  return value == null ? '' : (value + '');\n}\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  escapeRegExp(fnToString.call(hasOwnProperty))\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (objToString.call(value) == funcTag) {\n    return reIsNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reIsHostCtor.test(value);\n}\n\n/**\n * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n */\nfunction escapeRegExp(string) {\n  string = baseToString(string);\n  return (string && reHasRegExpChars.test(string))\n    ? string.replace(reRegExpChars, '\\\\$&')\n    : string;\n}\n\nmodule.exports = getNative;\n\n},{}],11:[function(require,module,exports){\n/**\n * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is classified as an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  return isObjectLike(value) && isArrayLike(value) && objToString.call(value) == argsTag;\n}\n\nmodule.exports = isArguments;\n\n},{}],12:[function(require,module,exports){\n/**\n * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar arrayTag = '[object Array]',\n    funcTag = '[object Function]';\n\n/**\n * Used to match `RegExp` [special characters](http://www.regular-expressions.info/characters.html#special).\n * In addition to special characters the forward slash is escaped to allow for\n * easier `eval` use and `Function` compilation.\n */\nvar reRegExpChars = /[.*+?^${}()|[\\]\\/\\\\]/g,\n    reHasRegExpChars = RegExp(reRegExpChars.source);\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/**\n * Converts `value` to a string if it's not one. An empty string is returned\n * for `null` or `undefined` values.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  if (typeof value == 'string') {\n    return value;\n  }\n  return value == null ? '' : (value + '');\n}\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  escapeRegExp(fnToString.call(hasOwnProperty))\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsArray = getNative(Array, 'isArray');\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(function() { return arguments; }());\n * // => false\n */\nvar isArray = nativeIsArray || function(value) {\n  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n};\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (objToString.call(value) == funcTag) {\n    return reIsNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reIsHostCtor.test(value);\n}\n\n/**\n * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n */\nfunction escapeRegExp(string) {\n  string = baseToString(string);\n  return (string && reHasRegExpChars.test(string))\n    ? string.replace(reRegExpChars, '\\\\$&')\n    : string;\n}\n\nmodule.exports = isArray;\n\n},{}],13:[function(require,module,exports){\n/**\n * lodash 3.0.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseClone = require('lodash._baseclone'),\n    bindCallback = require('lodash._bindcallback'),\n    isIterateeCall = require('lodash._isiterateecall');\n\n/**\n * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n * otherwise they are assigned by reference. If `customizer` is provided it is\n * invoked to produce the cloned values. If `customizer` returns `undefined`\n * cloning is handled by the method instead. The `customizer` is bound to\n * `thisArg` and invoked with two argument; (value [, index|key, object]).\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n * The enumerable properties of `arguments` objects and objects created by\n * constructors other than `Object` are cloned to plain `Object` objects. An\n * empty object is returned for uncloneable values such as functions, DOM nodes,\n * Maps, Sets, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {Function} [customizer] The function to customize cloning values.\n * @param {*} [thisArg] The `this` binding of `customizer`.\n * @returns {*} Returns the cloned value.\n * @example\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * var shallow = _.clone(users);\n * shallow[0] === users[0];\n * // => true\n *\n * var deep = _.clone(users, true);\n * deep[0] === users[0];\n * // => false\n *\n * // using a customizer callback\n * var el = _.clone(document.body, function(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(false);\n *   }\n * });\n *\n * el === document.body\n * // => false\n * el.nodeName\n * // => BODY\n * el.childNodes.length;\n * // => 0\n */\nfunction clone(value, isDeep, customizer, thisArg) {\n  if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n    isDeep = false;\n  }\n  else if (typeof isDeep == 'function') {\n    thisArg = customizer;\n    customizer = isDeep;\n    isDeep = false;\n  }\n  return typeof customizer == 'function'\n    ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n    : baseClone(value, isDeep);\n}\n\nmodule.exports = clone;\n\n},{\"lodash._baseclone\":14,\"lodash._bindcallback\":24,\"lodash._isiterateecall\":25}],14:[function(require,module,exports){\n(function (global){\n/**\n * lodash 3.2.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar arrayCopy = require('lodash._arraycopy'),\n    arrayEach = require('lodash._arrayeach'),\n    baseAssign = require('lodash._baseassign'),\n    baseFor = require('lodash._basefor'),\n    getNative = require('lodash._getnative'),\n    isArray = require('lodash.isarray'),\n    keys = require('lodash.keys');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\ncloneableTags[dateTag] = cloneableTags[float32Tag] =\ncloneableTags[float64Tag] = cloneableTags[int8Tag] =\ncloneableTags[int16Tag] = cloneableTags[int32Tag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[stringTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[mapTag] = cloneableTags[setTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/** Native method references. */\nvar ArrayBuffer = getNative(global, 'ArrayBuffer'),\n    bufferSlice = getNative(ArrayBuffer && new ArrayBuffer(0), 'slice'),\n    floor = Math.floor,\n    Uint8Array = getNative(global, 'Uint8Array');\n\n/** Used to clone array buffers. */\nvar Float64Array = (function() {\n  // Safari 5 errors when using an array buffer to initialize a typed array\n  // where the array buffer's `byteLength` is not a multiple of the typed\n  // array's `BYTES_PER_ELEMENT`.\n  try {\n    var func = getNative(global, 'Float64Array'),\n        result = new func(new ArrayBuffer(10), 0, 1) && func;\n  } catch(e) {}\n  return result || null;\n}());\n\n/** Used as the size, in bytes, of each `Float64Array` element. */\nvar FLOAT64_BYTES_PER_ELEMENT = Float64Array ? Float64Array.BYTES_PER_ELEMENT : 0;\n\n/**\n * The base implementation of `_.clone` without support for argument juggling\n * and `this` binding `customizer` functions.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {Function} [customizer] The function to customize cloning values.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The object `value` belongs to.\n * @param {Array} [stackA=[]] Tracks traversed source objects.\n * @param {Array} [stackB=[]] Associates clones with source counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return arrayCopy(value, result);\n    }\n  } else {\n    var tag = objToString.call(value),\n        isFunc = tag == funcTag;\n\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return baseAssign(result, value);\n      }\n    } else {\n      return cloneableTags[tag]\n        ? initCloneByTag(value, tag, isDeep)\n        : (object ? value : {});\n    }\n  }\n  // Check for circular references and return corresponding clone.\n  stackA || (stackA = []);\n  stackB || (stackB = []);\n\n  var length = stackA.length;\n  while (length--) {\n    if (stackA[length] == value) {\n      return stackB[length];\n    }\n  }\n  // Add the source value to the stack of traversed objects and associate it with its clone.\n  stackA.push(value);\n  stackB.push(result);\n\n  // Recursively populate clone (susceptible to call stack limits).\n  (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n    result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.forOwn` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return baseFor(object, iteratee, keys);\n}\n\n/**\n * Creates a clone of the given array buffer.\n *\n * @private\n * @param {ArrayBuffer} buffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction bufferClone(buffer) {\n  return bufferSlice.call(buffer, 0);\n}\nif (!bufferSlice) {\n  // PhantomJS has `ArrayBuffer` and `Uint8Array` but not `Float64Array`.\n  bufferClone = !(ArrayBuffer && Uint8Array) ? constant(null) : function(buffer) {\n    var byteLength = buffer.byteLength,\n        floatLength = Float64Array ? floor(byteLength / FLOAT64_BYTES_PER_ELEMENT) : 0,\n        offset = floatLength * FLOAT64_BYTES_PER_ELEMENT,\n        result = new ArrayBuffer(byteLength);\n\n    if (floatLength) {\n      var view = new Float64Array(result, 0, floatLength);\n      view.set(new Float64Array(buffer, 0, floatLength));\n    }\n    if (byteLength != offset) {\n      view = new Uint8Array(result, offset);\n      view.set(new Uint8Array(buffer, offset));\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add array properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  var Ctor = object.constructor;\n  if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n    Ctor = Object;\n  }\n  return new Ctor;\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return bufferClone(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      var buffer = object.buffer;\n      return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      var result = new Ctor(object.source, reFlags.exec(object));\n      result.lastIndex = object.lastIndex;\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var object = { 'user': 'fred' };\n * var getter = _.constant(object);\n *\n * getter() === object;\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = baseClone;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"lodash._arraycopy\":15,\"lodash._arrayeach\":16,\"lodash._baseassign\":17,\"lodash._basefor\":19,\"lodash._getnative\":20,\"lodash.isarray\":21,\"lodash.keys\":22}],15:[function(require,module,exports){\n/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction arrayCopy(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayCopy;\n\n},{}],16:[function(require,module,exports){\n/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * A specialized version of `_.forEach` for arrays without support for callback\n * shorthands or `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n\n},{}],17:[function(require,module,exports){\narguments[4][3][0].apply(exports,arguments)\n},{\"dup\":3,\"lodash._basecopy\":18,\"lodash.keys\":22}],18:[function(require,module,exports){\narguments[4][4][0].apply(exports,arguments)\n},{\"dup\":4}],19:[function(require,module,exports){\n/**\n * lodash 3.0.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * The base implementation of `baseForIn` and `baseForOwn` which iterates\n * over `object` properties returned by `keysFunc` invoking `iteratee` for\n * each property. Iteratee functions may exit iteration early by explicitly\n * returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * Creates a base function for `_.forIn` or `_.forInRight`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var iterable = toObject(object),\n        props = keysFunc(object),\n        length = props.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var key = props[index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Converts `value` to an object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  return isObject(value) ? value : Object(value);\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = baseFor;\n\n},{}],20:[function(require,module,exports){\narguments[4][10][0].apply(exports,arguments)\n},{\"dup\":10}],21:[function(require,module,exports){\narguments[4][12][0].apply(exports,arguments)\n},{\"dup\":12}],22:[function(require,module,exports){\narguments[4][9][0].apply(exports,arguments)\n},{\"dup\":9,\"lodash._getnative\":20,\"lodash.isarguments\":23,\"lodash.isarray\":21}],23:[function(require,module,exports){\narguments[4][11][0].apply(exports,arguments)\n},{\"dup\":11}],24:[function(require,module,exports){\narguments[4][6][0].apply(exports,arguments)\n},{\"dup\":6}],25:[function(require,module,exports){\narguments[4][7][0].apply(exports,arguments)\n},{\"dup\":7}],26:[function(require,module,exports){\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.plumin = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.opentype = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n// Run-time checking of preconditions.\n\n'use strict';\n\n// Precondition function that checks if the given predicate is true.\n// If not, it will throw an error.\nexports.argument = function(predicate, message) {\n    if (!predicate) {\n        throw new Error(message);\n    }\n};\n\n// Precondition function that checks if the given assertion is true.\n// If not, it will throw an error.\nexports.assert = exports.argument;\n\n},{}],2:[function(require,module,exports){\n// Drawing utility functions.\n\n'use strict';\n\n// Draw a line on the given context from point `x1,y1` to point `x2,y2`.\nfunction line(ctx, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\n\nexports.line = line;\n\n},{}],3:[function(require,module,exports){\n// Glyph encoding\n\n'use strict';\n\nvar cffStandardStrings = [\n    '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling',\n    'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft',\n    'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph',\n    'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand',\n    'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring',\n    'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE',\n    'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu',\n    'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn',\n    'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright',\n    'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex',\n    'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex',\n    'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute',\n    'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute',\n    'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute',\n    'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave',\n    'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', '266 ff', 'onedotenleader',\n    'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle',\n    'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior',\n    'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n    'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl',\n    'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall',\n    'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall',\n    'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds',\n    'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n    'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior',\n    'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior',\n    'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall',\n    'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall',\n    'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall',\n    'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall',\n    'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000',\n    '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\n\nvar cffStandardEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle',\n    'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger',\n    'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright',\n    'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde',\n    'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron',\n    'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '',\n    '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '',\n    'lslash', 'oslash', 'oe', 'germandbls'];\n\nvar cffExpertEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader',\n    'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n    'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon',\n    'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior',\n    'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior',\n    'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl',\n    'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n    'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior',\n    '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '',\n    '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n    'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior',\n    'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior',\n    'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall',\n    'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall',\n    'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n    'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall',\n    'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n    'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\nvar standardNames = [\n    '.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n    'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash',\n    'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less',\n    'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n    'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n    'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\n    'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde',\n    'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave',\n    'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis',\n    'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis',\n    'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section',\n    'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal',\n    'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation',\n    'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown',\n    'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright',\n    'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft',\n    'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction',\n    'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase',\n    'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute',\n    'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex',\n    'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut',\n    'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth',\n    'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior',\n    'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla',\n    'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\n// This is the encoding used for fonts created from scratch.\n// It loops through all glyphs and finds the appropriate unicode value.\n// Since it's linear time, other encodings will be faster.\nfunction DefaultEncoding(font) {\n    this.font = font;\n}\n\nDefaultEncoding.prototype.charToGlyphIndex = function(c) {\n    var code = c.charCodeAt(0);\n    var glyphs = this.font.glyphs;\n    if (glyphs) {\n        for (var i = 0; i < glyphs.length; i += 1) {\n            var glyph = glyphs[i];\n            for (var j = 0; j < glyph.unicodes.length; j += 1) {\n                if (glyph.unicodes[j] === code) {\n                    return i;\n                }\n            }\n        }\n    } else {\n        return null;\n    }\n};\n\nfunction CmapEncoding(cmap) {\n    this.cmap = cmap;\n}\n\nCmapEncoding.prototype.charToGlyphIndex = function(c) {\n    return this.cmap.glyphIndexMap[c.charCodeAt(0)] || 0;\n};\n\nfunction CffEncoding(encoding, charset) {\n    this.encoding = encoding;\n    this.charset = charset;\n}\n\nCffEncoding.prototype.charToGlyphIndex = function(s) {\n    var code = s.charCodeAt(0);\n    var charName = this.encoding[code];\n    return this.charset.indexOf(charName);\n};\n\nfunction GlyphNames(post) {\n    var i;\n    switch (post.version) {\n    case 1:\n        this.names = exports.standardNames.slice();\n        break;\n    case 2:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] < exports.standardNames.length) {\n                this.names[i] = exports.standardNames[post.glyphNameIndex[i]];\n            } else {\n                this.names[i] = post.names[post.glyphNameIndex[i] - exports.standardNames.length];\n            }\n        }\n\n        break;\n    case 2.5:\n        this.names = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            this.names[i] = exports.standardNames[i + post.glyphNameIndex[i]];\n        }\n\n        break;\n    case 3:\n        this.names = [];\n        break;\n    }\n}\n\nGlyphNames.prototype.nameToGlyphIndex = function(name) {\n    return this.names.indexOf(name);\n};\n\nGlyphNames.prototype.glyphIndexToName = function(gid) {\n    return this.names[gid];\n};\n\nfunction addGlyphNames(font) {\n    var glyph;\n    var glyphIndexMap = font.tables.cmap.glyphIndexMap;\n    var charCodes = Object.keys(glyphIndexMap);\n    for (var i = 0; i < charCodes.length; i += 1) {\n        var c = charCodes[i];\n        var glyphIndex = glyphIndexMap[c];\n        glyph = font.glyphs[glyphIndex];\n        glyph.addUnicode(parseInt(c));\n    }\n\n    for (i = 0; i < font.glyphs.length; i += 1) {\n        glyph = font.glyphs[i];\n        if (font.cffEncoding) {\n            glyph.name = font.cffEncoding.charset[i];\n        } else {\n            glyph.name = font.glyphNames.glyphIndexToName(i);\n        }\n    }\n}\n\nexports.cffStandardStrings = cffStandardStrings;\nexports.cffStandardEncoding = cffStandardEncoding;\nexports.cffExpertEncoding = cffExpertEncoding;\nexports.standardNames = standardNames;\nexports.DefaultEncoding = DefaultEncoding;\nexports.CmapEncoding = CmapEncoding;\nexports.CffEncoding = CffEncoding;\nexports.GlyphNames = GlyphNames;\nexports.addGlyphNames = addGlyphNames;\n\n},{}],4:[function(require,module,exports){\n// The Font object\n\n'use strict';\n\nvar path = require('./path');\nvar sfnt = require('./tables/sfnt');\nvar encoding = require('./encoding');\n\n// A Font represents a loaded OpenType font file.\n// It contains a set of glyphs and methods to draw text on a drawing context,\n// or to get a path representing the text.\nfunction Font(options) {\n    options = options || {};\n\n    // OS X will complain if the names are empty, so we put a single space everywhere by default.\n    this.familyName = options.familyName || ' ';\n    this.styleName = options.styleName || ' ';\n    this.designer = options.designer || ' ';\n    this.designerURL = options.designerURL || ' ';\n    this.manufacturer = options.manufacturer || ' ';\n    this.manufacturerURL = options.manufacturerURL || ' ';\n    this.license = options.license || ' ';\n    this.licenseURL = options.licenseURL || ' ';\n    this.version = options.version || 'Version 0.1';\n    this.description = options.description || ' ';\n    this.copyright = options.copyright || ' ';\n    this.trademark = options.trademark || ' ';\n    this.unitsPerEm = options.unitsPerEm || 1000;\n    this.ascender = options.ascender;\n    this.descender = options.descender;\n    this.supported = true;\n    this.glyphs = options.glyphs || [];\n    this.encoding = new encoding.DefaultEncoding(this);\n    this.tables = {};\n}\n\n// Check if the font has a glyph for the given character.\nFont.prototype.hasChar = function(c) {\n    return this.encoding.charToGlyphIndex(c) !== null;\n};\n\n// Convert the given character to a single glyph index.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyphIndex = function(s) {\n    return this.encoding.charToGlyphIndex(s);\n};\n\n// Convert the given character to a single Glyph object.\n// Note that this function assumes that there is a one-to-one mapping between\n// the given character and a glyph; for complex scripts this might not be the case.\nFont.prototype.charToGlyph = function(c) {\n    var glyphIndex = this.charToGlyphIndex(c);\n    var glyph = this.glyphs[glyphIndex];\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs[0];\n    }\n\n    return glyph;\n};\n\n// Convert the given text to a list of Glyph objects.\n// Note that there is no strict one-to-one mapping between characters and\n// glyphs, so the list of returned glyphs can be larger or smaller than the\n// length of the given string.\nFont.prototype.stringToGlyphs = function(s) {\n    var glyphs = [];\n    for (var i = 0; i < s.length; i += 1) {\n        var c = s[i];\n        glyphs.push(this.charToGlyph(c));\n    }\n\n    return glyphs;\n};\n\nFont.prototype.nameToGlyphIndex = function(name) {\n    return this.glyphNames.nameToGlyphIndex(name);\n};\n\nFont.prototype.nameToGlyph = function(name) {\n    var glyphIndex = this.nametoGlyphIndex(name);\n    var glyph = this.glyphs[glyphIndex];\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs[0];\n    }\n\n    return glyph;\n};\n\nFont.prototype.glyphIndexToName = function(gid) {\n    if (!this.glyphNames.glyphIndexToName) {\n        return '';\n    }\n\n    return this.glyphNames.glyphIndexToName(gid);\n};\n\n// Retrieve the value of the kerning pair between the left glyph (or its index)\n// and the right glyph (or its index). If no kerning pair is found, return 0.\n// The kerning value gets added to the advance width when calculating the spacing\n// between glyphs.\nFont.prototype.getKerningValue = function(leftGlyph, rightGlyph) {\n    leftGlyph = leftGlyph.index || leftGlyph;\n    rightGlyph = rightGlyph.index || rightGlyph;\n    var gposKerning = this.getGposKerningValue;\n    return gposKerning ? gposKerning(leftGlyph, rightGlyph) :\n        (this.kerningPairs[leftGlyph + ',' + rightGlyph] || 0);\n};\n\n// Helper function that invokes the given callback for each glyph in the given text.\n// The callback gets `(glyph, x, y, fontSize, options)`.\nFont.prototype.forEachGlyph = function(text, x, y, fontSize, options, callback) {\n    if (!this.supported) {\n        return;\n    }\n\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    options = options || {};\n    var kerning = options.kerning === undefined ? true : options.kerning;\n    var fontScale = 1 / this.unitsPerEm * fontSize;\n    var glyphs = this.stringToGlyphs(text);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        callback(glyph, x, y, fontSize, options);\n        if (glyph.advanceWidth) {\n            x += glyph.advanceWidth * fontScale;\n        }\n\n        if (kerning && i < glyphs.length - 1) {\n            var kerningValue = this.getKerningValue(glyph, glyphs[i + 1]);\n            x += kerningValue * fontScale;\n        }\n    }\n};\n\n// Create a Path object that represents the given text.\n//\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\n//\n// Returns a Path object.\nFont.prototype.getPath = function(text, x, y, fontSize, options) {\n    var fullPath = new path.Path();\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        var glyphPath = glyph.getPath(gX, gY, gFontSize);\n        fullPath.extend(glyphPath);\n    });\n\n    return fullPath;\n};\n\n// Draw the text on the given drawing context.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.draw = function(ctx, text, x, y, fontSize, options) {\n    this.getPath(text, x, y, fontSize, options).draw(ctx);\n};\n\n// Draw the points of all glyphs in the text.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawPoints = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawPoints(ctx, gX, gY, gFontSize);\n    });\n};\n\n// Draw lines indicating important font measurements for all glyphs in the text.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - A 2D drawing context, like Canvas.\n// text - The text to create.\n// x - Horizontal position of the beginning of the text. (default: 0)\n// y - Vertical position of the *baseline* of the text. (default: 0)\n// fontSize - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`. (default: 72)\n// Options is an optional object that contains:\n// - kerning - Whether to take kerning information into account. (default: true)\nFont.prototype.drawMetrics = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawMetrics(ctx, gX, gY, gFontSize);\n    });\n};\n\n// Validate\nFont.prototype.validate = function() {\n    var warnings = [];\n    var _this = this;\n\n    function assert(predicate, message) {\n        if (!predicate) {\n            warnings.push(message);\n        }\n    }\n\n    function assertStringAttribute(attrName) {\n        assert(_this[attrName] && _this[attrName].trim().length > 0, 'No ' + attrName + ' specified.');\n    }\n\n    // Identification information\n    assertStringAttribute('familyName');\n    assertStringAttribute('weightName');\n    assertStringAttribute('manufacturer');\n    assertStringAttribute('copyright');\n    assertStringAttribute('version');\n\n    // Dimension information\n    assert(this.unitsPerEm > 0, 'No unitsPerEm specified.');\n};\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nFont.prototype.toTables = function() {\n    return sfnt.fontToTable(this);\n};\n\nFont.prototype.toBuffer = function() {\n    var sfntTable = this.toTables();\n    var bytes = sfntTable.encode();\n    var buffer = new ArrayBuffer(bytes.length);\n    var intArray = new Uint8Array(buffer);\n    for (var i = 0; i < bytes.length; i++) {\n        intArray[i] = bytes[i];\n    }\n\n    return buffer;\n};\n\n// Initiate a download of the OpenType font.\nFont.prototype.download = function() {\n    var fileName = this.familyName.replace(/\\s/g, '') + '-' + this.styleName + '.otf';\n    var buffer = this.toBuffer();\n\n    window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;\n    window.requestFileSystem(window.TEMPORARY, buffer.byteLength, function(fs) {\n        fs.root.getFile(fileName, {create: true}, function(fileEntry) {\n            fileEntry.createWriter(function(writer) {\n                var dataView = new DataView(buffer);\n                var blob = new Blob([dataView], {type: 'font/opentype'});\n                writer.write(blob);\n\n                writer.addEventListener('writeend', function() {\n                    // Navigating to the file will download it.\n                    location.href = fileEntry.toURL();\n                }, false);\n            });\n        });\n    },\n\n    function(err) {\n        throw err;\n    });\n};\n\nexports.Font = Font;\n\n},{\"./encoding\":3,\"./path\":8,\"./tables/sfnt\":23}],5:[function(require,module,exports){\n// The Glyph object\n\n'use strict';\n\nvar check = require('./check');\nvar draw = require('./draw');\nvar path = require('./path');\n\n// A Glyph is an individual mark that often corresponds to a character.\n// Some glyphs, such as ligatures, are a combination of many characters.\n// Glyphs are the basic building blocks of a font.\n//\n// The `Glyph` class contains utility methods for drawing the path and its points.\nfunction Glyph(options) {\n    this.font = options.font || null;\n    this.index = options.index || 0;\n    this.name = options.name || null;\n    this.unicode = options.unicode || undefined;\n    this.unicodes = options.unicodes || options.unicode !== undefined ? [options.unicode] : [];\n    this.xMin = options.xMin || 0;\n    this.yMin = options.yMin || 0;\n    this.xMax = options.xMax || 0;\n    this.yMax = options.yMax || 0;\n    this.advanceWidth = options.advanceWidth || 0;\n    this.path = options.path || null;\n}\n\nGlyph.prototype.addUnicode = function(unicode) {\n    if (this.unicodes.length === 0) {\n        this.unicode = unicode;\n    }\n\n    this.unicodes.push(unicode);\n};\n\n// Convert the glyph to a Path we can draw on a drawing context.\n//\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.getPath = function(x, y, fontSize) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    var scale = 1 / this.font.unitsPerEm * fontSize;\n    var p = new path.Path();\n    var commands = this.path.commands;\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type === 'M') {\n            p.moveTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'L') {\n            p.lineTo(x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Q') {\n            p.quadraticCurveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                               x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'C') {\n            p.curveTo(x + (cmd.x1 * scale), y + (-cmd.y1 * scale),\n                      x + (cmd.x2 * scale), y + (-cmd.y2 * scale),\n                      x + (cmd.x * scale), y + (-cmd.y * scale));\n        } else if (cmd.type === 'Z') {\n            p.closePath();\n        }\n    }\n\n    return p;\n};\n\n// Split the glyph into contours.\n// This function is here for backwards compatibility, and to\n// provide raw access to the TrueType glyph outlines.\nGlyph.prototype.getContours = function() {\n    if (this.points === undefined) {\n        return [];\n    }\n\n    var contours = [];\n    var currentContour = [];\n    for (var i = 0; i < this.points.length; i += 1) {\n        var pt = this.points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n};\n\n// Calculate the xMin/yMin/xMax/yMax/lsb/rsb for a Glyph.\nGlyph.prototype.getMetrics = function() {\n    var commands = this.path.commands;\n    var xCoords = [];\n    var yCoords = [];\n    for (var i = 0; i < commands.length; i += 1) {\n        var cmd = commands[i];\n        if (cmd.type !== 'Z') {\n            xCoords.push(cmd.x);\n            yCoords.push(cmd.y);\n        }\n\n        if (cmd.type === 'Q' || cmd.type === 'C') {\n            xCoords.push(cmd.x1);\n            yCoords.push(cmd.y1);\n        }\n\n        if (cmd.type === 'C') {\n            xCoords.push(cmd.x2);\n            yCoords.push(cmd.y2);\n        }\n    }\n\n    var metrics = {\n        xMin: Math.min.apply(null, xCoords),\n        yMin: Math.min.apply(null, yCoords),\n        xMax: Math.max.apply(null, xCoords),\n        yMax: Math.max.apply(null, yCoords),\n        leftSideBearing: 0\n    };\n    metrics.rightSideBearing = this.advanceWidth - metrics.leftSideBearing - (metrics.xMax - metrics.xMin);\n    return metrics;\n};\n\n// Draw the glyph on the given context.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.draw = function(ctx, x, y, fontSize) {\n    this.getPath(x, y, fontSize).draw(ctx);\n};\n\n// Draw the points of the glyph.\n// On-curve points will be drawn in blue, off-curve points will be drawn in red.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawPoints = function(ctx, x, y, fontSize) {\n\n    function drawCircles(l, x, y, scale) {\n        var PI_SQ = Math.PI * 2;\n        ctx.beginPath();\n        for (var j = 0; j < l.length; j += 1) {\n            ctx.moveTo(x + (l[j].x * scale), y + (l[j].y * scale));\n            ctx.arc(x + (l[j].x * scale), y + (l[j].y * scale), 2, 0, PI_SQ, false);\n        }\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    var scale = 1 / this.font.unitsPerEm * fontSize;\n\n    var blueCircles = [];\n    var redCircles = [];\n    var path = this.path;\n    for (var i = 0; i < path.commands.length; i += 1) {\n        var cmd = path.commands[i];\n        if (cmd.x !== undefined) {\n            blueCircles.push({x: cmd.x, y: -cmd.y});\n        }\n\n        if (cmd.x1 !== undefined) {\n            redCircles.push({x: cmd.x1, y: -cmd.y1});\n        }\n\n        if (cmd.x2 !== undefined) {\n            redCircles.push({x: cmd.x2, y: -cmd.y2});\n        }\n    }\n\n    ctx.fillStyle = 'blue';\n    drawCircles(blueCircles, x, y, scale);\n    ctx.fillStyle = 'red';\n    drawCircles(redCircles, x, y, scale);\n};\n\n// Draw lines indicating important font measurements.\n// Black lines indicate the origin of the coordinate system (point 0,0).\n// Blue lines indicate the glyph bounding box.\n// Green line indicates the advance width of the glyph.\n//\n// ctx - The drawing context.\n// x - Horizontal position of the glyph. (default: 0)\n// y - Vertical position of the *baseline* of the glyph. (default: 0)\n// fontSize - Font size, in pixels (default: 72).\nGlyph.prototype.drawMetrics = function(ctx, x, y, fontSize) {\n    var scale;\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    scale = 1 / this.font.unitsPerEm * fontSize;\n    ctx.lineWidth = 1;\n\n    // Draw the origin\n    ctx.strokeStyle = 'black';\n    draw.line(ctx, x, -10000, x, 10000);\n    draw.line(ctx, -10000, y, 10000, y);\n\n    // Draw the glyph box\n    ctx.strokeStyle = 'blue';\n    draw.line(ctx, x + (this.xMin * scale), -10000, x + (this.xMin * scale), 10000);\n    draw.line(ctx, x + (this.xMax * scale), -10000, x + (this.xMax * scale), 10000);\n    draw.line(ctx, -10000, y + (-this.yMin * scale), 10000, y + (-this.yMin * scale));\n    draw.line(ctx, -10000, y + (-this.yMax * scale), 10000, y + (-this.yMax * scale));\n\n    // Draw the advance width\n    ctx.strokeStyle = 'green';\n    draw.line(ctx, x + (this.advanceWidth * scale), -10000, x + (this.advanceWidth * scale), 10000);\n};\n\nexports.Glyph = Glyph;\n\n},{\"./check\":1,\"./draw\":2,\"./path\":8}],6:[function(require,module,exports){\n// opentype.js\n// https://github.com/nodebox/opentype.js\n// (c) 2014 Frederik De Bleser\n// opentype.js may be freely distributed under the MIT license.\n\n/* global ArrayBuffer, DataView, Uint8Array, XMLHttpRequest  */\n\n'use strict';\n\nvar encoding = require('./encoding');\nvar _font = require('./font');\nvar glyph = require('./glyph');\nvar parse = require('./parse');\nvar path = require('./path');\n\nvar cmap = require('./tables/cmap');\nvar cff = require('./tables/cff');\nvar glyf = require('./tables/glyf');\nvar gpos = require('./tables/gpos');\nvar head = require('./tables/head');\nvar hhea = require('./tables/hhea');\nvar hmtx = require('./tables/hmtx');\nvar kern = require('./tables/kern');\nvar loca = require('./tables/loca');\nvar maxp = require('./tables/maxp');\nvar _name = require('./tables/name');\nvar os2 = require('./tables/os2');\nvar post = require('./tables/post');\n\n// File loaders /////////////////////////////////////////////////////////\n\n// Convert a Node.js Buffer to an ArrayBuffer\nfunction toArrayBuffer(buffer) {\n    var arrayBuffer = new ArrayBuffer(buffer.length);\n    var data = new Uint8Array(arrayBuffer);\n    for (var i = 0; i < buffer.length; i += 1) {\n        data[i] = buffer[i];\n    }\n\n    return arrayBuffer;\n}\n\nfunction loadFromFile(path, callback) {\n    var fs = require('fs');\n    fs.readFile(path, function(err, buffer) {\n        if (err) {\n            return callback(err.message);\n        }\n\n        callback(null, toArrayBuffer(buffer));\n    });\n}\n\nfunction loadFromUrl(url, callback) {\n    var request = new XMLHttpRequest();\n    request.open('get', url, true);\n    request.responseType = 'arraybuffer';\n    request.onload = function() {\n        if (request.status !== 200) {\n            return callback('Font could not be loaded: ' + request.statusText);\n        }\n\n        return callback(null, request.response);\n    };\n\n    request.send();\n}\n\n// Public API ///////////////////////////////////////////////////////////\n\n// Parse the OpenType file data (as an ArrayBuffer) and return a Font object.\n// If the file could not be parsed (most likely because it contains Postscript outlines)\n// we return an empty Font object with the `supported` flag set to `false`.\nfunction parseBuffer(buffer) {\n    var indexToLocFormat;\n    var hmtxOffset;\n    var glyfOffset;\n    var locaOffset;\n    var cffOffset;\n    var kernOffset;\n    var gposOffset;\n\n    // OpenType fonts use big endian byte ordering.\n    // We can't rely on typed array view types, because they operate with the endianness of the host computer.\n    // Instead we use DataViews where we can specify endianness.\n\n    var font = new _font.Font();\n    var data = new DataView(buffer, 0);\n\n    var version = parse.getFixed(data, 0);\n    if (version === 1.0) {\n        font.outlinesFormat = 'truetype';\n    } else {\n        version = parse.getTag(data, 0);\n        if (version === 'OTTO') {\n            font.outlinesFormat = 'cff';\n        } else {\n            throw new Error('Unsupported OpenType version ' + version);\n        }\n    }\n\n    var numTables = parse.getUShort(data, 4);\n\n    // Offset into the table records.\n    var p = 12;\n    for (var i = 0; i < numTables; i += 1) {\n        var tag = parse.getTag(data, p);\n        var offset = parse.getULong(data, p + 8);\n        switch (tag) {\n        case 'cmap':\n            font.tables.cmap = cmap.parse(data, offset);\n            font.encoding = new encoding.CmapEncoding(font.tables.cmap);\n            if (!font.encoding) {\n                font.supported = false;\n            }\n\n            break;\n        case 'head':\n            font.tables.head = head.parse(data, offset);\n            font.unitsPerEm = font.tables.head.unitsPerEm;\n            indexToLocFormat = font.tables.head.indexToLocFormat;\n            break;\n        case 'hhea':\n            font.tables.hhea = hhea.parse(data, offset);\n            font.ascender = font.tables.hhea.ascender;\n            font.descender = font.tables.hhea.descender;\n            font.numberOfHMetrics = font.tables.hhea.numberOfHMetrics;\n            break;\n        case 'hmtx':\n            hmtxOffset = offset;\n            break;\n        case 'maxp':\n            font.tables.maxp = maxp.parse(data, offset);\n            font.numGlyphs = font.tables.maxp.numGlyphs;\n            break;\n        case 'name':\n            font.tables.name = _name.parse(data, offset);\n            font.familyName = font.tables.name.fontFamily;\n            font.styleName = font.tables.name.fontSubfamily;\n            break;\n        case 'OS/2':\n            font.tables.os2 = os2.parse(data, offset);\n            break;\n        case 'post':\n            font.tables.post = post.parse(data, offset);\n            font.glyphNames = new encoding.GlyphNames(font.tables.post);\n            break;\n        case 'glyf':\n            glyfOffset = offset;\n            break;\n        case 'loca':\n            locaOffset = offset;\n            break;\n        case 'CFF ':\n            cffOffset = offset;\n            break;\n        case 'kern':\n            kernOffset = offset;\n            break;\n        case 'GPOS':\n            gposOffset = offset;\n            break;\n        }\n        p += 16;\n    }\n\n    if (glyfOffset && locaOffset) {\n        var shortVersion = indexToLocFormat === 0;\n        var locaTable = loca.parse(data, locaOffset, font.numGlyphs, shortVersion);\n        font.glyphs = glyf.parse(data, glyfOffset, locaTable, font);\n        hmtx.parse(data, hmtxOffset, font.numberOfHMetrics, font.numGlyphs, font.glyphs);\n        encoding.addGlyphNames(font);\n    } else if (cffOffset) {\n        cff.parse(data, cffOffset, font);\n        encoding.addGlyphNames(font);\n    } else {\n        font.supported = false;\n    }\n\n    if (font.supported) {\n        if (kernOffset) {\n            font.kerningPairs = kern.parse(data, kernOffset);\n        } else {\n            font.kerningPairs = {};\n        }\n\n        if (gposOffset) {\n            gpos.parse(data, gposOffset, font);\n        }\n    }\n\n    return font;\n}\n\n// Asynchronously load the font from a URL or a filesystem. When done, call the callback\n// with two arguments `(err, font)`. The `err` will be null on success,\n// the `font` is a Font object.\n//\n// We use the node.js callback convention so that\n// opentype.js can integrate with frameworks like async.js.\nfunction load(url, callback) {\n    var isNode = typeof window === 'undefined';\n    var loadFn = isNode ? loadFromFile : loadFromUrl;\n    loadFn(url, function(err, arrayBuffer) {\n        if (err) {\n            return callback(err);\n        }\n\n        var font = parseBuffer(arrayBuffer);\n        if (!font.supported) {\n            return callback('Font is not supported (is this a Postscript font?)');\n        }\n\n        return callback(null, font);\n    });\n}\n\nexports._parse = parse;\nexports.Font = _font.Font;\nexports.Glyph = glyph.Glyph;\nexports.Path = path.Path;\nexports.parse = parseBuffer;\nexports.load = load;\n\n},{\"./encoding\":3,\"./font\":4,\"./glyph\":5,\"./parse\":7,\"./path\":8,\"./tables/cff\":10,\"./tables/cmap\":11,\"./tables/glyf\":12,\"./tables/gpos\":13,\"./tables/head\":14,\"./tables/hhea\":15,\"./tables/hmtx\":16,\"./tables/kern\":17,\"./tables/loca\":18,\"./tables/maxp\":19,\"./tables/name\":20,\"./tables/os2\":21,\"./tables/post\":22,\"fs\":undefined}],7:[function(require,module,exports){\n// Parsing utility functions\n\n'use strict';\n\n// Retrieve an unsigned byte from the DataView.\nexports.getByte = function getByte(dataView, offset) {\n    return dataView.getUint8(offset);\n};\n\nexports.getCard8 = exports.getByte;\n\n// Retrieve an unsigned 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getUShort = function(dataView, offset) {\n    return dataView.getUint16(offset, false);\n};\n\nexports.getCard16 = exports.getUShort;\n\n// Retrieve a signed 16-bit short from the DataView.\n// The value is stored in big endian.\nexports.getShort = function(dataView, offset) {\n    return dataView.getInt16(offset, false);\n};\n\n// Retrieve an unsigned 32-bit long from the DataView.\n// The value is stored in big endian.\nexports.getULong = function(dataView, offset) {\n    return dataView.getUint32(offset, false);\n};\n\n// Retrieve a 32-bit signed fixed-point number (16.16) from the DataView.\n// The value is stored in big endian.\nexports.getFixed = function(dataView, offset) {\n    var decimal = dataView.getInt16(offset, false);\n    var fraction = dataView.getUint16(offset + 2, false);\n    return decimal + fraction / 65535;\n};\n\n// Retrieve a 4-character tag from the DataView.\n// Tags are used to identify tables.\nexports.getTag = function(dataView, offset) {\n    var tag = '';\n    for (var i = offset; i < offset + 4; i += 1) {\n        tag += String.fromCharCode(dataView.getInt8(i));\n    }\n\n    return tag;\n};\n\n// Retrieve an offset from the DataView.\n// Offsets are 1 to 4 bytes in length, depending on the offSize argument.\nexports.getOffset = function(dataView, offset, offSize) {\n    var v = 0;\n    for (var i = 0; i < offSize; i += 1) {\n        v <<= 8;\n        v += dataView.getUint8(offset + i);\n    }\n\n    return v;\n};\n\n// Retrieve a number of bytes from start offset to the end offset from the DataView.\nexports.getBytes = function(dataView, startOffset, endOffset) {\n    var bytes = [];\n    for (var i = startOffset; i < endOffset; i += 1) {\n        bytes.push(dataView.getUint8(i));\n    }\n\n    return bytes;\n};\n\n// Convert the list of bytes to a string.\nexports.bytesToString = function(bytes) {\n    var s = '';\n    for (var i = 0; i < bytes.length; i += 1) {\n        s += String.fromCharCode(bytes[i]);\n    }\n\n    return s;\n};\n\nvar typeOffsets = {\n    byte: 1,\n    uShort: 2,\n    short: 2,\n    uLong: 4,\n    fixed: 4,\n    longDateTime: 8,\n    tag: 4\n};\n\n// A stateful parser that changes the offset whenever a value is retrieved.\n// The data is a DataView.\nfunction Parser(data, offset) {\n    this.data = data;\n    this.offset = offset;\n    this.relativeOffset = 0;\n}\n\nParser.prototype.parseByte = function() {\n    var v = this.data.getUint8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseChar = function() {\n    var v = this.data.getInt8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseCard8 = Parser.prototype.parseByte;\n\nParser.prototype.parseUShort = function() {\n    var v = this.data.getUint16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseCard16 = Parser.prototype.parseUShort;\nParser.prototype.parseSID = Parser.prototype.parseUShort;\nParser.prototype.parseOffset16 = Parser.prototype.parseUShort;\n\nParser.prototype.parseShort = function() {\n    var v = this.data.getInt16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseF2Dot14 = function() {\n    var v = this.data.getInt16(this.offset + this.relativeOffset) / 16384;\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseULong = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseFixed = function() {\n    var v = exports.getFixed(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseOffset16List =\nParser.prototype.parseUShortList = function(count) {\n    var offsets = new Array(count);\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    for (var i = 0; i < count; i++) {\n        offsets[i] = exports.getUShort(dataView, offset);\n        offset += 2;\n    }\n\n    this.relativeOffset += count * 2;\n    return offsets;\n};\n\nParser.prototype.parseString = function(length) {\n    var dataView = this.data;\n    var offset = this.offset + this.relativeOffset;\n    var string = '';\n    this.relativeOffset += length;\n    for (var i = 0; i < length; i++) {\n        string += String.fromCharCode(dataView.getUint8(offset + i));\n    }\n\n    return string;\n};\n\nParser.prototype.parseTag = function() {\n    return this.parseString(4);\n};\n\n// LONGDATETIME is a 64-bit integer.\n// JavaScript and unix timestamps traditionally use 32 bits, so we\n// only take the last 32 bits.\nParser.prototype.parseLongDateTime = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset + 4);\n    this.relativeOffset += 8;\n    return v;\n};\n\nParser.prototype.parseFixed = function() {\n    var v = exports.getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v / 65536;\n};\n\nParser.prototype.parseVersion = function() {\n    var major = exports.getUShort(this.data, this.offset + this.relativeOffset);\n\n    // How to interpret the minor version is very vague in the spec. 0x5000 is 5, 0x1000 is 1\n    // This returns the correct number if minor = 0xN000 where N is 0-9\n    var minor = exports.getUShort(this.data, this.offset + this.relativeOffset + 2);\n    this.relativeOffset += 4;\n    return major + minor / 0x1000 / 10;\n};\n\nParser.prototype.skip = function(type, amount) {\n    if (amount === undefined) {\n        amount = 1;\n    }\n\n    this.relativeOffset += typeOffsets[type] * amount;\n};\n\nexports.Parser = Parser;\n\n},{}],8:[function(require,module,exports){\n// Geometric objects\n\n'use strict';\n\n// A bézier path containing a set of path commands similar to a SVG path.\n// Paths can be drawn on a context using `draw`.\nfunction Path() {\n    this.commands = [];\n    this.fill = 'black';\n    this.stroke = null;\n    this.strokeWidth = 1;\n}\n\nPath.prototype.moveTo = function(x, y) {\n    this.commands.push({\n        type: 'M',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.lineTo = function(x, y) {\n    this.commands.push({\n        type: 'L',\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.curveTo = Path.prototype.bezierCurveTo = function(x1, y1, x2, y2, x, y) {\n    this.commands.push({\n        type: 'C',\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.quadTo = Path.prototype.quadraticCurveTo = function(x1, y1, x, y) {\n    this.commands.push({\n        type: 'Q',\n        x1: x1,\n        y1: y1,\n        x: x,\n        y: y\n    });\n};\n\nPath.prototype.close = Path.prototype.closePath = function() {\n    this.commands.push({\n        type: 'Z'\n    });\n};\n\n// Add the given path or list of commands to the commands of this path.\nPath.prototype.extend = function(pathOrCommands) {\n    if (pathOrCommands.commands) {\n        pathOrCommands = pathOrCommands.commands;\n    }\n\n    Array.prototype.push.apply(this.commands, pathOrCommands);\n};\n\n// Draw the path to a 2D context.\nPath.prototype.draw = function(ctx) {\n    ctx.beginPath();\n    for (var i = 0; i < this.commands.length; i += 1) {\n        var cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            ctx.moveTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            ctx.lineTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            ctx.bezierCurveTo(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            ctx.quadraticCurveTo(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            ctx.closePath();\n        }\n    }\n\n    if (this.fill) {\n        ctx.fillStyle = this.fill;\n        ctx.fill();\n    }\n\n    if (this.stroke) {\n        ctx.strokeStyle = this.stroke;\n        ctx.lineWidth = this.strokeWidth;\n        ctx.stroke();\n    }\n};\n\n// Convert the Path to a string of path data instructions\n// See http://www.w3.org/TR/SVG/paths.html#PathData\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toPathData = function(decimalPlaces) {\n    decimalPlaces = decimalPlaces !== undefined ? decimalPlaces : 2;\n\n    function floatToString(v) {\n        if (Math.round(v) === v) {\n            return '' + Math.round(v);\n        } else {\n            return v.toFixed(decimalPlaces);\n        }\n    }\n\n    function packValues() {\n        var s = '';\n        for (var i = 0; i < arguments.length; i += 1) {\n            var v = arguments[i];\n            if (v >= 0 && i > 0) {\n                s += ' ';\n            }\n\n            s += floatToString(v);\n        }\n\n        return s;\n    }\n\n    var d = '';\n    for (var i = 0; i < this.commands.length; i += 1) {\n        var cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            d += 'M' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            d += 'L' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            d += 'C' + packValues(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            d += 'Q' + packValues(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            d += 'Z';\n        }\n    }\n\n    return d;\n};\n\n// Convert the path to a SVG <path> element, as a string.\n// Parameters:\n// - decimalPlaces: The amount of decimal places for floating-point values (default: 2)\nPath.prototype.toSVG = function(decimalPlaces) {\n    var svg = '<path d=\"';\n    svg += this.toPathData(decimalPlaces);\n    svg += '\"';\n    if (this.fill & this.fill !== 'black') {\n        if (this.fill === null) {\n            svg += ' fill=\"none\"';\n        } else {\n            svg += ' fill=\"' + this.fill + '\"';\n        }\n    }\n\n    if (this.stroke) {\n        svg += ' stroke=\"' + this.stroke + '\" stroke-width=\"' + this.strokeWidth + '\"';\n    }\n\n    svg += '/>';\n    return svg;\n};\n\nexports.Path = Path;\n\n},{}],9:[function(require,module,exports){\n// Table metadata\n\n'use strict';\n\nvar check = require('./check');\nvar encode = require('./types').encode;\nvar sizeOf = require('./types').sizeOf;\n\nfunction Table(tableName, fields, options) {\n    var i;\n    for (i = 0; i < fields.length; i += 1) {\n        var field = fields[i];\n        this[field.name] = field.value;\n    }\n\n    this.tableName = tableName;\n    this.fields = fields;\n    if (options) {\n        var optionKeys = Object.keys(options);\n        for (i = 0; i < optionKeys.length; i += 1) {\n            var k = optionKeys[i];\n            var v = options[k];\n            if (this[k] !== undefined) {\n                this[k] = v;\n            }\n        }\n    }\n}\n\nTable.prototype.sizeOf = function() {\n    var v = 0;\n    for (var i = 0; i < this.fields.length; i += 1) {\n        var field = this.fields[i];\n        var value = this[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        if (typeof value.sizeOf === 'function') {\n            v += value.sizeOf();\n        } else {\n            var sizeOfFunction = sizeOf[field.type];\n            check.assert(typeof sizeOfFunction === 'function', 'Could not find sizeOf function for field' + field.name);\n            v += sizeOfFunction(value);\n        }\n    }\n\n    return v;\n};\n\nTable.prototype.encode = function() {\n    return encode.TABLE(this);\n};\n\nexports.Table = Table;\n\n},{\"./check\":1,\"./types\":24}],10:[function(require,module,exports){\n// The `CFF` table contains the glyph outlines in PostScript format.\n// https://www.microsoft.com/typography/OTSPEC/cff.htm\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/cff.pdf\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/type2.pdf\n\n'use strict';\n\nvar encoding = require('../encoding');\nvar _glyph = require('../glyph');\nvar parse = require('../parse');\nvar path = require('../path');\nvar table = require('../table');\n\n// Custom equals function that can also check lists.\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    } else if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n\n        for (var i = 0; i < a.length; i += 1) {\n            if (!equals(a[i], b[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Parse a `CFF` INDEX array.\n// An index array consists of a list of offsets, then a list of objects at those offsets.\nfunction parseCFFIndex(data, start, conversionFn) {\n    //var i, objectOffset, endOffset;\n    var offsets = [];\n    var objects = [];\n    var count = parse.getCard16(data, start);\n    var i;\n    var objectOffset;\n    var endOffset;\n    if (count !== 0) {\n        var offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + ((count + 1) * offsetSize) + 2;\n        var pos = start + 3;\n        for (i = 0; i < count + 1; i += 1) {\n            offsets.push(parse.getOffset(data, pos, offsetSize));\n            pos += offsetSize;\n        }\n\n        // The total size of the index array is 4 header bytes + the value of the last offset.\n        endOffset = objectOffset + offsets[count];\n    } else {\n        endOffset = start + 2;\n    }\n\n    for (i = 0; i < offsets.length - 1; i += 1) {\n        var value = parse.getBytes(data, objectOffset + offsets[i], objectOffset + offsets[i + 1]);\n        if (conversionFn) {\n            value = conversionFn(value);\n        }\n\n        objects.push(value);\n    }\n\n    return {objects: objects, startOffset: start, endOffset: endOffset};\n}\n\n// Parse a `CFF` DICT real value.\nfunction parseFloatOperand(parser) {\n    var s = '';\n    var eof = 15;\n    var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n    while (true) {\n        var b = parser.parseByte();\n        var n1 = b >> 4;\n        var n2 = b & 15;\n\n        if (n1 === eof) {\n            break;\n        }\n\n        s += lookup[n1];\n\n        if (n2 === eof) {\n            break;\n        }\n\n        s += lookup[n2];\n    }\n\n    return parseFloat(s);\n}\n\n// Parse a `CFF` DICT operand.\nfunction parseOperand(parser, b0) {\n    var b1;\n    var b2;\n    var b3;\n    var b4;\n    if (b0 === 28) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        return b1 << 8 | b2;\n    }\n\n    if (b0 === 29) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        b3 = parser.parseByte();\n        b4 = parser.parseByte();\n        return b1 << 24 | b2 << 16 | b3 << 8 | b4;\n    }\n\n    if (b0 === 30) {\n        return parseFloatOperand(parser);\n    }\n\n    if (b0 >= 32 && b0 <= 246) {\n        return b0 - 139;\n    }\n\n    if (b0 >= 247 && b0 <= 250) {\n        b1 = parser.parseByte();\n        return (b0 - 247) * 256 + b1 + 108;\n    }\n\n    if (b0 >= 251 && b0 <= 254) {\n        b1 = parser.parseByte();\n        return -(b0 - 251) * 256 - b1 - 108;\n    }\n\n    throw new Error('Invalid b0 ' + b0);\n}\n\n// Convert the entries returned by `parseDict` to a proper dictionary.\n// If a value is a list of one, it is unpacked.\nfunction entriesToObject(entries) {\n    var o = {};\n    for (var i = 0; i < entries.length; i += 1) {\n        var key = entries[i][0];\n        var values = entries[i][1];\n        var value;\n        if (values.length === 1) {\n            value = values[0];\n        } else {\n            value = values;\n        }\n\n        if (o.hasOwnProperty(key)) {\n            throw new Error('Object ' + o + ' already has key ' + key);\n        }\n\n        o[key] = value;\n    }\n\n    return o;\n}\n\n// Parse a `CFF` DICT object.\n// A dictionary contains key-value pairs in a compact tokenized format.\nfunction parseCFFDict(data, start, size) {\n    start = start !== undefined ? start : 0;\n    var parser = new parse.Parser(data, start);\n    var entries = [];\n    var operands = [];\n    size = size !== undefined ? size : data.length;\n\n    while (parser.relativeOffset < size) {\n        var op = parser.parseByte();\n\n        // The first byte for each dict item distinguishes between operator (key) and operand (value).\n        // Values <= 21 are operators.\n        if (op <= 21) {\n            // Two-byte operators have an initial escape byte of 12.\n            if (op === 12) {\n                op = 1200 + parser.parseByte();\n            }\n\n            entries.push([op, operands]);\n            operands = [];\n        } else {\n            // Since the operands (values) come before the operators (keys), we store all operands in a list\n            // until we encounter an operator.\n            operands.push(parseOperand(parser, op));\n        }\n    }\n\n    return entriesToObject(entries);\n}\n\n// Given a String Index (SID), return the value of the string.\n// Strings below index 392 are standard CFF strings and are not encoded in the font.\nfunction getCFFString(strings, index) {\n    if (index <= 390) {\n        index = encoding.cffStandardStrings[index];\n    } else {\n        index = strings[index - 391];\n    }\n\n    return index;\n}\n\n// Interpret a dictionary and return a new dictionary with readable keys and values for missing entries.\n// This function takes `meta` which is a list of objects containing `operand`, `name` and `default`.\nfunction interpretDict(dict, meta, strings) {\n    var newDict = {};\n\n    // Because we also want to include missing values, we start out from the meta list\n    // and lookup values in the dict.\n    for (var i = 0; i < meta.length; i += 1) {\n        var m = meta[i];\n        var value = dict[m.op];\n        if (value === undefined) {\n            value = m.value !== undefined ? m.value : null;\n        }\n\n        if (m.type === 'SID') {\n            value = getCFFString(strings, value);\n        }\n\n        newDict[m.name] = value;\n    }\n\n    return newDict;\n}\n\n// Parse the CFF header.\nfunction parseCFFHeader(data, start) {\n    var header = {};\n    header.formatMajor = parse.getCard8(data, start);\n    header.formatMinor = parse.getCard8(data, start + 1);\n    header.size = parse.getCard8(data, start + 2);\n    header.offsetSize = parse.getCard8(data, start + 3);\n    header.startOffset = start;\n    header.endOffset = start + 4;\n    return header;\n}\n\nvar TOP_DICT_META = [\n    {name: 'version', op: 0, type: 'SID'},\n    {name: 'notice', op: 1, type: 'SID'},\n    {name: 'copyright', op: 1200, type: 'SID'},\n    {name: 'fullName', op: 2, type: 'SID'},\n    {name: 'familyName', op: 3, type: 'SID'},\n    {name: 'weight', op: 4, type: 'SID'},\n    {name: 'isFixedPitch', op: 1201, type: 'number', value: 0},\n    {name: 'italicAngle', op: 1202, type: 'number', value: 0},\n    {name: 'underlinePosition', op: 1203, type: 'number', value: -100},\n    {name: 'underlineThickness', op: 1204, type: 'number', value: 50},\n    {name: 'paintType', op: 1205, type: 'number', value: 0},\n    {name: 'charstringType', op: 1206, type: 'number', value: 2},\n    {name: 'fontMatrix', op: 1207, type: ['real', 'real', 'real', 'real', 'real', 'real'], value: [0.001, 0, 0, 0.001, 0, 0]},\n    {name: 'uniqueId', op: 13, type: 'number'},\n    {name: 'fontBBox', op: 5, type: ['number', 'number', 'number', 'number'], value: [0, 0, 0, 0]},\n    {name: 'strokeWidth', op: 1208, type: 'number', value: 0},\n    {name: 'xuid', op: 14, type: [], value: null},\n    {name: 'charset', op: 15, type: 'offset', value: 0},\n    {name: 'encoding', op: 16, type: 'offset', value: 0},\n    {name: 'charStrings', op: 17, type: 'offset', value: 0},\n    {name: 'private', op: 18, type: ['number', 'offset'], value: [0, 0]}\n];\n\nvar PRIVATE_DICT_META = [\n    {name: 'subrs', op: 19, type: 'offset', value: 0},\n    {name: 'defaultWidthX', op: 20, type: 'number', value: 0},\n    {name: 'nominalWidthX', op: 21, type: 'number', value: 0}\n];\n\n// Parse the CFF top dictionary. A CFF table can contain multiple fonts, each with their own top dictionary.\n// The top dictionary contains the essential metadata for the font, together with the private dictionary.\nfunction parseCFFTopDict(data, strings) {\n    var dict = parseCFFDict(data, 0, data.byteLength);\n    return interpretDict(dict, TOP_DICT_META, strings);\n}\n\n// Parse the CFF private dictionary. We don't fully parse out all the values, only the ones we need.\nfunction parseCFFPrivateDict(data, start, size, strings) {\n    var dict = parseCFFDict(data, start, size);\n    return interpretDict(dict, PRIVATE_DICT_META, strings);\n}\n\n// Parse the CFF charset table, which contains internal names for all the glyphs.\n// This function will return a list of glyph names.\n// See Adobe TN #5176 chapter 13, \"Charsets\".\nfunction parseCFFCharset(data, start, nGlyphs, strings) {\n    var i;\n    var sid;\n    var count;\n    var parser = new parse.Parser(data, start);\n\n    // The .notdef glyph is not included, so subtract 1.\n    nGlyphs -= 1;\n    var charset = ['.notdef'];\n\n    var format = parser.parseCard8();\n    if (format === 0) {\n        for (i = 0; i < nGlyphs; i += 1) {\n            sid = parser.parseSID();\n            charset.push(getCFFString(strings, sid));\n        }\n    } else if (format === 1) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard8();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else if (format === 2) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard16();\n            for (i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown charset format ' + format);\n    }\n\n    return charset;\n}\n\n// Parse the CFF encoding data. Only one encoding can be specified per font.\n// See Adobe TN #5176 chapter 12, \"Encodings\".\nfunction parseCFFEncoding(data, start, charset) {\n    var i;\n    var code;\n    var enc = {};\n    var parser = new parse.Parser(data, start);\n    var format = parser.parseCard8();\n    if (format === 0) {\n        var nCodes = parser.parseCard8();\n        for (i = 0; i < nCodes; i += 1) {\n            code = parser.parseCard8();\n            enc[code] = i;\n        }\n    } else if (format === 1) {\n        var nRanges = parser.parseCard8();\n        code = 1;\n        for (i = 0; i < nRanges; i += 1) {\n            var first = parser.parseCard8();\n            var nLeft = parser.parseCard8();\n            for (var j = first; j <= first + nLeft; j += 1) {\n                enc[j] = code;\n                code += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown encoding format ' + format);\n    }\n\n    return new encoding.CffEncoding(enc, charset);\n}\n\n// Take in charstring code and return a Glyph object.\n// The encoding is described in the Type 2 Charstring Format\n// https://www.microsoft.com/typography/OTSPEC/charstr2.htm\nfunction parseCFFCharstring(code, font, index) {\n    var c1x;\n    var c1y;\n    var c2x;\n    var c2y;\n    var p = new path.Path();\n    var stack = [];\n    var nStems = 0;\n    var haveWidth = false;\n    var width = font.defaultWidthX;\n    var open = false;\n    var x = 0;\n    var y = 0;\n\n    function newContour(x, y) {\n        if (open) {\n            p.closePath();\n        }\n\n        p.moveTo(x, y);\n        open = true;\n    }\n\n    function parseStems() {\n        var hasWidthArg;\n\n        // The number of stem operators on the stack is always even.\n        // If the value is uneven, that means a width is specified.\n        hasWidthArg = stack.length % 2 !== 0;\n        if (hasWidthArg && !haveWidth) {\n            width = stack.shift() + font.nominalWidthX;\n        }\n\n        nStems += stack.length >> 1;\n        stack.length = 0;\n        haveWidth = true;\n    }\n\n    function parse(code) {\n        var b1;\n        var b2;\n        var b3;\n        var b4;\n        var codeIndex;\n        var subrCode;\n        var jpx;\n        var jpy;\n        var c3x;\n        var c3y;\n        var c4x;\n        var c4y;\n\n        var i = 0;\n        while (i < code.length) {\n            var v = code[i];\n            i += 1;\n            switch (v) {\n            case 1: // hstem\n                parseStems();\n                break;\n            case 3: // vstem\n                parseStems();\n                break;\n            case 4: // vmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                y += stack.pop();\n                newContour(x, y);\n                break;\n            case 5: // rlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 6: // hlineto\n                while (stack.length > 0) {\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 7: // vlineto\n                while (stack.length > 0) {\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    x += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                break;\n            case 8: // rrcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 10: // callsubr\n                codeIndex = stack.pop() + font.subrsBias;\n                subrCode = font.subrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n\n                break;\n            case 11: // return\n                return;\n            case 12: // flex operators\n                v = code[i];\n                i += 1;\n                switch (v) {\n                case 35: // flex\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 dx6 dy6 fd flex (12 35) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    y = c4y + stack.shift();      // dy6\n                    stack.shift();                // flex depth\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 34: // hflex\n                    // |- dx1 dx2 dy2 dx3 dx4 dx5 dx6 hflex (12 34) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y;                      // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = y;                      // dy5\n                    x = c4x + stack.shift();      // dx6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 36: // hflex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dx4 dx5 dy5 dx6 hflex1 (12 36) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y;                    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = c2y;                    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    x = c4x + stack.shift();      // dx6\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                case 37: // flex1\n                    // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 d6 flex1 (12 37) |-\n                    c1x = x   + stack.shift();    // dx1\n                    c1y = y   + stack.shift();    // dy1\n                    c2x = c1x + stack.shift();    // dx2\n                    c2y = c1y + stack.shift();    // dy2\n                    jpx = c2x + stack.shift();    // dx3\n                    jpy = c2y + stack.shift();    // dy3\n                    c3x = jpx + stack.shift();    // dx4\n                    c3y = jpy + stack.shift();    // dy4\n                    c4x = c3x + stack.shift();    // dx5\n                    c4y = c3y + stack.shift();    // dy5\n                    if (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n                        x = c4x + stack.shift();\n                    } else {\n                        y = c4y + stack.shift();\n                    }\n\n                    p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                    p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                    break;\n                default:\n                    console.log('Glyph ' + index + ': unknown operator ' + 1200 + v);\n                    stack.length = 0;\n                }\n                break;\n            case 14: // endchar\n                if (stack.length > 0 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                if (open) {\n                    p.closePath();\n                    open = false;\n                }\n\n                break;\n            case 18: // hstemhm\n                parseStems();\n                break;\n            case 19: // hintmask\n            case 20: // cntrmask\n                parseStems();\n                i += (nStems + 7) >> 3;\n                break;\n            case 21: // rmoveto\n                if (stack.length > 2 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                y += stack.pop();\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 22: // hmoveto\n                if (stack.length > 1 && !haveWidth) {\n                    width = stack.shift() + font.nominalWidthX;\n                    haveWidth = true;\n                }\n\n                x += stack.pop();\n                newContour(x, y);\n                break;\n            case 23: // vstemhm\n                parseStems();\n                break;\n            case 24: // rcurveline\n                while (stack.length > 2) {\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                x += stack.shift();\n                y += stack.shift();\n                p.lineTo(x, y);\n                break;\n            case 25: // rlinecurve\n                while (stack.length > 6) {\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                }\n\n                c1x = x + stack.shift();\n                c1y = y + stack.shift();\n                c2x = c1x + stack.shift();\n                c2y = c1y + stack.shift();\n                x = c2x + stack.shift();\n                y = c2y + stack.shift();\n                p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                break;\n            case 26: // vvcurveto\n                if (stack.length % 2) {\n                    x += stack.shift();\n                }\n\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x;\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 27: // hhcurveto\n                if (stack.length % 2) {\n                    y += stack.shift();\n                }\n\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y;\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 28: // shortint\n                b1 = code[i];\n                b2 = code[i + 1];\n                stack.push(((b1 << 24) | (b2 << 16)) >> 16);\n                i += 2;\n                break;\n            case 29: // callgsubr\n                codeIndex = stack.pop() + font.gsubrsBias;\n                subrCode = font.gsubrs[codeIndex];\n                if (subrCode) {\n                    parse(subrCode);\n                }\n\n                break;\n            case 30: // vhcurveto\n                while (stack.length > 0) {\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            case 31: // hvcurveto\n                while (stack.length > 0) {\n                    c1x = x + stack.shift();\n                    c1y = y;\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    y = c2y + stack.shift();\n                    x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    if (stack.length === 0) {\n                        break;\n                    }\n\n                    c1x = x;\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                }\n\n                break;\n            default:\n                if (v < 32) {\n                    console.log('Glyph ' + index + ': unknown operator ' + v);\n                } else if (v < 247) {\n                    stack.push(v - 139);\n                } else if (v < 251) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push((v - 247) * 256 + b1 + 108);\n                } else if (v < 255) {\n                    b1 = code[i];\n                    i += 1;\n                    stack.push(-(v - 251) * 256 - b1 - 108);\n                } else {\n                    b1 = code[i];\n                    b2 = code[i + 1];\n                    b3 = code[i + 2];\n                    b4 = code[i + 3];\n                    i += 4;\n                    stack.push(((b1 << 24) | (b2 << 16) | (b3 << 8) | b4) / 65536);\n                }\n            }\n        }\n    }\n\n    parse(code);\n    var glyph = new _glyph.Glyph({font: font, index: index});\n    glyph.path = p;\n    glyph.advanceWidth = width;\n    return glyph;\n}\n\n// Subroutines are encoded using the negative half of the number space.\n// See type 2 chapter 4.7 \"Subroutine operators\".\nfunction calcCFFSubroutineBias(subrs) {\n    var bias;\n    if (subrs.length < 1240) {\n        bias = 107;\n    } else if (subrs.length < 33900) {\n        bias = 1131;\n    } else {\n        bias = 32768;\n    }\n\n    return bias;\n}\n\n// Parse the `CFF` table, which contains the glyph outlines in PostScript format.\nfunction parseCFFTable(data, start, font) {\n    font.tables.cff = {};\n    var header = parseCFFHeader(data, start);\n    var nameIndex = parseCFFIndex(data, header.endOffset, parse.bytesToString);\n    var topDictIndex = parseCFFIndex(data, nameIndex.endOffset);\n    var stringIndex = parseCFFIndex(data, topDictIndex.endOffset, parse.bytesToString);\n    var globalSubrIndex = parseCFFIndex(data, stringIndex.endOffset);\n    font.gsubrs = globalSubrIndex.objects;\n    font.gsubrsBias = calcCFFSubroutineBias(font.gsubrs);\n\n    var topDictData = new DataView(new Uint8Array(topDictIndex.objects[0]).buffer);\n    var topDict = parseCFFTopDict(topDictData, stringIndex.objects);\n    font.tables.cff.topDict = topDict;\n\n    var privateDictOffset = start + topDict['private'][1];\n    var privateDict = parseCFFPrivateDict(data, privateDictOffset, topDict['private'][0], stringIndex.objects);\n    font.defaultWidthX = privateDict.defaultWidthX;\n    font.nominalWidthX = privateDict.nominalWidthX;\n\n    if (privateDict.subrs !== 0) {\n        var subrOffset = privateDictOffset + privateDict.subrs;\n        var subrIndex = parseCFFIndex(data, subrOffset);\n        font.subrs = subrIndex.objects;\n        font.subrsBias = calcCFFSubroutineBias(font.subrs);\n    } else {\n        font.subrs = [];\n        font.subrsBias = 0;\n    }\n\n    // Offsets in the top dict are relative to the beginning of the CFF data, so add the CFF start offset.\n    var charStringsIndex = parseCFFIndex(data, start + topDict.charStrings);\n    font.nGlyphs = charStringsIndex.objects.length;\n\n    var charset = parseCFFCharset(data, start + topDict.charset, font.nGlyphs, stringIndex.objects);\n    if (topDict.encoding === 0) { // Standard encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffStandardEncoding, charset);\n    } else if (topDict.encoding === 1) { // Expert encoding\n        font.cffEncoding = new encoding.CffEncoding(encoding.cffExpertEncoding, charset);\n    } else {\n        font.cffEncoding = parseCFFEncoding(data, start + topDict.encoding, charset);\n    }\n\n    // Prefer the CMAP encoding to the CFF encoding.\n    font.encoding = font.encoding || font.cffEncoding;\n\n    font.glyphs = [];\n    for (var i = 0; i < font.nGlyphs; i += 1) {\n        var charString = charStringsIndex.objects[i];\n        font.glyphs.push(parseCFFCharstring(charString, font, i));\n    }\n}\n\n// Convert a string to a String ID (SID).\n// The list of strings is modified in place.\nfunction encodeString(s, strings) {\n    var sid;\n\n    // Is the string in the CFF standard strings?\n    var i = encoding.cffStandardStrings.indexOf(s);\n    if (i >= 0) {\n        sid = i;\n    }\n\n    // Is the string already in the string index?\n    i = strings.indexOf(s);\n    if (i >= 0) {\n        sid = i + encoding.cffStandardStrings.length;\n    } else {\n        sid = encoding.cffStandardStrings.length + strings.length;\n        strings.push(s);\n    }\n\n    return sid;\n}\n\nfunction makeHeader() {\n    return new table.Table('Header', [\n        {name: 'major', type: 'Card8', value: 1},\n        {name: 'minor', type: 'Card8', value: 0},\n        {name: 'hdrSize', type: 'Card8', value: 4},\n        {name: 'major', type: 'Card8', value: 1}\n    ]);\n}\n\nfunction makeNameIndex(fontNames) {\n    var t = new table.Table('Name INDEX', [\n        {name: 'names', type: 'INDEX', value: []}\n    ]);\n    t.names = [];\n    for (var i = 0; i < fontNames.length; i += 1) {\n        t.names.push({name: 'name_' + i, type: 'NAME', value: fontNames[i]});\n    }\n\n    return t;\n}\n\n// Given a dictionary's metadata, create a DICT structure.\nfunction makeDict(meta, attrs, strings) {\n    var m = {};\n    for (var i = 0; i < meta.length; i += 1) {\n        var entry = meta[i];\n        var value = attrs[entry.name];\n        if (value !== undefined && !equals(value, entry.value)) {\n            if (entry.type === 'SID') {\n                value = encodeString(value, strings);\n            }\n\n            m[entry.op] = {name: entry.name, type: entry.type, value: value};\n        }\n    }\n\n    return m;\n}\n\n// The Top DICT houses the global font attributes.\nfunction makeTopDict(attrs, strings) {\n    var t = new table.Table('Top DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(TOP_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makeTopDictIndex(topDict) {\n    var t = new table.Table('Top DICT INDEX', [\n        {name: 'topDicts', type: 'INDEX', value: []}\n    ]);\n    t.topDicts = [{name: 'topDict_0', type: 'TABLE', value: topDict}];\n    return t;\n}\n\nfunction makeStringIndex(strings) {\n    var t = new table.Table('String INDEX', [\n        {name: 'strings', type: 'INDEX', value: []}\n    ]);\n    t.strings = [];\n    for (var i = 0; i < strings.length; i += 1) {\n        t.strings.push({name: 'string_' + i, type: 'STRING', value: strings[i]});\n    }\n\n    return t;\n}\n\nfunction makeGlobalSubrIndex() {\n    // Currently we don't use subroutines.\n    return new table.Table('Global Subr INDEX', [\n        {name: 'subrs', type: 'INDEX', value: []}\n    ]);\n}\n\nfunction makeCharsets(glyphNames, strings) {\n    var t = new table.Table('Charsets', [\n        {name: 'format', type: 'Card8', value: 0}\n    ]);\n    for (var i = 0; i < glyphNames.length; i += 1) {\n        var glyphName = glyphNames[i];\n        var glyphSID = encodeString(glyphName, strings);\n        t.fields.push({name: 'glyph_' + i, type: 'SID', value: glyphSID});\n    }\n\n    return t;\n}\n\nfunction glyphToOps(glyph) {\n    var ops = [];\n    var path = glyph.path;\n    ops.push({name: 'width', type: 'NUMBER', value: glyph.advanceWidth});\n    var x = 0;\n    var y = 0;\n    for (var i = 0; i < path.commands.length; i += 1) {\n        var dx;\n        var dy;\n        var cmd = path.commands[i];\n        if (cmd.type === 'Q') {\n            // CFF only supports bézier curves, so convert the quad to a bézier.\n            var _13 = 1 / 3;\n            var _23 = 2 / 3;\n\n            // We're going to create a new command so we don't change the original path.\n            cmd = {\n                type: 'C',\n                x: cmd.x,\n                y: cmd.y,\n                x1: _13 * x + _23 * cmd.x1,\n                y1: _13 * y + _23 * cmd.y1,\n                x2: _13 * cmd.x + _23 * cmd.x1,\n                y2: _13 * cmd.y + _23 * cmd.y1\n            };\n        }\n\n        if (cmd.type === 'M') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rmoveto', type: 'OP', value: 21});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'L') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rlineto', type: 'OP', value: 5});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'C') {\n            var dx1 = Math.round(cmd.x1 - x);\n            var dy1 = Math.round(cmd.y1 - y);\n            var dx2 = Math.round(cmd.x2 - cmd.x1);\n            var dy2 = Math.round(cmd.y2 - cmd.y1);\n            dx = Math.round(cmd.x - cmd.x2);\n            dy = Math.round(cmd.y - cmd.y2);\n            ops.push({name: 'dx1', type: 'NUMBER', value: dx1});\n            ops.push({name: 'dy1', type: 'NUMBER', value: dy1});\n            ops.push({name: 'dx2', type: 'NUMBER', value: dx2});\n            ops.push({name: 'dy2', type: 'NUMBER', value: dy2});\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rrcurveto', type: 'OP', value: 8});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        }\n\n        // Contours are closed automatically.\n\n    }\n\n    ops.push({name: 'endchar', type: 'OP', value: 14});\n    return ops;\n}\n\nfunction makeCharStringsIndex(glyphs) {\n    var t = new table.Table('CharStrings INDEX', [\n        {name: 'charStrings', type: 'INDEX', value: []}\n    ]);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        var ops = glyphToOps(glyph);\n        t.charStrings.push({name: glyph.name, type: 'CHARSTRING', value: ops});\n    }\n\n    return t;\n}\n\nfunction makePrivateDict(attrs, strings) {\n    var t = new table.Table('Private DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(PRIVATE_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makePrivateDictIndex(privateDict) {\n    var t = new table.Table('Private DICT INDEX', [\n        {name: 'privateDicts', type: 'INDEX', value: []}\n    ]);\n    t.privateDicts = [{name: 'privateDict_0', type: 'TABLE', value: privateDict}];\n    return t;\n}\n\nfunction makeCFFTable(glyphs, options) {\n    var t = new table.Table('CFF ', [\n        {name: 'header', type: 'TABLE'},\n        {name: 'nameIndex', type: 'TABLE'},\n        {name: 'topDictIndex', type: 'TABLE'},\n        {name: 'stringIndex', type: 'TABLE'},\n        {name: 'globalSubrIndex', type: 'TABLE'},\n        {name: 'charsets', type: 'TABLE'},\n        {name: 'charStringsIndex', type: 'TABLE'},\n        {name: 'privateDictIndex', type: 'TABLE'}\n    ]);\n\n    // We use non-zero values for the offsets so that the DICT encodes them.\n    // This is important because the size of the Top DICT plays a role in offset calculation,\n    // and the size shouldn't change after we've written correct offsets.\n    var attrs = {\n        version: options.version,\n        fullName: options.fullName,\n        familyName: options.familyName,\n        weight: options.weightName,\n        charset: 999,\n        encoding: 0,\n        charStrings: 999,\n        private: [0, 999]\n    };\n\n    var privateAttrs = {};\n\n    var glyphNames = [];\n\n    // Skip first glyph (.notdef)\n    for (var i = 1; i < glyphs.length; i += 1) {\n        glyphNames.push(glyphs[i].name);\n    }\n\n    var strings = [];\n\n    t.header = makeHeader();\n    t.nameIndex = makeNameIndex([options.postScriptName]);\n    var topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n    t.globalSubrIndex = makeGlobalSubrIndex();\n    t.charsets = makeCharsets(glyphNames, strings);\n    t.charStringsIndex = makeCharStringsIndex(glyphs);\n    var privateDict = makePrivateDict(privateAttrs, strings);\n    t.privateDictIndex = makePrivateDictIndex(privateDict);\n\n    // Needs to come at the end, to encode all custom strings used in the font.\n    t.stringIndex = makeStringIndex(strings);\n\n    var startOffset = t.header.sizeOf() +\n        t.nameIndex.sizeOf() +\n        t.topDictIndex.sizeOf() +\n        t.stringIndex.sizeOf() +\n        t.globalSubrIndex.sizeOf();\n    attrs.charset = startOffset;\n\n    // We use the CFF standard encoding; proper encoding will be handled in cmap.\n    attrs.encoding = 0;\n    attrs.charStrings = attrs.charset + t.charsets.sizeOf();\n    attrs.private[1] = attrs.charStrings + t.charStringsIndex.sizeOf();\n\n    // Recreate the Top DICT INDEX with the correct offsets.\n    topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n\n    return t;\n}\n\nexports.parse = parseCFFTable;\nexports.make = makeCFFTable;\n\n},{\"../encoding\":3,\"../glyph\":5,\"../parse\":7,\"../path\":8,\"../table\":9}],11:[function(require,module,exports){\n// The `cmap` table stores the mappings from characters to glyphs.\n// https://www.microsoft.com/typography/OTSPEC/cmap.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the `cmap` table. This table stores the mappings from characters to glyphs.\n// There are many available formats, but we only support the Windows format 4.\n// This function returns a `CmapEncoding` object or null if no supported format could be found.\nfunction parseCmapTable(data, start) {\n    var i;\n    var cmap = {};\n    cmap.version = parse.getUShort(data, start);\n    check.argument(cmap.version === 0, 'cmap table version should be 0.');\n\n    // The cmap table can contain many sub-tables, each with their own format.\n    // We're only interested in a \"platform 3\" table. This is a Windows format.\n    cmap.numTables = parse.getUShort(data, start + 2);\n    var offset = -1;\n    for (i = 0; i < cmap.numTables; i += 1) {\n        var platformId = parse.getUShort(data, start + 4 + (i * 8));\n        var encodingId = parse.getUShort(data, start + 4 + (i * 8) + 2);\n        if (platformId === 3 && (encodingId === 1 || encodingId === 0)) {\n            offset = parse.getULong(data, start + 4 + (i * 8) + 4);\n            break;\n        }\n    }\n\n    if (offset === -1) {\n        // There is no cmap table in the font that we support, so return null.\n        // This font will be marked as unsupported.\n        return null;\n    }\n\n    var p = new parse.Parser(data, start + offset);\n    cmap.format = p.parseUShort();\n    check.argument(cmap.format === 4, 'Only format 4 cmap tables are supported.');\n\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseUShort();\n    cmap.language = p.parseUShort();\n\n    // segCount is stored x 2.\n    var segCount;\n    cmap.segCount = segCount = p.parseUShort() >> 1;\n\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n\n    // The \"unrolled\" mapping from character codes to glyph indices.\n    cmap.glyphIndexMap = {};\n\n    var endCountParser = new parse.Parser(data, start + offset + 14);\n    var startCountParser = new parse.Parser(data, start + offset + 16 + segCount * 2);\n    var idDeltaParser = new parse.Parser(data, start + offset + 16 + segCount * 4);\n    var idRangeOffsetParser = new parse.Parser(data, start + offset + 16 + segCount * 6);\n    var glyphIndexOffset = start + offset + 16 + segCount * 8;\n    for (i = 0; i < segCount - 1; i += 1) {\n        var glyphIndex;\n        var endCount = endCountParser.parseUShort();\n        var startCount = startCountParser.parseUShort();\n        var idDelta = idDeltaParser.parseShort();\n        var idRangeOffset = idRangeOffsetParser.parseUShort();\n        for (var c = startCount; c <= endCount; c += 1) {\n            if (idRangeOffset !== 0) {\n                // The idRangeOffset is relative to the current position in the idRangeOffset array.\n                // Take the current offset in the idRangeOffset array.\n                glyphIndexOffset = (idRangeOffsetParser.offset + idRangeOffsetParser.relativeOffset - 2);\n\n                // Add the value of the idRangeOffset, which will move us into the glyphIndex array.\n                glyphIndexOffset += idRangeOffset;\n\n                // Then add the character index of the current segment, multiplied by 2 for USHORTs.\n                glyphIndexOffset += (c - startCount) * 2;\n                glyphIndex = parse.getUShort(data, glyphIndexOffset);\n                if (glyphIndex !== 0) {\n                    glyphIndex = (glyphIndex + idDelta) & 0xFFFF;\n                }\n            } else {\n                glyphIndex = (c + idDelta) & 0xFFFF;\n            }\n\n            cmap.glyphIndexMap[c] = glyphIndex;\n        }\n    }\n\n    return cmap;\n}\n\nfunction addSegment(t, code, glyphIndex) {\n    t.segments.push({\n        end: code,\n        start: code,\n        delta: -(code - glyphIndex),\n        offset: 0\n    });\n}\n\nfunction addTerminatorSegment(t) {\n    t.segments.push({\n        end: 0xFFFF,\n        start: 0xFFFF,\n        delta: 1,\n        offset: 0\n    });\n}\n\nfunction makeCmapTable(glyphs) {\n    var i;\n    var t = new table.Table('cmap', [\n        {name: 'version', type: 'USHORT', value: 0},\n        {name: 'numTables', type: 'USHORT', value: 1},\n        {name: 'platformID', type: 'USHORT', value: 3},\n        {name: 'encodingID', type: 'USHORT', value: 1},\n        {name: 'offset', type: 'ULONG', value: 12},\n        {name: 'format', type: 'USHORT', value: 4},\n        {name: 'length', type: 'USHORT', value: 0},\n        {name: 'language', type: 'USHORT', value: 0},\n        {name: 'segCountX2', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n\n    t.segments = [];\n    for (i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        for (var j = 0; j < glyph.unicodes.length; j += 1) {\n            addSegment(t, glyph.unicodes[j], i);\n        }\n\n        t.segments = t.segments.sort(function(a, b) {\n            return a.start - b.start;\n        });\n    }\n\n    addTerminatorSegment(t);\n\n    var segCount;\n    segCount = t.segments.length;\n    t.segCountX2 = segCount * 2;\n    t.searchRange = Math.pow(2, Math.floor(Math.log(segCount) / Math.log(2))) * 2;\n    t.entrySelector = Math.log(t.searchRange / 2) / Math.log(2);\n    t.rangeShift = t.segCountX2 - t.searchRange;\n\n    // Set up parallel segment arrays.\n    var endCounts = [];\n    var startCounts = [];\n    var idDeltas = [];\n    var idRangeOffsets = [];\n    var glyphIds = [];\n\n    for (i = 0; i < segCount; i += 1) {\n        var segment = t.segments[i];\n        endCounts = endCounts.concat({name: 'end_' + i, type: 'USHORT', value: segment.end});\n        startCounts = startCounts.concat({name: 'start_' + i, type: 'USHORT', value: segment.start});\n        idDeltas = idDeltas.concat({name: 'idDelta_' + i, type: 'SHORT', value: segment.delta});\n        idRangeOffsets = idRangeOffsets.concat({name: 'idRangeOffset_' + i, type: 'USHORT', value: segment.offset});\n        if (segment.glyphId !== undefined) {\n            glyphIds = glyphIds.concat({name: 'glyph_' + i, type: 'USHORT', value: segment.glyphId});\n        }\n    }\n\n    t.fields = t.fields.concat(endCounts);\n    t.fields.push({name: 'reservedPad', type: 'USHORT', value: 0});\n    t.fields = t.fields.concat(startCounts);\n    t.fields = t.fields.concat(idDeltas);\n    t.fields = t.fields.concat(idRangeOffsets);\n    t.fields = t.fields.concat(glyphIds);\n\n    t.length = 14 + // Subtable header\n        endCounts.length * 2 +\n        2 + // reservedPad\n        startCounts.length * 2 +\n        idDeltas.length * 2 +\n        idRangeOffsets.length * 2 +\n        glyphIds.length * 2;\n\n    return t;\n}\n\nexports.parse = parseCmapTable;\nexports.make = makeCmapTable;\n\n},{\"../check\":1,\"../parse\":7,\"../table\":9}],12:[function(require,module,exports){\n// The `glyf` table describes the glyphs in TrueType outline format.\n// http://www.microsoft.com/typography/otspec/glyf.htm\n\n'use strict';\n\nvar check = require('../check');\nvar _glyph = require('../glyph');\nvar parse = require('../parse');\nvar path = require('../path');\n\n// Parse the coordinate data for a glyph.\nfunction parseGlyphCoordinate(p, flag, previousValue, shortVectorBitMask, sameBitMask) {\n    var v;\n    if ((flag & shortVectorBitMask) > 0) {\n        // The coordinate is 1 byte long.\n        v = p.parseByte();\n        // The `same` bit is re-used for short values to signify the sign of the value.\n        if ((flag & sameBitMask) === 0) {\n            v = -v;\n        }\n\n        v = previousValue + v;\n    } else {\n        //  The coordinate is 2 bytes long.\n        // If the `same` bit is set, the coordinate is the same as the previous coordinate.\n        if ((flag & sameBitMask) > 0) {\n            v = previousValue;\n        } else {\n            // Parse the coordinate as a signed 16-bit delta value.\n            v = previousValue + p.parseShort();\n        }\n    }\n\n    return v;\n}\n\n// Parse a TrueType glyph.\nfunction parseGlyph(data, start, index, font) {\n    //var p, glyph, flag, i, j, flags,\n    //    endPointIndices, numberOfCoordinates, repeatCount, points, point, px, py,\n    //    component, moreComponents;\n    var p = new parse.Parser(data, start);\n    var glyph = new _glyph.Glyph({font: font, index: index});\n    glyph.numberOfContours = p.parseShort();\n    glyph.xMin = p.parseShort();\n    glyph.yMin = p.parseShort();\n    glyph.xMax = p.parseShort();\n    glyph.yMax = p.parseShort();\n    var flags;\n    var flag;\n    if (glyph.numberOfContours > 0) {\n        var i;\n        // This glyph is not a composite.\n        var endPointIndices = glyph.endPointIndices = [];\n        for (i = 0; i < glyph.numberOfContours; i += 1) {\n            endPointIndices.push(p.parseUShort());\n        }\n\n        glyph.instructionLength = p.parseUShort();\n        glyph.instructions = [];\n        for (i = 0; i < glyph.instructionLength; i += 1) {\n            glyph.instructions.push(p.parseByte());\n        }\n\n        var numberOfCoordinates = endPointIndices[endPointIndices.length - 1] + 1;\n        flags = [];\n        for (i = 0; i < numberOfCoordinates; i += 1) {\n            flag = p.parseByte();\n            flags.push(flag);\n            // If bit 3 is set, we repeat this flag n times, where n is the next byte.\n            if ((flag & 8) > 0) {\n                var repeatCount = p.parseByte();\n                for (var j = 0; j < repeatCount; j += 1) {\n                    flags.push(flag);\n                    i += 1;\n                }\n            }\n        }\n\n        check.argument(flags.length === numberOfCoordinates, 'Bad flags.');\n\n        if (endPointIndices.length > 0) {\n            var points = [];\n            var point;\n            // X/Y coordinates are relative to the previous point, except for the first point which is relative to 0,0.\n            if (numberOfCoordinates > 0) {\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = {};\n                    point.onCurve = !!(flag & 1);\n                    point.lastPointOfContour = endPointIndices.indexOf(i) >= 0;\n                    points.push(point);\n                }\n\n                var px = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.x = parseGlyphCoordinate(p, flag, px, 2, 16);\n                    px = point.x;\n                }\n\n                var py = 0;\n                for (i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.y = parseGlyphCoordinate(p, flag, py, 4, 32);\n                    py = point.y;\n                }\n            }\n\n            glyph.points = points;\n        } else {\n            glyph.points = [];\n        }\n    } else if (glyph.numberOfContours === 0) {\n        glyph.points = [];\n    } else {\n        glyph.isComposite = true;\n        glyph.points = [];\n        glyph.components = [];\n        var moreComponents = true;\n        while (moreComponents) {\n            flags = p.parseUShort();\n            var component = {\n                glyphIndex: p.parseUShort(),\n                xScale: 1,\n                scale01: 0,\n                scale10: 0,\n                yScale: 1,\n                dx: 0,\n                dy: 0\n            };\n            if ((flags & 1) > 0) {\n                // The arguments are words\n                component.dx = p.parseShort();\n                component.dy = p.parseShort();\n            } else {\n                // The arguments are bytes\n                component.dx = p.parseChar();\n                component.dy = p.parseChar();\n            }\n\n            if ((flags & 8) > 0) {\n                // We have a scale\n                component.xScale = component.yScale = p.parseF2Dot14();\n            } else if ((flags & 64) > 0) {\n                // We have an X / Y scale\n                component.xScale = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            } else if ((flags & 128) > 0) {\n                // We have a 2x2 transformation\n                component.xScale = p.parseF2Dot14();\n                component.scale01 = p.parseF2Dot14();\n                component.scale10 = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            }\n\n            glyph.components.push(component);\n            moreComponents = !!(flags & 32);\n        }\n    }\n\n    return glyph;\n}\n\n// Transform an array of points and return a new array.\nfunction transformPoints(points, transform) {\n    var newPoints = [];\n    for (var i = 0; i < points.length; i += 1) {\n        var pt = points[i];\n        var newPt = {\n            x: transform.xScale * pt.x + transform.scale01 * pt.y + transform.dx,\n            y: transform.scale10 * pt.x + transform.yScale * pt.y + transform.dy,\n            onCurve: pt.onCurve,\n            lastPointOfContour: pt.lastPointOfContour\n        };\n        newPoints.push(newPt);\n    }\n\n    return newPoints;\n}\n\nfunction getContours(points) {\n    var contours = [];\n    var currentContour = [];\n    for (var i = 0; i < points.length; i += 1) {\n        var pt = points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n}\n\n// Convert the TrueType glyph outline to a Path.\nfunction getPath(points) {\n    var p = new path.Path();\n    if (!points) {\n        return p;\n    }\n\n    var contours = getContours(points);\n    for (var i = 0; i < contours.length; i += 1) {\n        var contour = contours[i];\n        var firstPt = contour[0];\n        var lastPt = contour[contour.length - 1];\n        var curvePt;\n        var realFirstPoint;\n        if (firstPt.onCurve) {\n            curvePt = null;\n            // The first point will be consumed by the moveTo command,\n            // so skip it in the loop.\n            realFirstPoint = true;\n        } else {\n            if (lastPt.onCurve) {\n                // If the first point is off-curve and the last point is on-curve,\n                // start at the last point.\n                firstPt = lastPt;\n            } else {\n                // If both first and last points are off-curve, start at their middle.\n                firstPt = { x: (firstPt.x + lastPt.x) / 2, y: (firstPt.y + lastPt.y) / 2 };\n            }\n\n            curvePt = firstPt;\n            // The first point is synthesized, so don't skip the real first point.\n            realFirstPoint = false;\n        }\n\n        p.moveTo(firstPt.x, firstPt.y);\n\n        for (var j = realFirstPoint ? 1 : 0; j < contour.length; j += 1) {\n            var pt = contour[j];\n            var prevPt = j === 0 ? firstPt : contour[j - 1];\n            if (prevPt.onCurve && pt.onCurve) {\n                // This is a straight line.\n                p.lineTo(pt.x, pt.y);\n            } else if (prevPt.onCurve && !pt.onCurve) {\n                curvePt = pt;\n            } else if (!prevPt.onCurve && !pt.onCurve) {\n                var midPt = { x: (prevPt.x + pt.x) / 2, y: (prevPt.y + pt.y) / 2 };\n                p.quadraticCurveTo(prevPt.x, prevPt.y, midPt.x, midPt.y);\n                curvePt = pt;\n            } else if (!prevPt.onCurve && pt.onCurve) {\n                // Previous point off-curve, this point on-curve.\n                p.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n                curvePt = null;\n            } else {\n                throw new Error('Invalid state.');\n            }\n        }\n\n        if (firstPt !== lastPt) {\n            // Connect the last and first points\n            if (curvePt) {\n                p.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n            } else {\n                p.lineTo(firstPt.x, firstPt.y);\n            }\n        }\n    }\n\n    p.closePath();\n    return p;\n}\n\n// Parse all the glyphs according to the offsets from the `loca` table.\nfunction parseGlyfTable(data, start, loca, font) {\n    var glyphs = [];\n    var i;\n    // The last element of the loca table is invalid.\n    for (i = 0; i < loca.length - 1; i += 1) {\n        var offset = loca[i];\n        var nextOffset = loca[i + 1];\n        if (offset !== nextOffset) {\n            glyphs.push(parseGlyph(data, start + offset, i, font));\n        } else {\n            glyphs.push(new _glyph.Glyph({font: font, index: i}));\n        }\n    }\n    // Go over the glyphs again, resolving the composite glyphs.\n    for (i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        if (glyph.isComposite) {\n            for (var j = 0; j < glyph.components.length; j += 1) {\n                var component = glyph.components[j];\n                var componentGlyph = glyphs[component.glyphIndex];\n                if (componentGlyph.points) {\n                    var transformedPoints = transformPoints(componentGlyph.points, component);\n                    glyph.points = glyph.points.concat(transformedPoints);\n                }\n            }\n        }\n\n        glyph.path = getPath(glyph.points);\n    }\n\n    return glyphs;\n}\n\nexports.parse = parseGlyfTable;\n\n},{\"../check\":1,\"../glyph\":5,\"../parse\":7,\"../path\":8}],13:[function(require,module,exports){\n// The `GPOS` table contains kerning pairs, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\n\n// Parse ScriptList and FeatureList tables of GPOS, GSUB, GDEF, BASE, JSTF tables.\n// These lists are unused by now, this function is just the basis for a real parsing.\nfunction parseTaggedListTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var n = p.parseUShort();\n    var list = [];\n    for (var i = 0; i < n; i++) {\n        list[p.parseTag()] = { offset: p.parseUShort() };\n    }\n\n    return list;\n}\n\n// Parse a coverage table in a GSUB, GPOS or GDEF table.\n// Format 1 is a simple list of glyph ids,\n// Format 2 is a list of ranges. It is expanded in a list of glyphs, maybe not the best idea.\nfunction parseCoverageTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var format = p.parseUShort();\n    var count =  p.parseUShort();\n    if (format === 1) {\n        return p.parseUShortList(count);\n    }\n    else if (format === 2) {\n        var coverage = [];\n        for (; count--;) {\n            var begin = p.parseUShort();\n            var end = p.parseUShort();\n            var index = p.parseUShort();\n            for (var i = begin; i <= end; i++) {\n                coverage[index++] = i;\n            }\n        }\n\n        return coverage;\n    }\n}\n\n// Parse a Class Definition Table in a GSUB, GPOS or GDEF table.\n// Returns a function that gets a class value from a glyph ID.\nfunction parseClassDefTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var format = p.parseUShort();\n    if (format === 1) {\n        // Format 1 specifies a range of consecutive glyph indices, one class per glyph ID.\n        var startGlyph = p.parseUShort();\n        var glyphCount = p.parseUShort();\n        var classes = p.parseUShortList(glyphCount);\n        return function(glyphID) {\n            return classes[glyphID - startGlyph] || 0;\n        };\n    }\n    else if (format === 2) {\n        // Format 2 defines multiple groups of glyph indices that belong to the same class.\n        var rangeCount = p.parseUShort();\n        var startGlyphs = [];\n        var endGlyphs = [];\n        var classValues = [];\n        for (var i = 0; i < rangeCount; i++) {\n            startGlyphs[i] = p.parseUShort();\n            endGlyphs[i] = p.parseUShort();\n            classValues[i] = p.parseUShort();\n        }\n\n        return function(glyphID) {\n            var l = 0;\n            var r = startGlyphs.length - 1;\n            while (l < r) {\n                var c = (l + r + 1) >> 1;\n                if (glyphID < startGlyphs[c]) {\n                    r = c - 1;\n                } else {\n                    l = c;\n                }\n            }\n\n            if (startGlyphs[l] <= glyphID && glyphID <= endGlyphs[l]) {\n                return classValues[l] || 0;\n            }\n\n            return 0;\n        };\n    }\n}\n\n// Parse a pair adjustment positioning subtable, format 1 or format 2\n// The subtable is returned in the form of a lookup function.\nfunction parsePairPosSubTable(data, start) {\n    var p = new parse.Parser(data, start);\n    // This part is common to format 1 and format 2 subtables\n    var format = p.parseUShort();\n    var coverageOffset = p.parseUShort();\n    var coverage = parseCoverageTable(data, start + coverageOffset);\n    // valueFormat 4: XAdvance only, 1: XPlacement only, 0: no ValueRecord for second glyph\n    // Only valueFormat1=4 and valueFormat2=0 is supported.\n    var valueFormat1 = p.parseUShort();\n    var valueFormat2 = p.parseUShort();\n    var value1;\n    var value2;\n    if (valueFormat1 !== 4 || valueFormat2 !== 0) return;\n    var sharedPairSets = {};\n    if (format === 1) {\n        // Pair Positioning Adjustment: Format 1\n        var pairSetCount = p.parseUShort();\n        var pairSet = [];\n        // Array of offsets to PairSet tables-from beginning of PairPos subtable-ordered by Coverage Index\n        var pairSetOffsets = p.parseOffset16List(pairSetCount);\n        for (var firstGlyph = 0; firstGlyph < pairSetCount; firstGlyph++) {\n            var pairSetOffset = pairSetOffsets[firstGlyph];\n            var sharedPairSet = sharedPairSets[pairSetOffset];\n            if (!sharedPairSet) {\n                // Parse a pairset table in a pair adjustment subtable format 1\n                sharedPairSet = {};\n                p.relativeOffset = pairSetOffset;\n                var pairValueCount = p.parseUShort();\n                for (; pairValueCount--;) {\n                    var secondGlyph = p.parseUShort();\n                    if (valueFormat1) value1 = p.parseShort();\n                    if (valueFormat2) value2 = p.parseShort();\n                    // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                    // so value1 is the XAdvance and value2 is empty.\n                    sharedPairSet[secondGlyph] = value1;\n                }\n            }\n\n            pairSet[coverage[firstGlyph]] = sharedPairSet;\n        }\n\n        return function(leftGlyph, rightGlyph) {\n            var pairs = pairSet[leftGlyph];\n            if (pairs) return pairs[rightGlyph];\n        };\n    }\n    else if (format === 2) {\n        // Pair Positioning Adjustment: Format 2\n        var classDef1Offset = p.parseUShort();\n        var classDef2Offset = p.parseUShort();\n        var class1Count = p.parseUShort();\n        var class2Count = p.parseUShort();\n        var getClass1 = parseClassDefTable(data, start + classDef1Offset);\n        var getClass2 = parseClassDefTable(data, start + classDef2Offset);\n\n        // Parse kerning values by class pair.\n        var kerningMatrix = [];\n        for (var i = 0; i < class1Count; i++) {\n            var kerningRow = kerningMatrix[i] = [];\n            for (var j = 0; j < class2Count; j++) {\n                if (valueFormat1) value1 = p.parseShort();\n                if (valueFormat2) value2 = p.parseShort();\n                // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                // so value1 is the XAdvance and value2 is empty.\n                kerningRow[j] = value1;\n            }\n        }\n\n        // Convert coverage list to a hash\n        var covered = {};\n        for (i = 0; i < coverage.length; i++) covered[coverage[i]] = 1;\n\n        // Get the kerning value for a specific glyph pair.\n        return function(leftGlyph, rightGlyph) {\n            if (!covered[leftGlyph]) return;\n            var class1 = getClass1(leftGlyph);\n            var class2 = getClass2(rightGlyph);\n            var kerningRow = kerningMatrix[class1];\n\n            if (kerningRow) {\n                return kerningRow[class2];\n            }\n        };\n    }\n}\n\n// Parse a LookupTable (present in of GPOS, GSUB, GDEF, BASE, JSTF tables).\nfunction parseLookupTable(data, start) {\n    var p = new parse.Parser(data, start);\n    var lookupType = p.parseUShort();\n    var lookupFlag = p.parseUShort();\n    var useMarkFilteringSet = lookupFlag & 0x10;\n    var subTableCount = p.parseUShort();\n    var subTableOffsets = p.parseOffset16List(subTableCount);\n    var table = {\n        lookupType: lookupType,\n        lookupFlag: lookupFlag,\n        markFilteringSet: useMarkFilteringSet ? p.parseUShort() : -1\n    };\n    // LookupType 2, Pair adjustment\n    if (lookupType === 2) {\n        var subtables = [];\n        for (var i = 0; i < subTableCount; i++) {\n            subtables.push(parsePairPosSubTable(data, start + subTableOffsets[i]));\n        }\n        // Return a function which finds the kerning values in the subtables.\n        table.getKerningValue = function(leftGlyph, rightGlyph) {\n            for (var i = subtables.length; i--;) {\n                var value = subtables[i](leftGlyph, rightGlyph);\n                if (value !== undefined) return value;\n            }\n\n            return 0;\n        };\n    }\n\n    return table;\n}\n\n// Parse the `GPOS` table which contains, among other things, kerning pairs.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\nfunction parseGposTable(data, start, font) {\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseFixed();\n    check.argument(tableVersion === 1, 'Unsupported GPOS table version.');\n\n    // ScriptList and FeatureList - ignored for now\n    parseTaggedListTable(data, start + p.parseUShort());\n    // 'kern' is the feature we are looking for.\n    parseTaggedListTable(data, start + p.parseUShort());\n\n    // LookupList\n    var lookupListOffset = p.parseUShort();\n    p.relativeOffset = lookupListOffset;\n    var lookupCount = p.parseUShort();\n    var lookupTableOffsets = p.parseOffset16List(lookupCount);\n    var lookupListAbsoluteOffset = start + lookupListOffset;\n    for (var i = 0; i < lookupCount; i++) {\n        var table = parseLookupTable(data, lookupListAbsoluteOffset + lookupTableOffsets[i]);\n        if (table.lookupType === 2 && !font.getGposKerningValue) font.getGposKerningValue = table.getKerningValue;\n    }\n}\n\nexports.parse = parseGposTable;\n\n},{\"../check\":1,\"../parse\":7}],14:[function(require,module,exports){\n// The `head` table contains global information about the font.\n// https://www.microsoft.com/typography/OTSPEC/head.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the header `head` table\nfunction parseHeadTable(data, start) {\n    var head = {};\n    var p = new parse.Parser(data, start);\n    head.version = p.parseVersion();\n    head.fontRevision = Math.round(p.parseFixed() * 1000) / 1000;\n    head.checkSumAdjustment = p.parseULong();\n    head.magicNumber = p.parseULong();\n    check.argument(head.magicNumber === 0x5F0F3CF5, 'Font header has wrong magic number.');\n    head.flags = p.parseUShort();\n    head.unitsPerEm = p.parseUShort();\n    head.created = p.parseLongDateTime();\n    head.modified = p.parseLongDateTime();\n    head.xMin = p.parseShort();\n    head.yMin = p.parseShort();\n    head.xMax = p.parseShort();\n    head.yMax = p.parseShort();\n    head.macStyle = p.parseUShort();\n    head.lowestRecPPEM = p.parseUShort();\n    head.fontDirectionHint = p.parseShort();\n    head.indexToLocFormat = p.parseShort();     // 50\n    head.glyphDataFormat = p.parseShort();\n    return head;\n}\n\nfunction makeHeadTable(options) {\n    return new table.Table('head', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'fontRevision', type: 'FIXED', value: 0x00010000},\n        {name: 'checkSumAdjustment', type: 'ULONG', value: 0},\n        {name: 'magicNumber', type: 'ULONG', value: 0x5F0F3CF5},\n        {name: 'flags', type: 'USHORT', value: 0},\n        {name: 'unitsPerEm', type: 'USHORT', value: 1000},\n        {name: 'created', type: 'LONGDATETIME', value: 0},\n        {name: 'modified', type: 'LONGDATETIME', value: 0},\n        {name: 'xMin', type: 'SHORT', value: 0},\n        {name: 'yMin', type: 'SHORT', value: 0},\n        {name: 'xMax', type: 'SHORT', value: 0},\n        {name: 'yMax', type: 'SHORT', value: 0},\n        {name: 'macStyle', type: 'USHORT', value: 0},\n        {name: 'lowestRecPPEM', type: 'USHORT', value: 0},\n        {name: 'fontDirectionHint', type: 'SHORT', value: 2},\n        {name: 'indexToLocFormat', type: 'SHORT', value: 0},\n        {name: 'glyphDataFormat', type: 'SHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHeadTable;\nexports.make = makeHeadTable;\n\n},{\"../check\":1,\"../parse\":7,\"../table\":9}],15:[function(require,module,exports){\n// The `hhea` table contains information for horizontal layout.\n// https://www.microsoft.com/typography/OTSPEC/hhea.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the horizontal header `hhea` table\nfunction parseHheaTable(data, start) {\n    var hhea = {};\n    var p = new parse.Parser(data, start);\n    hhea.version = p.parseVersion();\n    hhea.ascender = p.parseShort();\n    hhea.descender = p.parseShort();\n    hhea.lineGap = p.parseShort();\n    hhea.advanceWidthMax = p.parseUShort();\n    hhea.minLeftSideBearing = p.parseShort();\n    hhea.minRightSideBearing = p.parseShort();\n    hhea.xMaxExtent = p.parseShort();\n    hhea.caretSlopeRise = p.parseShort();\n    hhea.caretSlopeRun = p.parseShort();\n    hhea.caretOffset = p.parseShort();\n    p.relativeOffset += 8;\n    hhea.metricDataFormat = p.parseShort();\n    hhea.numberOfHMetrics = p.parseUShort();\n    return hhea;\n}\n\nfunction makeHheaTable(options) {\n    return new table.Table('hhea', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'ascender', type: 'FWORD', value: 0},\n        {name: 'descender', type: 'FWORD', value: 0},\n        {name: 'lineGap', type: 'FWORD', value: 0},\n        {name: 'advanceWidthMax', type: 'UFWORD', value: 0},\n        {name: 'minLeftSideBearing', type: 'FWORD', value: 0},\n        {name: 'minRightSideBearing', type: 'FWORD', value: 0},\n        {name: 'xMaxExtent', type: 'FWORD', value: 0},\n        {name: 'caretSlopeRise', type: 'SHORT', value: 1},\n        {name: 'caretSlopeRun', type: 'SHORT', value: 0},\n        {name: 'caretOffset', type: 'SHORT', value: 0},\n        {name: 'reserved1', type: 'SHORT', value: 0},\n        {name: 'reserved2', type: 'SHORT', value: 0},\n        {name: 'reserved3', type: 'SHORT', value: 0},\n        {name: 'reserved4', type: 'SHORT', value: 0},\n        {name: 'metricDataFormat', type: 'SHORT', value: 0},\n        {name: 'numberOfHMetrics', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.parse = parseHheaTable;\nexports.make = makeHheaTable;\n\n},{\"../parse\":7,\"../table\":9}],16:[function(require,module,exports){\n// The `hmtx` table contains the horizontal metrics for all glyphs.\n// https://www.microsoft.com/typography/OTSPEC/hmtx.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the `hmtx` table, which contains the horizontal metrics for all glyphs.\n// This function augments the glyph array, adding the advanceWidth and leftSideBearing to each glyph.\nfunction parseHmtxTable(data, start, numMetrics, numGlyphs, glyphs) {\n    var advanceWidth;\n    var leftSideBearing;\n    var p = new parse.Parser(data, start);\n    for (var i = 0; i < numGlyphs; i += 1) {\n        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n        if (i < numMetrics) {\n            advanceWidth = p.parseUShort();\n            leftSideBearing = p.parseShort();\n        }\n\n        var glyph = glyphs[i];\n        glyph.advanceWidth = advanceWidth;\n        glyph.leftSideBearing = leftSideBearing;\n    }\n}\n\nfunction makeHmtxTable(glyphs) {\n    var t = new table.Table('hmtx', []);\n    for (var i = 0; i < glyphs.length; i += 1) {\n        var glyph = glyphs[i];\n        var advanceWidth = glyph.advanceWidth || 0;\n        var leftSideBearing = glyph.leftSideBearing || 0;\n        t.fields.push({name: 'advanceWidth_' + i, type: 'USHORT', value: advanceWidth});\n        t.fields.push({name: 'leftSideBearing_' + i, type: 'SHORT', value: leftSideBearing});\n    }\n\n    return t;\n}\n\nexports.parse = parseHmtxTable;\nexports.make = makeHmtxTable;\n\n},{\"../parse\":7,\"../table\":9}],17:[function(require,module,exports){\n// The `kern` table contains kerning pairs.\n// Note that some fonts use the GPOS OpenType layout table to specify kerning.\n// https://www.microsoft.com/typography/OTSPEC/kern.htm\n\n'use strict';\n\nvar check = require('../check');\nvar parse = require('../parse');\n\n// Parse the `kern` table which contains kerning pairs.\nfunction parseKernTable(data, start) {\n    var pairs = {};\n    var p = new parse.Parser(data, start);\n    var tableVersion = p.parseUShort();\n    check.argument(tableVersion === 0, 'Unsupported kern table version.');\n    // Skip nTables.\n    p.skip('uShort', 1);\n    var subTableVersion = p.parseUShort();\n    check.argument(subTableVersion === 0, 'Unsupported kern sub-table version.');\n    // Skip subTableLength, subTableCoverage\n    p.skip('uShort', 2);\n    var nPairs = p.parseUShort();\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n    for (var i = 0; i < nPairs; i += 1) {\n        var leftIndex = p.parseUShort();\n        var rightIndex = p.parseUShort();\n        var value = p.parseShort();\n        pairs[leftIndex + ',' + rightIndex] = value;\n    }\n\n    return pairs;\n}\n\nexports.parse = parseKernTable;\n\n},{\"../check\":1,\"../parse\":7}],18:[function(require,module,exports){\n// The `loca` table stores the offsets to the locations of the glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/loca.htm\n\n'use strict';\n\nvar parse = require('../parse');\n\n// Parse the `loca` table. This table stores the offsets to the locations of the glyphs in the font,\n// relative to the beginning of the glyphData table.\n// The number of glyphs stored in the `loca` table is specified in the `maxp` table (under numGlyphs)\n// The loca table has two versions: a short version where offsets are stored as uShorts, and a long\n// version where offsets are stored as uLongs. The `head` table specifies which version to use\n// (under indexToLocFormat).\nfunction parseLocaTable(data, start, numGlyphs, shortVersion) {\n    var p = new parse.Parser(data, start);\n    var parseFn = shortVersion ? p.parseUShort : p.parseULong;\n    // There is an extra entry after the last index element to compute the length of the last glyph.\n    // That's why we use numGlyphs + 1.\n    var glyphOffsets = [];\n    for (var i = 0; i < numGlyphs + 1; i += 1) {\n        var glyphOffset = parseFn.call(p);\n        if (shortVersion) {\n            // The short table version stores the actual offset divided by 2.\n            glyphOffset *= 2;\n        }\n\n        glyphOffsets.push(glyphOffset);\n    }\n\n    return glyphOffsets;\n}\n\nexports.parse = parseLocaTable;\n\n},{\"../parse\":7}],19:[function(require,module,exports){\n// The `maxp` table establishes the memory requirements for the font.\n// We need it just to get the number of glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/maxp.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the maximum profile `maxp` table.\nfunction parseMaxpTable(data, start) {\n    var maxp = {};\n    var p = new parse.Parser(data, start);\n    maxp.version = p.parseVersion();\n    maxp.numGlyphs = p.parseUShort();\n    if (maxp.version === 1.0) {\n        maxp.maxPoints = p.parseUShort();\n        maxp.maxContours = p.parseUShort();\n        maxp.maxCompositePoints = p.parseUShort();\n        maxp.maxCompositeContours = p.parseUShort();\n        maxp.maxZones = p.parseUShort();\n        maxp.maxTwilightPoints = p.parseUShort();\n        maxp.maxStorage = p.parseUShort();\n        maxp.maxFunctionDefs = p.parseUShort();\n        maxp.maxInstructionDefs = p.parseUShort();\n        maxp.maxStackElements = p.parseUShort();\n        maxp.maxSizeOfInstructions = p.parseUShort();\n        maxp.maxComponentElements = p.parseUShort();\n        maxp.maxComponentDepth = p.parseUShort();\n    }\n\n    return maxp;\n}\n\nfunction makeMaxpTable(numGlyphs) {\n    return new table.Table('maxp', [\n        {name: 'version', type: 'FIXED', value: 0x00005000},\n        {name: 'numGlyphs', type: 'USHORT', value: numGlyphs}\n    ]);\n}\n\nexports.parse = parseMaxpTable;\nexports.make = makeMaxpTable;\n\n},{\"../parse\":7,\"../table\":9}],20:[function(require,module,exports){\n// The `name` naming table.\n// https://www.microsoft.com/typography/OTSPEC/name.htm\n\n'use strict';\n\nvar encode = require('../types').encode;\nvar parse = require('../parse');\nvar table = require('../table');\n\n// NameIDs for the name table.\nvar nameTableNames = [\n    'copyright',              // 0\n    'fontFamily',             // 1\n    'fontSubfamily',          // 2\n    'uniqueID',               // 3\n    'fullName',               // 4\n    'version',                // 5\n    'postScriptName',         // 6\n    'trademark',              // 7\n    'manufacturer',           // 8\n    'designer',               // 9\n    'description',            // 10\n    'manufacturerURL',        // 11\n    'designerURL',            // 12\n    'licence',                // 13\n    'licenceURL',             // 14\n    'reserved',               // 15\n    'preferredFamily',        // 16\n    'preferredSubfamily',     // 17\n    'compatibleFullName',     // 18\n    'sampleText',             // 19\n    'postScriptFindFontName', // 20\n    'wwsFamily',              // 21\n    'wwsSubfamily'            // 22\n];\n\n// Parse the naming `name` table\n// Only Windows Unicode English names are supported.\n// Format 1 additional fields are not supported\nfunction parseNameTable(data, start) {\n    var name = {};\n    var p = new parse.Parser(data, start);\n    name.format = p.parseUShort();\n    var count = p.parseUShort();\n    var stringOffset = p.offset + p.parseUShort();\n    var unknownCount = 0;\n    for (var i = 0; i < count; i++) {\n        var platformID = p.parseUShort();\n        var encodingID = p.parseUShort();\n        var languageID = p.parseUShort();\n        var nameID = p.parseUShort();\n        var property = nameTableNames[nameID];\n        var byteLength = p.parseUShort();\n        var offset = p.parseUShort();\n        // platformID - encodingID - languageID standard combinations :\n        // 1 - 0 - 0 : Macintosh, Roman, English\n        // 3 - 1 - 0x409 : Windows, Unicode BMP (UCS-2), en-US\n        if (platformID === 3 && encodingID === 1 && languageID === 0x409) {\n            var codePoints = [];\n            var length = byteLength / 2;\n            for (var j = 0; j < length; j++, offset += 2) {\n                codePoints[j] = parse.getShort(data, stringOffset + offset);\n            }\n\n            var str = String.fromCharCode.apply(null, codePoints);\n            if (property) {\n                name[property] = str;\n            }\n            else {\n                unknownCount++;\n                name['unknown' + unknownCount] = str;\n            }\n        }\n\n    }\n\n    if (name.format === 1) {\n        name.langTagCount = p.parseUShort();\n    }\n\n    return name;\n}\n\nfunction makeNameRecord(platformID, encodingID, languageID, nameID, length, offset) {\n    return new table.Table('NameRecord', [\n        {name: 'platformID', type: 'USHORT', value: platformID},\n        {name: 'encodingID', type: 'USHORT', value: encodingID},\n        {name: 'languageID', type: 'USHORT', value: languageID},\n        {name: 'nameID', type: 'USHORT', value: nameID},\n        {name: 'length', type: 'USHORT', value: length},\n        {name: 'offset', type: 'USHORT', value: offset}\n    ]);\n}\n\nfunction addMacintoshNameRecord(t, recordID, s, offset) {\n    // Macintosh, Roman, English\n    var stringBytes = encode.STRING(s);\n    t.records.push(makeNameRecord(1, 0, 0, recordID, stringBytes.length, offset));\n    t.strings.push(stringBytes);\n    offset += stringBytes.length;\n    return offset;\n}\n\nfunction addWindowsNameRecord(t, recordID, s, offset) {\n    // Windows, Unicode BMP (UCS-2), US English\n    var utf16Bytes = encode.UTF16(s);\n    t.records.push(makeNameRecord(3, 1, 0x0409, recordID, utf16Bytes.length, offset));\n    t.strings.push(utf16Bytes);\n    offset += utf16Bytes.length;\n    return offset;\n}\n\nfunction makeNameTable(options) {\n    var t = new table.Table('name', [\n        {name: 'format', type: 'USHORT', value: 0},\n        {name: 'count', type: 'USHORT', value: 0},\n        {name: 'stringOffset', type: 'USHORT', value: 0}\n    ]);\n    t.records = [];\n    t.strings = [];\n    var offset = 0;\n    var i;\n    var s;\n    // Add Macintosh records first\n    for (i = 0; i < nameTableNames.length; i += 1) {\n        if (options[nameTableNames[i]] !== undefined) {\n            s = options[nameTableNames[i]];\n            offset = addMacintoshNameRecord(t, i, s, offset);\n        }\n    }\n    // Then add Windows records\n    for (i = 0; i < nameTableNames.length; i += 1) {\n        if (options[nameTableNames[i]] !== undefined) {\n            s = options[nameTableNames[i]];\n            offset = addWindowsNameRecord(t, i, s, offset);\n        }\n    }\n\n    t.count = t.records.length;\n    t.stringOffset = 6 + t.count * 12;\n    for (i = 0; i < t.records.length; i += 1) {\n        t.fields.push({name: 'record_' + i, type: 'TABLE', value: t.records[i]});\n    }\n\n    for (i = 0; i < t.strings.length; i += 1) {\n        t.fields.push({name: 'string_' + i, type: 'LITERAL', value: t.strings[i]});\n    }\n\n    return t;\n}\n\nexports.parse = parseNameTable;\nexports.make = makeNameTable;\n\n},{\"../parse\":7,\"../table\":9,\"../types\":24}],21:[function(require,module,exports){\n// The `OS/2` table contains metrics required in OpenType fonts.\n// https://www.microsoft.com/typography/OTSPEC/os2.htm\n\n'use strict';\n\nvar parse = require('../parse');\nvar table = require('../table');\n\nvar unicodeRanges = [\n    {begin: 0x0000, end: 0x007F}, // Basic Latin\n    {begin: 0x0080, end: 0x00FF}, // Latin-1 Supplement\n    {begin: 0x0100, end: 0x017F}, // Latin Extended-A\n    {begin: 0x0180, end: 0x024F}, // Latin Extended-B\n    {begin: 0x0250, end: 0x02AF}, // IPA Extensions\n    {begin: 0x02B0, end: 0x02FF}, // Spacing Modifier Letters\n    {begin: 0x0300, end: 0x036F}, // Combining Diacritical Marks\n    {begin: 0x0370, end: 0x03FF}, // Greek and Coptic\n    {begin: 0x2C80, end: 0x2CFF}, // Coptic\n    {begin: 0x0400, end: 0x04FF}, // Cyrillic\n    {begin: 0x0530, end: 0x058F}, // Armenian\n    {begin: 0x0590, end: 0x05FF}, // Hebrew\n    {begin: 0xA500, end: 0xA63F}, // Vai\n    {begin: 0x0600, end: 0x06FF}, // Arabic\n    {begin: 0x07C0, end: 0x07FF}, // NKo\n    {begin: 0x0900, end: 0x097F}, // Devanagari\n    {begin: 0x0980, end: 0x09FF}, // Bengali\n    {begin: 0x0A00, end: 0x0A7F}, // Gurmukhi\n    {begin: 0x0A80, end: 0x0AFF}, // Gujarati\n    {begin: 0x0B00, end: 0x0B7F}, // Oriya\n    {begin: 0x0B80, end: 0x0BFF}, // Tamil\n    {begin: 0x0C00, end: 0x0C7F}, // Telugu\n    {begin: 0x0C80, end: 0x0CFF}, // Kannada\n    {begin: 0x0D00, end: 0x0D7F}, // Malayalam\n    {begin: 0x0E00, end: 0x0E7F}, // Thai\n    {begin: 0x0E80, end: 0x0EFF}, // Lao\n    {begin: 0x10A0, end: 0x10FF}, // Georgian\n    {begin: 0x1B00, end: 0x1B7F}, // Balinese\n    {begin: 0x1100, end: 0x11FF}, // Hangul Jamo\n    {begin: 0x1E00, end: 0x1EFF}, // Latin Extended Additional\n    {begin: 0x1F00, end: 0x1FFF}, // Greek Extended\n    {begin: 0x2000, end: 0x206F}, // General Punctuation\n    {begin: 0x2070, end: 0x209F}, // Superscripts And Subscripts\n    {begin: 0x20A0, end: 0x20CF}, // Currency Symbol\n    {begin: 0x20D0, end: 0x20FF}, // Combining Diacritical Marks For Symbols\n    {begin: 0x2100, end: 0x214F}, // Letterlike Symbols\n    {begin: 0x2150, end: 0x218F}, // Number Forms\n    {begin: 0x2190, end: 0x21FF}, // Arrows\n    {begin: 0x2200, end: 0x22FF}, // Mathematical Operators\n    {begin: 0x2300, end: 0x23FF}, // Miscellaneous Technical\n    {begin: 0x2400, end: 0x243F}, // Control Pictures\n    {begin: 0x2440, end: 0x245F}, // Optical Character Recognition\n    {begin: 0x2460, end: 0x24FF}, // Enclosed Alphanumerics\n    {begin: 0x2500, end: 0x257F}, // Box Drawing\n    {begin: 0x2580, end: 0x259F}, // Block Elements\n    {begin: 0x25A0, end: 0x25FF}, // Geometric Shapes\n    {begin: 0x2600, end: 0x26FF}, // Miscellaneous Symbols\n    {begin: 0x2700, end: 0x27BF}, // Dingbats\n    {begin: 0x3000, end: 0x303F}, // CJK Symbols And Punctuation\n    {begin: 0x3040, end: 0x309F}, // Hiragana\n    {begin: 0x30A0, end: 0x30FF}, // Katakana\n    {begin: 0x3100, end: 0x312F}, // Bopomofo\n    {begin: 0x3130, end: 0x318F}, // Hangul Compatibility Jamo\n    {begin: 0xA840, end: 0xA87F}, // Phags-pa\n    {begin: 0x3200, end: 0x32FF}, // Enclosed CJK Letters And Months\n    {begin: 0x3300, end: 0x33FF}, // CJK Compatibility\n    {begin: 0xAC00, end: 0xD7AF}, // Hangul Syllables\n    {begin: 0xD800, end: 0xDFFF}, // Non-Plane 0 *\n    {begin: 0x10900, end: 0x1091F}, // Phoenicia\n    {begin: 0x4E00, end: 0x9FFF}, // CJK Unified Ideographs\n    {begin: 0xE000, end: 0xF8FF}, // Private Use Area (plane 0)\n    {begin: 0x31C0, end: 0x31EF}, // CJK Strokes\n    {begin: 0xFB00, end: 0xFB4F}, // Alphabetic Presentation Forms\n    {begin: 0xFB50, end: 0xFDFF}, // Arabic Presentation Forms-A\n    {begin: 0xFE20, end: 0xFE2F}, // Combining Half Marks\n    {begin: 0xFE10, end: 0xFE1F}, // Vertical Forms\n    {begin: 0xFE50, end: 0xFE6F}, // Small Form Variants\n    {begin: 0xFE70, end: 0xFEFF}, // Arabic Presentation Forms-B\n    {begin: 0xFF00, end: 0xFFEF}, // Halfwidth And Fullwidth Forms\n    {begin: 0xFFF0, end: 0xFFFF}, // Specials\n    {begin: 0x0F00, end: 0x0FFF}, // Tibetan\n    {begin: 0x0700, end: 0x074F}, // Syriac\n    {begin: 0x0780, end: 0x07BF}, // Thaana\n    {begin: 0x0D80, end: 0x0DFF}, // Sinhala\n    {begin: 0x1000, end: 0x109F}, // Myanmar\n    {begin: 0x1200, end: 0x137F}, // Ethiopic\n    {begin: 0x13A0, end: 0x13FF}, // Cherokee\n    {begin: 0x1400, end: 0x167F}, // Unified Canadian Aboriginal Syllabics\n    {begin: 0x1680, end: 0x169F}, // Ogham\n    {begin: 0x16A0, end: 0x16FF}, // Runic\n    {begin: 0x1780, end: 0x17FF}, // Khmer\n    {begin: 0x1800, end: 0x18AF}, // Mongolian\n    {begin: 0x2800, end: 0x28FF}, // Braille Patterns\n    {begin: 0xA000, end: 0xA48F}, // Yi Syllables\n    {begin: 0x1700, end: 0x171F}, // Tagalog\n    {begin: 0x10300, end: 0x1032F}, // Old Italic\n    {begin: 0x10330, end: 0x1034F}, // Gothic\n    {begin: 0x10400, end: 0x1044F}, // Deseret\n    {begin: 0x1D000, end: 0x1D0FF}, // Byzantine Musical Symbols\n    {begin: 0x1D400, end: 0x1D7FF}, // Mathematical Alphanumeric Symbols\n    {begin: 0xFF000, end: 0xFFFFD}, // Private Use (plane 15)\n    {begin: 0xFE00, end: 0xFE0F}, // Variation Selectors\n    {begin: 0xE0000, end: 0xE007F}, // Tags\n    {begin: 0x1900, end: 0x194F}, // Limbu\n    {begin: 0x1950, end: 0x197F}, // Tai Le\n    {begin: 0x1980, end: 0x19DF}, // New Tai Lue\n    {begin: 0x1A00, end: 0x1A1F}, // Buginese\n    {begin: 0x2C00, end: 0x2C5F}, // Glagolitic\n    {begin: 0x2D30, end: 0x2D7F}, // Tifinagh\n    {begin: 0x4DC0, end: 0x4DFF}, // Yijing Hexagram Symbols\n    {begin: 0xA800, end: 0xA82F}, // Syloti Nagri\n    {begin: 0x10000, end: 0x1007F}, // Linear B Syllabary\n    {begin: 0x10140, end: 0x1018F}, // Ancient Greek Numbers\n    {begin: 0x10380, end: 0x1039F}, // Ugaritic\n    {begin: 0x103A0, end: 0x103DF}, // Old Persian\n    {begin: 0x10450, end: 0x1047F}, // Shavian\n    {begin: 0x10480, end: 0x104AF}, // Osmanya\n    {begin: 0x10800, end: 0x1083F}, // Cypriot Syllabary\n    {begin: 0x10A00, end: 0x10A5F}, // Kharoshthi\n    {begin: 0x1D300, end: 0x1D35F}, // Tai Xuan Jing Symbols\n    {begin: 0x12000, end: 0x123FF}, // Cuneiform\n    {begin: 0x1D360, end: 0x1D37F}, // Counting Rod Numerals\n    {begin: 0x1B80, end: 0x1BBF}, // Sundanese\n    {begin: 0x1C00, end: 0x1C4F}, // Lepcha\n    {begin: 0x1C50, end: 0x1C7F}, // Ol Chiki\n    {begin: 0xA880, end: 0xA8DF}, // Saurashtra\n    {begin: 0xA900, end: 0xA92F}, // Kayah Li\n    {begin: 0xA930, end: 0xA95F}, // Rejang\n    {begin: 0xAA00, end: 0xAA5F}, // Cham\n    {begin: 0x10190, end: 0x101CF}, // Ancient Symbols\n    {begin: 0x101D0, end: 0x101FF}, // Phaistos Disc\n    {begin: 0x102A0, end: 0x102DF}, // Carian\n    {begin: 0x1F030, end: 0x1F09F}  // Domino Tiles\n];\n\nfunction getUnicodeRange(unicode) {\n    for (var i = 0; i < unicodeRanges.length; i += 1) {\n        var range = unicodeRanges[i];\n        if (unicode >= range.begin && unicode < range.end) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\n// Parse the OS/2 and Windows metrics `OS/2` table\nfunction parseOS2Table(data, start) {\n    var os2 = {};\n    var p = new parse.Parser(data, start);\n    os2.version = p.parseUShort();\n    os2.xAvgCharWidth = p.parseShort();\n    os2.usWeightClass = p.parseUShort();\n    os2.usWidthClass = p.parseUShort();\n    os2.fsType = p.parseUShort();\n    os2.ySubscriptXSize = p.parseShort();\n    os2.ySubscriptYSize = p.parseShort();\n    os2.ySubscriptXOffset = p.parseShort();\n    os2.ySubscriptYOffset = p.parseShort();\n    os2.ySuperscriptXSize = p.parseShort();\n    os2.ySuperscriptYSize = p.parseShort();\n    os2.ySuperscriptXOffset = p.parseShort();\n    os2.ySuperscriptYOffset = p.parseShort();\n    os2.yStrikeoutSize = p.parseShort();\n    os2.yStrikeoutPosition = p.parseShort();\n    os2.sFamilyClass = p.parseShort();\n    os2.panose = [];\n    for (var i = 0; i < 10; i++) {\n        os2.panose[i] = p.parseByte();\n    }\n\n    os2.ulUnicodeRange1 = p.parseULong();\n    os2.ulUnicodeRange2 = p.parseULong();\n    os2.ulUnicodeRange3 = p.parseULong();\n    os2.ulUnicodeRange4 = p.parseULong();\n    os2.achVendID = String.fromCharCode(p.parseByte(), p.parseByte(), p.parseByte(), p.parseByte());\n    os2.fsSelection = p.parseUShort();\n    os2.usFirstCharIndex = p.parseUShort();\n    os2.usLastCharIndex = p.parseUShort();\n    os2.sTypoAscender = p.parseShort();\n    os2.sTypoDescender = p.parseShort();\n    os2.sTypoLineGap = p.parseShort();\n    os2.usWinAscent = p.parseUShort();\n    os2.usWinDescent = p.parseUShort();\n    if (os2.version >= 1) {\n        os2.ulCodePageRange1 = p.parseULong();\n        os2.ulCodePageRange2 = p.parseULong();\n    }\n\n    if (os2.version >= 2) {\n        os2.sxHeight = p.parseShort();\n        os2.sCapHeight = p.parseShort();\n        os2.usDefaultChar = p.parseUShort();\n        os2.usBreakChar = p.parseUShort();\n        os2.usMaxContent = p.parseUShort();\n    }\n\n    return os2;\n}\n\nfunction makeOS2Table(options) {\n    return new table.Table('OS/2', [\n        {name: 'version', type: 'USHORT', value: 0x0003},\n        {name: 'xAvgCharWidth', type: 'SHORT', value: 0},\n        {name: 'usWeightClass', type: 'USHORT', value: 0},\n        {name: 'usWidthClass', type: 'USHORT', value: 0},\n        {name: 'fsType', type: 'USHORT', value: 0},\n        {name: 'ySubscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySubscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySubscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySubscriptYOffset', type: 'SHORT', value: 140},\n        {name: 'ySuperscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySuperscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySuperscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptYOffset', type: 'SHORT', value: 479},\n        {name: 'yStrikeoutSize', type: 'SHORT', value: 49},\n        {name: 'yStrikeoutPosition', type: 'SHORT', value: 258},\n        {name: 'sFamilyClass', type: 'SHORT', value: 0},\n        {name: 'bFamilyType', type: 'BYTE', value: 0},\n        {name: 'bSerifStyle', type: 'BYTE', value: 0},\n        {name: 'bWeight', type: 'BYTE', value: 0},\n        {name: 'bProportion', type: 'BYTE', value: 0},\n        {name: 'bContrast', type: 'BYTE', value: 0},\n        {name: 'bStrokeVariation', type: 'BYTE', value: 0},\n        {name: 'bArmStyle', type: 'BYTE', value: 0},\n        {name: 'bLetterform', type: 'BYTE', value: 0},\n        {name: 'bMidline', type: 'BYTE', value: 0},\n        {name: 'bXHeight', type: 'BYTE', value: 0},\n        {name: 'ulUnicodeRange1', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange2', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange3', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange4', type: 'ULONG', value: 0},\n        {name: 'achVendID', type: 'CHARARRAY', value: 'XXXX'},\n        {name: 'fsSelection', type: 'USHORT', value: 0},\n        {name: 'usFirstCharIndex', type: 'USHORT', value: 0},\n        {name: 'usLastCharIndex', type: 'USHORT', value: 0},\n        {name: 'sTypoAscender', type: 'SHORT', value: 0},\n        {name: 'sTypoDescender', type: 'SHORT', value: 0},\n        {name: 'sTypoLineGap', type: 'SHORT', value: 0},\n        {name: 'usWinAscent', type: 'USHORT', value: 0},\n        {name: 'usWinDescent', type: 'USHORT', value: 0},\n        {name: 'ulCodePageRange1', type: 'ULONG', value: 0},\n        {name: 'ulCodePageRange2', type: 'ULONG', value: 0},\n        {name: 'sxHeight', type: 'SHORT', value: 0},\n        {name: 'sCapHeight', type: 'SHORT', value: 0},\n        {name: 'usDefaultChar', type: 'USHORT', value: 0},\n        {name: 'usBreakChar', type: 'USHORT', value: 0},\n        {name: 'usMaxContext', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexports.unicodeRanges = unicodeRanges;\nexports.getUnicodeRange = getUnicodeRange;\nexports.parse = parseOS2Table;\nexports.make = makeOS2Table;\n\n},{\"../parse\":7,\"../table\":9}],22:[function(require,module,exports){\n// The `post` table stores additional PostScript information, such as glyph names.\n// https://www.microsoft.com/typography/OTSPEC/post.htm\n\n'use strict';\n\nvar encoding = require('../encoding');\nvar parse = require('../parse');\nvar table = require('../table');\n\n// Parse the PostScript `post` table\nfunction parsePostTable(data, start) {\n    var post = {};\n    var p = new parse.Parser(data, start);\n    var i;\n    post.version = p.parseVersion();\n    post.italicAngle = p.parseFixed();\n    post.underlinePosition = p.parseShort();\n    post.underlineThickness = p.parseShort();\n    post.isFixedPitch = p.parseULong();\n    post.minMemType42 = p.parseULong();\n    post.maxMemType42 = p.parseULong();\n    post.minMemType1 = p.parseULong();\n    post.maxMemType1 = p.parseULong();\n    switch (post.version) {\n    case 1:\n        post.names = encoding.standardNames.slice();\n        break;\n    case 2:\n        post.numberOfGlyphs = p.parseUShort();\n        post.glyphNameIndex = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.glyphNameIndex[i] = p.parseUShort();\n        }\n\n        post.names = [];\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            if (post.glyphNameIndex[i] >= encoding.standardNames.length) {\n                var nameLength = p.parseChar();\n                post.names.push(p.parseString(nameLength));\n            }\n        }\n\n        break;\n    case 2.5:\n        post.numberOfGlyphs = p.parseUShort();\n        post.offset = new Array(post.numberOfGlyphs);\n        for (i = 0; i < post.numberOfGlyphs; i++) {\n            post.offset[i] = p.parseChar();\n        }\n\n        break;\n    }\n    return post;\n}\n\nfunction makePostTable() {\n    return new table.Table('post', [\n        {name: 'version', type: 'FIXED', value: 0x00030000},\n        {name: 'italicAngle', type: 'FIXED', value: 0},\n        {name: 'underlinePosition', type: 'FWORD', value: 0},\n        {name: 'underlineThickness', type: 'FWORD', value: 0},\n        {name: 'isFixedPitch', type: 'ULONG', value: 0},\n        {name: 'minMemType42', type: 'ULONG', value: 0},\n        {name: 'maxMemType42', type: 'ULONG', value: 0},\n        {name: 'minMemType1', type: 'ULONG', value: 0},\n        {name: 'maxMemType1', type: 'ULONG', value: 0}\n    ]);\n}\n\nexports.parse = parsePostTable;\nexports.make = makePostTable;\n\n},{\"../encoding\":3,\"../parse\":7,\"../table\":9}],23:[function(require,module,exports){\n// The `sfnt` wrapper provides organization for the tables in the font.\n// It is the top-level data structure in a font.\n// https://www.microsoft.com/typography/OTSPEC/otff.htm\n// Recommendations for creating OpenType Fonts:\n// http://www.microsoft.com/typography/otspec140/recom.htm\n\n'use strict';\n\nvar check = require('../check');\nvar table = require('../table');\n\nvar cmap = require('./cmap');\nvar cff = require('./cff');\nvar head = require('./head');\nvar hhea = require('./hhea');\nvar hmtx = require('./hmtx');\nvar maxp = require('./maxp');\nvar _name = require('./name');\nvar os2 = require('./os2');\nvar post = require('./post');\n\nfunction log2(v) {\n    return Math.log(v) / Math.log(2) | 0;\n}\n\nfunction computeCheckSum(bytes) {\n    while (bytes.length % 4 !== 0) {\n        bytes.push(0);\n    }\n\n    var sum = 0;\n    for (var i = 0; i < bytes.length; i += 4) {\n        sum += (bytes[i] << 24) +\n            (bytes[i + 1] << 16) +\n            (bytes[i + 2] << 8) +\n            (bytes[i + 3]);\n    }\n\n    sum %= Math.pow(2, 32);\n    return sum;\n}\n\nfunction makeTableRecord(tag, checkSum, offset, length) {\n    return new table.Table('Table Record', [\n        {name: 'tag', type: 'TAG', value: tag !== undefined ? tag : ''},\n        {name: 'checkSum', type: 'ULONG', value: checkSum !== undefined ? checkSum : 0},\n        {name: 'offset', type: 'ULONG', value: offset !== undefined ? offset : 0},\n        {name: 'length', type: 'ULONG', value: length !== undefined ? length : 0}\n    ]);\n}\n\nfunction makeSfntTable(tables) {\n    var sfnt = new table.Table('sfnt', [\n        {name: 'version', type: 'TAG', value: 'OTTO'},\n        {name: 'numTables', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n    sfnt.tables = tables;\n    sfnt.numTables = tables.length;\n    var highestPowerOf2 = Math.pow(2, log2(sfnt.numTables));\n    sfnt.searchRange = 16 * highestPowerOf2;\n    sfnt.entrySelector = log2(highestPowerOf2);\n    sfnt.rangeShift = sfnt.numTables * 16 - sfnt.searchRange;\n\n    var recordFields = [];\n    var tableFields = [];\n\n    var offset = sfnt.sizeOf() + (makeTableRecord().sizeOf() * sfnt.numTables);\n    while (offset % 4 !== 0) {\n        offset += 1;\n        tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n    }\n\n    for (var i = 0; i < tables.length; i += 1) {\n        var t = tables[i];\n        check.argument(t.tableName.length === 4, 'Table name' + t.tableName + ' is invalid.');\n        var tableLength = t.sizeOf();\n        var tableRecord = makeTableRecord(t.tableName, computeCheckSum(t.encode()), offset, tableLength);\n        recordFields.push({name: tableRecord.tag + ' Table Record', type: 'TABLE', value: tableRecord});\n        tableFields.push({name: t.tableName + ' table', type: 'TABLE', value: t});\n        offset += tableLength;\n        check.argument(!isNaN(offset), 'Something went wrong calculating the offset.');\n        while (offset % 4 !== 0) {\n            offset += 1;\n            tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n        }\n    }\n\n    // Table records need to be sorted alphabetically.\n    recordFields.sort(function(r1, r2) {\n        if (r1.value.tag > r2.value.tag) {\n            return 1;\n        } else {\n            return -1;\n        }\n    });\n\n    sfnt.fields = sfnt.fields.concat(recordFields);\n    sfnt.fields = sfnt.fields.concat(tableFields);\n    return sfnt;\n}\n\n// Get the metrics for a character. If the string has more than one character\n// this function returns metrics for the first available character.\n// You can provide optional fallback metrics if no characters are available.\nfunction metricsForChar(font, chars, notFoundMetrics) {\n    for (var i = 0; i < chars.length; i += 1) {\n        var glyphIndex = font.charToGlyphIndex(chars[i]);\n        if (glyphIndex > 0) {\n            var glyph = font.glyphs[glyphIndex];\n            return glyph.getMetrics();\n        }\n    }\n\n    return notFoundMetrics;\n}\n\nfunction average(vs) {\n    var sum = 0;\n    for (var i = 0; i < vs.length; i += 1) {\n        sum += vs[i];\n    }\n\n    return sum / vs.length;\n}\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nfunction fontToSfntTable(font) {\n    var xMins = [];\n    var yMins = [];\n    var xMaxs = [];\n    var yMaxs = [];\n    var advanceWidths = [];\n    var leftSideBearings = [];\n    var rightSideBearings = [];\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    for (var i = 0; i < font.glyphs.length; i += 1) {\n        var glyph = font.glyphs[i];\n        var unicode = glyph.unicode | 0;\n        if (firstCharIndex > unicode || firstCharIndex === null) {\n            firstCharIndex = unicode;\n        }\n\n        if (lastCharIndex < unicode) {\n            lastCharIndex = unicode;\n        }\n\n        var position = os2.getUnicodeRange(unicode);\n        if (position < 32) {\n            ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n            ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n            ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n            ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n            throw new Error('Unicode ranges bits > 123 are reserved for internal usage');\n        }\n        // Skip non-important characters.\n        if (glyph.name === '.notdef') continue;\n        var metrics = glyph.getMetrics();\n        xMins.push(metrics.xMin);\n        yMins.push(metrics.yMin);\n        xMaxs.push(metrics.xMax);\n        yMaxs.push(metrics.yMax);\n        leftSideBearings.push(metrics.leftSideBearing);\n        rightSideBearings.push(metrics.rightSideBearing);\n        advanceWidths.push(glyph.advanceWidth);\n    }\n\n    var globals = {\n        xMin: Math.min.apply(null, xMins),\n        yMin: Math.min.apply(null, yMins),\n        xMax: Math.max.apply(null, xMaxs),\n        yMax: Math.max.apply(null, yMaxs),\n        advanceWidthMax: Math.max.apply(null, advanceWidths),\n        advanceWidthAvg: average(advanceWidths),\n        minLeftSideBearing: Math.min.apply(null, leftSideBearings),\n        maxLeftSideBearing: Math.max.apply(null, leftSideBearings),\n        minRightSideBearing: Math.min.apply(null, rightSideBearings)\n    };\n    globals.ascender = font.ascender !== undefined ? font.ascender : globals.yMax;\n    globals.descender = font.descender !== undefined ? font.descender : globals.yMin;\n\n    var headTable = head.make({\n        unitsPerEm: font.unitsPerEm,\n        xMin: globals.xMin,\n        yMin: globals.yMin,\n        xMax: globals.xMax,\n        yMax: globals.yMax\n    });\n\n    var hheaTable = hhea.make({\n        ascender: globals.ascender,\n        descender: globals.descender,\n        advanceWidthMax: globals.advanceWidthMax,\n        minLeftSideBearing: globals.minLeftSideBearing,\n        minRightSideBearing: globals.minRightSideBearing,\n        xMaxExtent: globals.maxLeftSideBearing + (globals.xMax - globals.xMin),\n        numberOfHMetrics: font.glyphs.length\n    });\n\n    var maxpTable = maxp.make(font.glyphs.length);\n\n    var os2Table = os2.make({\n        xAvgCharWidth: Math.round(globals.advanceWidthAvg),\n        usWeightClass: 500, // Medium FIXME Make this configurable\n        usWidthClass: 5, // Medium (normal) FIXME Make this configurable\n        usFirstCharIndex: firstCharIndex,\n        usLastCharIndex: lastCharIndex,\n        ulUnicodeRange1: ulUnicodeRange1,\n        ulUnicodeRange2: ulUnicodeRange2,\n        ulUnicodeRange3: ulUnicodeRange3,\n        ulUnicodeRange4: ulUnicodeRange4,\n        // See http://typophile.com/node/13081 for more info on vertical metrics.\n        // We get metrics for typical characters (such as \"x\" for xHeight).\n        // We provide some fallback characters if characters are unavailable: their\n        // ordering was chosen experimentally.\n        sTypoAscender: globals.ascender,\n        sTypoDescender: globals.descender,\n        sTypoLineGap: 0,\n        usWinAscent: globals.ascender,\n        usWinDescent: -globals.descender,\n        sxHeight: metricsForChar(font, 'xyvw', {yMax: 0}).yMax,\n        sCapHeight: metricsForChar(font, 'HIKLEFJMNTZBDPRAGOQSUVWXY', globals).yMax,\n        usBreakChar: font.hasChar(' ') ? 32 : 0 // Use space as the break character, if available.\n    });\n\n    var hmtxTable = hmtx.make(font.glyphs);\n    var cmapTable = cmap.make(font.glyphs);\n\n    var fullName = font.familyName + ' ' + font.styleName;\n    var postScriptName = font.familyName.replace(/\\s/g, '') + '-' + font.styleName;\n    var nameTable = _name.make({\n        copyright: font.copyright,\n        fontFamily: font.familyName,\n        fontSubfamily: font.styleName,\n        uniqueID: font.manufacturer + ':' + fullName,\n        fullName: fullName,\n        version: font.version,\n        postScriptName: postScriptName,\n        trademark: font.trademark,\n        manufacturer: font.manufacturer,\n        designer: font.designer,\n        description: font.description,\n        manufacturerURL: font.manufacturerURL,\n        designerURL: font.designerURL,\n        license: font.license,\n        licenseURL: font.licenseURL,\n        preferredFamily: font.familyName,\n        preferredSubfamily: font.styleName\n    });\n    var postTable = post.make();\n    var cffTable = cff.make(font.glyphs, {\n        version: font.version,\n        fullName: fullName,\n        familyName: font.familyName,\n        weightName: font.styleName,\n        postScriptName: postScriptName\n    });\n    // Order the tables according to the the OpenType specification 1.4.\n    var tables = [headTable, hheaTable, maxpTable, os2Table, nameTable, cmapTable, postTable, cffTable, hmtxTable];\n\n    var sfntTable = makeSfntTable(tables);\n\n    // Compute the font's checkSum and store it in head.checkSumAdjustment.\n    var bytes = sfntTable.encode();\n    var checkSum = computeCheckSum(bytes);\n    var tableFields = sfntTable.fields;\n    var checkSumAdjusted = false;\n    for (i = 0; i < tableFields.length; i += 1) {\n        if (tableFields[i].name === 'head table') {\n            tableFields[i].value.checkSumAdjustment = 0xB1B0AFBA - checkSum;\n            checkSumAdjusted = true;\n            break;\n        }\n    }\n\n    if (!checkSumAdjusted) {\n        throw new Error('Could not find head table with checkSum to adjust.');\n    }\n\n    return sfntTable;\n}\n\nexports.computeCheckSum = computeCheckSum;\nexports.make = makeSfntTable;\nexports.fontToTable = fontToSfntTable;\n\n},{\"../check\":1,\"../table\":9,\"./cff\":10,\"./cmap\":11,\"./head\":14,\"./hhea\":15,\"./hmtx\":16,\"./maxp\":19,\"./name\":20,\"./os2\":21,\"./post\":22}],24:[function(require,module,exports){\n// Data types used in the OpenType font file.\n// All OpenType fonts use Motorola-style byte ordering (Big Endian)\n\n/* global WeakMap */\n\n'use strict';\n\nvar check = require('./check');\n\nvar LIMIT16 = 32768; // The limit at which a 16-bit number switches signs == 2^15\nvar LIMIT32 = 2147483648; // The limit at which a 32-bit number switches signs == 2 ^ 31\n\nvar decode = {};\nvar encode = {};\nvar sizeOf = {};\n\n// Return a function that always returns the same value.\nfunction constant(v) {\n    return function() {\n        return v;\n    };\n}\n\n// OpenType data types //////////////////////////////////////////////////////\n\n// Convert an 8-bit unsigned integer to a list of 1 byte.\nencode.BYTE = function(v) {\n    check.argument(v >= 0 && v <= 255, 'Byte value should be between 0 and 255.');\n    return [v];\n};\n\nsizeOf.BYTE = constant(1);\n\n// Convert a 8-bit signed integer to a list of 1 byte.\nencode.CHAR = function(v) {\n    return [v.charCodeAt(0)];\n};\n\nsizeOf.BYTE = constant(1);\n\n// Convert an ASCII string to a list of bytes.\nencode.CHARARRAY = function(v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b.push(v.charCodeAt(i));\n    }\n\n    return b;\n};\n\nsizeOf.CHARARRAY = function(v) {\n    return v.length;\n};\n\n// Convert a 16-bit unsigned integer to a list of 2 bytes.\nencode.USHORT = function(v) {\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.USHORT = constant(2);\n\n// Convert a 16-bit signed integer to a list of 2 bytes.\nencode.SHORT = function(v) {\n    // Two's complement\n    if (v >= LIMIT16) {\n        v = -(2 * LIMIT16 - v);\n    }\n\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.SHORT = constant(2);\n\n// Convert a 24-bit unsigned integer to a list of 3 bytes.\nencode.UINT24 = function(v) {\n    return [(v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.UINT24 = constant(3);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.ULONG = function(v) {\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.ULONG = constant(4);\n\n// Convert a 32-bit unsigned integer to a list of 4 bytes.\nencode.LONG = function(v) {\n    // Two's complement\n    if (v >= LIMIT32) {\n        v = -(2 * LIMIT32 - v);\n    }\n\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.LONG = constant(4);\n\nencode.FIXED = encode.ULONG;\nsizeOf.FIXED = sizeOf.ULONG;\n\nencode.FWORD = encode.SHORT;\nsizeOf.FWORD = sizeOf.SHORT;\n\nencode.UFWORD = encode.USHORT;\nsizeOf.UFWORD = sizeOf.USHORT;\n\n// FIXME Implement LONGDATETIME\nencode.LONGDATETIME = function() {\n    return [0, 0, 0, 0, 0, 0, 0, 0];\n};\n\nsizeOf.LONGDATETIME = constant(8);\n\n// Convert a 4-char tag to a list of 4 bytes.\nencode.TAG = function(v) {\n    check.argument(v.length === 4, 'Tag should be exactly 4 ASCII characters.');\n    return [v.charCodeAt(0),\n            v.charCodeAt(1),\n            v.charCodeAt(2),\n            v.charCodeAt(3)];\n};\n\nsizeOf.TAG = constant(4);\n\n// CFF data types ///////////////////////////////////////////////////////////\n\nencode.Card8 = encode.BYTE;\nsizeOf.Card8 = sizeOf.BYTE;\n\nencode.Card16 = encode.USHORT;\nsizeOf.Card16 = sizeOf.USHORT;\n\nencode.OffSize = encode.BYTE;\nsizeOf.OffSize = sizeOf.BYTE;\n\nencode.SID = encode.USHORT;\nsizeOf.SID = sizeOf.USHORT;\n\n// Convert a numeric operand or charstring number to a variable-size list of bytes.\nencode.NUMBER = function(v) {\n    if (v >= -107 && v <= 107) {\n        return [v + 139];\n    } else if (v >= 108 && v <= 1131) {\n        v = v - 108;\n        return [(v >> 8) + 247, v & 0xFF];\n    } else if (v >= -1131 && v <= -108) {\n        v = -v - 108;\n        return [(v >> 8) + 251, v & 0xFF];\n    } else if (v >= -32768 && v <= 32767) {\n        return encode.NUMBER16(v);\n    } else {\n        return encode.NUMBER32(v);\n    }\n};\n\nsizeOf.NUMBER = function(v) {\n    return encode.NUMBER(v).length;\n};\n\n// Convert a signed number between -32768 and +32767 to a three-byte value.\n// This ensures we always use three bytes, but is not the most compact format.\nencode.NUMBER16 = function(v) {\n    return [28, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER16 = constant(2);\n\n// Convert a signed number between -(2^31) and +(2^31-1) to a four-byte value.\n// This is useful if you want to be sure you always use four bytes,\n// at the expense of wasting a few bytes for smaller numbers.\nencode.NUMBER32 = function(v) {\n    return [29, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\nsizeOf.NUMBER32 = constant(4);\n\nencode.NAME = encode.CHARARRAY;\nsizeOf.NAME = sizeOf.CHARARRAY;\n\nencode.STRING = encode.CHARARRAY;\nsizeOf.STRING = sizeOf.CHARARRAY;\n\n// Convert a ASCII string to a list of UTF16 bytes.\nencode.UTF16 = function(v) {\n    var b = [];\n    for (var i = 0; i < v.length; i += 1) {\n        b.push(0);\n        b.push(v.charCodeAt(i));\n    }\n\n    return b;\n};\n\nsizeOf.UTF16 = function(v) {\n    return v.length * 2;\n};\n\n// Convert a list of values to a CFF INDEX structure.\n// The values should be objects containing name / type / value.\nencode.INDEX = function(l) {\n    var i;\n    //var offset, offsets, offsetEncoder, encodedOffsets, encodedOffset, data,\n    //    dataSize, i, v;\n    // Because we have to know which data type to use to encode the offsets,\n    // we have to go through the values twice: once to encode the data and\n    // calculate the offets, then again to encode the offsets using the fitting data type.\n    var offset = 1; // First offset is always 1.\n    var offsets = [offset];\n    var data = [];\n    var dataSize = 0;\n    for (i = 0; i < l.length; i += 1) {\n        var v = encode.OBJECT(l[i]);\n        Array.prototype.push.apply(data, v);\n        dataSize += v.length;\n        offset += v.length;\n        offsets.push(offset);\n    }\n\n    if (data.length === 0) {\n        return [0, 0];\n    }\n\n    var encodedOffsets = [];\n    var offSize = (1 + Math.floor(Math.log(dataSize) / Math.log(2)) / 8) | 0;\n    var offsetEncoder = [undefined, encode.BYTE, encode.USHORT, encode.UINT24, encode.ULONG][offSize];\n    for (i = 0; i < offsets.length; i += 1) {\n        var encodedOffset = offsetEncoder(offsets[i]);\n        Array.prototype.push.apply(encodedOffsets, encodedOffset);\n    }\n\n    return Array.prototype.concat(encode.Card16(l.length),\n                           encode.OffSize(offSize),\n                           encodedOffsets,\n                           data);\n};\n\nsizeOf.INDEX = function(v) {\n    return encode.INDEX(v).length;\n};\n\n// Convert an object to a CFF DICT structure.\n// The keys should be numeric.\n// The values should be objects containing name / type / value.\nencode.DICT = function(m) {\n    var d = [];\n    var keys = Object.keys(m);\n    var length = keys.length;\n\n    for (var i = 0; i < length; i += 1) {\n        // Object.keys() return string keys, but our keys are always numeric.\n        var k = parseInt(keys[i], 0);\n        var v = m[k];\n        // Value comes before the key.\n        d = d.concat(encode.OPERAND(v.value, v.type));\n        d = d.concat(encode.OPERATOR(k));\n    }\n\n    return d;\n};\n\nsizeOf.DICT = function(m) {\n    return encode.DICT(m).length;\n};\n\nencode.OPERATOR = function(v) {\n    if (v < 1200) {\n        return [v];\n    } else {\n        return [12, v - 1200];\n    }\n};\n\nencode.OPERAND = function(v, type) {\n    var d = [];\n    if (Array.isArray(type)) {\n        for (var i = 0; i < type.length; i += 1) {\n            check.argument(v.length === type.length, 'Not enough arguments given for type' + type);\n            d = d.concat(encode.OPERAND(v[i], type[i]));\n        }\n    } else {\n        if (type === 'SID') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'offset') {\n            // We make it easy for ourselves and always encode offsets as\n            // 4 bytes. This makes offset calculation for the top dict easier.\n            d = d.concat(encode.NUMBER32(v));\n        } else {\n            // FIXME Add support for booleans\n            d = d.concat(encode.NUMBER(v));\n        }\n    }\n\n    return d;\n};\n\nencode.OP = encode.BYTE;\nsizeOf.OP = sizeOf.BYTE;\n\n// memoize charstring encoding using WeakMap if available\nvar wmm = typeof WeakMap === 'function' && new WeakMap();\n// Convert a list of CharString operations to bytes.\nencode.CHARSTRING = function(ops) {\n    if (wmm && wmm.has(ops)) {\n        return wmm.get(ops);\n    }\n\n    var d = [];\n    var length = ops.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var op = ops[i];\n        d = d.concat(encode[op.type](op.value));\n    }\n\n    if (wmm) {\n        wmm.set(ops, d);\n    }\n\n    return d;\n};\n\nsizeOf.CHARSTRING = function(ops) {\n    return encode.CHARSTRING(ops).length;\n};\n\n// Utility functions ////////////////////////////////////////////////////////\n\n// Convert an object containing name / type / value to bytes.\nencode.OBJECT = function(v) {\n    var encodingFunction = encode[v.type];\n    check.argument(encodingFunction !== undefined, 'No encoding function for type ' + v.type);\n    return encodingFunction(v.value);\n};\n\n// Convert a table object to bytes.\n// A table contains a list of fields containing the metadata (name, type and default value).\n// The table itself has the field values set as attributes.\nencode.TABLE = function(table) {\n    var d = [];\n    var length = table.fields.length;\n\n    for (var i = 0; i < length; i += 1) {\n        var field = table.fields[i];\n        var encodingFunction = encode[field.type];\n        check.argument(encodingFunction !== undefined, 'No encoding function for field type ' + field.type);\n        var value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        var bytes = encodingFunction(value);\n        d = d.concat(bytes);\n    }\n\n    return d;\n};\n\n// Merge in a list of bytes.\nencode.LITERAL = function(v) {\n    return v;\n};\n\nsizeOf.LITERAL = function(v) {\n    return v.length;\n};\n\nexports.decode = decode;\nexports.encode = encode;\nexports.sizeOf = sizeOf;\n\n},{\"./check\":1}]},{},[6])(6)\n});\n},{}],2:[function(require,module,exports){\n/*!\n * Paper.js v0.9.22 - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2014, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & http://jonathanpuckey.com/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n *\n * Date: Mon Mar 23 22:20:31 2015 +0100\n *\n ***\n *\n * Straps.js - Class inheritance library with support for bean-style accessors\n *\n * Copyright (c) 2006 - 2013 Juerg Lehni\n * http://scratchdisk.com/\n *\n * Distributed under the MIT license.\n *\n ***\n *\n * Acorn.js\n * http://marijnhaverbeke.nl/acorn/\n *\n * Acorn is a tiny, fast JavaScript parser written in JavaScript,\n * created by Marijn Haverbeke and released under an MIT license.\n *\n */\n\nvar paper = new function(undefined) {\n\n\t\t  var noCanvas =\n\t\t\t  ( typeof process === 'object' && process.browser !== true ) ||\n\t\t\t  ( typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope );\n\nvar Base = new function() {\n\tvar hidden = /^(statics|enumerable|beans|preserve)$/,\n\n\t\tforEach = [].forEach || function(iter, bind) {\n\t\t\tfor (var i = 0, l = this.length; i < l; i++)\n\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tforIn = function(iter, bind) {\n\t\t\tfor (var i in this)\n\t\t\t\tif (this.hasOwnProperty(i))\n\t\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tcreate = Object.create || function(proto) {\n\t\t\treturn { __proto__: proto };\n\t\t},\n\n\t\tdescribe = Object.getOwnPropertyDescriptor || function(obj, name) {\n\t\t\tvar get = obj.__lookupGetter__ && obj.__lookupGetter__(name);\n\t\t\treturn get\n\t\t\t\t\t? { get: get, set: obj.__lookupSetter__(name),\n\t\t\t\t\t\tenumerable: true, configurable: true }\n\t\t\t\t\t: obj.hasOwnProperty(name)\n\t\t\t\t\t\t? { value: obj[name], enumerable: true,\n\t\t\t\t\t\t\tconfigurable: true, writable: true }\n\t\t\t\t\t\t: null;\n\t\t},\n\n\t\t_define = Object.defineProperty || function(obj, name, desc) {\n\t\t\tif ((desc.get || desc.set) && obj.__defineGetter__) {\n\t\t\t\tif (desc.get)\n\t\t\t\t\tobj.__defineGetter__(name, desc.get);\n\t\t\t\tif (desc.set)\n\t\t\t\t\tobj.__defineSetter__(name, desc.set);\n\t\t\t} else {\n\t\t\t\tobj[name] = desc.value;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tdefine = function(obj, name, desc) {\n\t\t\tdelete obj[name];\n\t\t\treturn _define(obj, name, desc);\n\t\t};\n\n\tfunction inject(dest, src, enumerable, beans, preserve) {\n\t\tvar beansNames = {};\n\n\t\tfunction field(name, val) {\n\t\t\tval = val || (val = describe(src, name))\n\t\t\t\t\t&& (val.get ? val : val.value);\n\t\t\tif (typeof val === 'string' && val[0] === '#')\n\t\t\t\tval = dest[val.substring(1)] || val;\n\t\t\tvar isFunc = typeof val === 'function',\n\t\t\t\tres = val,\n\t\t\t\tprev = preserve || isFunc\n\t\t\t\t\t\t? (val && val.get ? name in dest : dest[name])\n\t\t\t\t\t\t: null,\n\t\t\t\tbean;\n\t\t\tif (!preserve || !prev) {\n\t\t\t\tif (isFunc && prev)\n\t\t\t\t\tval.base = prev;\n\t\t\t\tif (isFunc && beans !== false\n\t\t\t\t\t\t&& (bean = name.match(/^([gs]et|is)(([A-Z])(.*))$/)))\n\t\t\t\t\tbeansNames[bean[3].toLowerCase() + bean[4]] = bean[2];\n\t\t\t\tif (!res || isFunc || !res.get || typeof res.get !== 'function'\n\t\t\t\t\t\t|| !Base.isPlainObject(res))\n\t\t\t\t\tres = { value: res, writable: true };\n\t\t\t\tif ((describe(dest, name)\n\t\t\t\t\t\t|| { configurable: true }).configurable) {\n\t\t\t\t\tres.configurable = true;\n\t\t\t\t\tres.enumerable = enumerable;\n\t\t\t\t}\n\t\t\t\tdefine(dest, name, res);\n\t\t\t}\n\t\t}\n\t\tif (src) {\n\t\t\tfor (var name in src) {\n\t\t\t\tif (src.hasOwnProperty(name) && !hidden.test(name))\n\t\t\t\t\tfield(name);\n\t\t\t}\n\t\t\tfor (var name in beansNames) {\n\t\t\t\tvar part = beansNames[name],\n\t\t\t\t\tset = dest['set' + part],\n\t\t\t\t\tget = dest['get' + part] || set && dest['is' + part];\n\t\t\t\tif (get && (beans === true || get.length === 0))\n\t\t\t\t\tfield(name, { get: get, set: set });\n\t\t\t}\n\t\t}\n\t\treturn dest;\n\t}\n\n\tfunction each(obj, iter, bind) {\n\t\tif (obj)\n\t\t\t('length' in obj && !obj.getLength\n\t\t\t\t\t&& typeof obj.length === 'number'\n\t\t\t\t? forEach\n\t\t\t\t: forIn).call(obj, iter, bind = bind || obj);\n\t\treturn bind;\n\t}\n\n\tfunction set(obj, props, exclude) {\n\t\tfor (var key in props)\n\t\t\tif (props.hasOwnProperty(key) && (!exclude || !exclude[key]))\n\t\t\t\tobj[key] = props[key];\n\t\treturn obj;\n\t}\n\n\treturn inject(function Base() {\n\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\tset(this, arguments[i]);\n\t}, {\n\t\tinject: function(src) {\n\t\t\tif (src) {\n\t\t\t\tvar statics = src.statics === true ? src : src.statics,\n\t\t\t\t\tbeans = src.beans,\n\t\t\t\t\tpreserve = src.preserve;\n\t\t\t\tif (statics !== src)\n\t\t\t\t\tinject(this.prototype, src, src.enumerable, beans, preserve);\n\t\t\t\tinject(this, statics, true, beans, preserve);\n\t\t\t}\n\t\t\tfor (var i = 1, l = arguments.length; i < l; i++)\n\t\t\t\tthis.inject(arguments[i]);\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar base = this,\n\t\t\t\tctor;\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\tif (ctor = arguments[i].initialize)\n\t\t\t\t\tbreak;\n\t\t\tctor = ctor || function() {\n\t\t\t\tbase.apply(this, arguments);\n\t\t\t};\n\t\t\tctor.prototype = create(this.prototype);\n\t\t\tctor.base = base;\n\t\t\tdefine(ctor.prototype, 'constructor',\n\t\t\t\t\t{ value: ctor, writable: true, configurable: true });\n\t\t\tinject(ctor, this, true);\n\t\t\treturn arguments.length ? this.inject.apply(ctor, arguments) : ctor;\n\t\t}\n\t}, true).inject({\n\t\tinject: function() {\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\tvar src = arguments[i];\n\t\t\t\tif (src)\n\t\t\t\t\tinject(this, src, src.enumerable, src.beans, src.preserve);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar res = create(this);\n\t\t\treturn res.inject.apply(res, arguments);\n\t\t},\n\n\t\teach: function(iter, bind) {\n\t\t\treturn each(this, iter, bind);\n\t\t},\n\n\t\tset: function(props) {\n\t\t\treturn set(this, props);\n\t\t},\n\n\t\tclone: function() {\n\t\t\treturn new this.constructor(this);\n\t\t},\n\n\t\tstatics: {\n\t\t\teach: each,\n\t\t\tcreate: create,\n\t\t\tdefine: define,\n\t\t\tdescribe: describe,\n\t\t\tset: set,\n\n\t\t\tclone: function(obj) {\n\t\t\t\treturn set(new obj.constructor(), obj);\n\t\t\t},\n\n\t\t\tisPlainObject: function(obj) {\n\t\t\t\tvar ctor = obj != null && obj.constructor;\n\t\t\t\treturn ctor && (ctor === Object || ctor === Base\n\t\t\t\t\t\t|| ctor.name === 'Object');\n\t\t\t},\n\n\t\t\tpick: function() {\n\t\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\t\tif (arguments[i] !== undefined)\n\t\t\t\t\t\treturn arguments[i];\n\t\t\t}\n\t\t}\n\t});\n};\n\nif (typeof module !== 'undefined')\n\tmodule.exports = Base;\n\nBase.inject({\n\ttoString: function() {\n\t\treturn this._id != null\n\t\t\t?  (this._class || 'Object') + (this._name\n\t\t\t\t? \" '\" + this._name + \"'\"\n\t\t\t\t: ' @' + this._id)\n\t\t\t: '{ ' + Base.each(this, function(value, key) {\n\t\t\t\tif (!/^_/.test(key)) {\n\t\t\t\t\tvar type = typeof value;\n\t\t\t\t\tthis.push(key + ': ' + (type === 'number'\n\t\t\t\t\t\t\t? Formatter.instance.number(value)\n\t\t\t\t\t\t\t: type === 'string' ? \"'\" + value + \"'\" : value));\n\t\t\t\t}\n\t\t\t}, []).join(', ') + ' }';\n\t},\n\n\tgetClassName: function() {\n\t\treturn this._class || '';\n\t},\n\n\texportJSON: function(options) {\n\t\treturn Base.exportJSON(this, options);\n\t},\n\n\ttoJSON: function() {\n\t\treturn Base.serialize(this);\n\t},\n\n\t_set: function(props, exclude, dontCheck) {\n\t\tif (props && (dontCheck || Base.isPlainObject(props))) {\n\t\t\tvar orig = props._filtering || props;\n\t\t\tfor (var key in orig) {\n\t\t\t\tif (orig.hasOwnProperty(key) && !(exclude && exclude[key])) {\n\t\t\t\t\tvar value = props[key];\n\t\t\t\t\tif (value !== undefined)\n\t\t\t\t\t\tthis[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tstatics: {\n\n\t\texports: {\n\t\t\tenumerable: true\n\t\t},\n\n\t\textend: function extend() {\n\t\t\tvar res = extend.base.apply(this, arguments),\n\t\t\t\tname = res.prototype._class;\n\t\t\tif (name && !Base.exports[name])\n\t\t\t\tBase.exports[name] = res;\n\t\t\treturn res;\n\t\t},\n\n\t\tequals: function(obj1, obj2) {\n\t\t\tfunction checkKeys(o1, o2) {\n\t\t\t\tfor (var i in o1)\n\t\t\t\t\tif (o1.hasOwnProperty(i) && !o2.hasOwnProperty(i))\n\t\t\t\t\t\treturn false;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj1 === obj2)\n\t\t\t\treturn true;\n\t\t\tif (obj1 && obj1.equals)\n\t\t\t\treturn obj1.equals(obj2);\n\t\t\tif (obj2 && obj2.equals)\n\t\t\t\treturn obj2.equals(obj1);\n\t\t\tif (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\t\t\tif (obj1.length !== obj2.length)\n\t\t\t\t\treturn false;\n\t\t\t\tfor (var i = 0, l = obj1.length; i < l; i++) {\n\t\t\t\t\tif (!Base.equals(obj1[i], obj2[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (obj1 && typeof obj1 === 'object'\n\t\t\t\t\t&& obj2 && typeof obj2 === 'object') {\n\t\t\t\tif (!checkKeys(obj1, obj2) || !checkKeys(obj2, obj1))\n\t\t\t\t\treturn false;\n\t\t\t\tfor (var i in obj1) {\n\t\t\t\t\tif (obj1.hasOwnProperty(i)\n\t\t\t\t\t\t\t&& !Base.equals(obj1[i], obj2[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tread: function(list, start, options, length) {\n\t\t\tif (this === Base) {\n\t\t\t\tvar value = this.peek(list, start);\n\t\t\t\tlist.__index++;\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tvar proto = this.prototype,\n\t\t\t\treadIndex = proto._readIndex,\n\t\t\t\tindex = start || readIndex && list.__index || 0;\n\t\t\tif (!length)\n\t\t\t\tlength = list.length - index;\n\t\t\tvar obj = list[index];\n\t\t\tif (obj instanceof this\n\t\t\t\t|| options && options.readNull && obj == null && length <= 1) {\n\t\t\t\tif (readIndex)\n\t\t\t\t\tlist.__index = index + 1;\n\t\t\t\treturn obj && options && options.clone ? obj.clone() : obj;\n\t\t\t}\n\t\t\tobj = Base.create(this.prototype);\n\t\t\tif (readIndex)\n\t\t\t\tobj.__read = true;\n\t\t\tobj = obj.initialize.apply(obj, index > 0 || length < list.length\n\t\t\t\t? Array.prototype.slice.call(list, index, index + length)\n\t\t\t\t: list) || obj;\n\t\t\tif (readIndex) {\n\t\t\t\tlist.__index = index + obj.__read;\n\t\t\t\tobj.__read = undefined;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tpeek: function(list, start) {\n\t\t\treturn list[list.__index = start || list.__index || 0];\n\t\t},\n\n\t\tremain: function(list) {\n\t\t\treturn list.length - (list.__index || 0);\n\t\t},\n\n\t\treadAll: function(list, start, options) {\n\t\t\tvar res = [],\n\t\t\t\tentry;\n\t\t\tfor (var i = start || 0, l = list.length; i < l; i++) {\n\t\t\t\tres.push(Array.isArray(entry = list[i])\n\t\t\t\t\t\t? this.read(entry, 0, options)\n\t\t\t\t\t\t: this.read(list, i, options, 1));\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\n\t\treadNamed: function(list, name, start, options, length) {\n\t\t\tvar value = this.getNamed(list, name),\n\t\t\t\thasObject = value !== undefined;\n\t\t\tif (hasObject) {\n\t\t\t\tvar filtered = list._filtered;\n\t\t\t\tif (!filtered) {\n\t\t\t\t\tfiltered = list._filtered = Base.create(list[0]);\n\t\t\t\t\tfiltered._filtering = list[0];\n\t\t\t\t}\n\t\t\t\tfiltered[name] = undefined;\n\t\t\t}\n\t\t\treturn this.read(hasObject ? [value] : list, start, options, length);\n\t\t},\n\n\t\tgetNamed: function(list, name) {\n\t\t\tvar arg = list[0];\n\t\t\tif (list._hasObject === undefined)\n\t\t\t\tlist._hasObject = list.length === 1 && Base.isPlainObject(arg);\n\t\t\tif (list._hasObject)\n\t\t\t\treturn name ? arg[name] : list._filtered || arg;\n\t\t},\n\n\t\thasNamed: function(list, name) {\n\t\t\treturn !!this.getNamed(list, name);\n\t\t},\n\n\t\tisPlainValue: function(obj, asString) {\n\t\t\treturn this.isPlainObject(obj) || Array.isArray(obj)\n\t\t\t\t\t|| asString && typeof obj === 'string';\n\t\t},\n\n\t\tserialize: function(obj, options, compact, dictionary) {\n\t\t\toptions = options || {};\n\n\t\t\tvar root = !dictionary,\n\t\t\t\tres;\n\t\t\tif (root) {\n\t\t\t\toptions.formatter = new Formatter(options.precision);\n\t\t\t\tdictionary = {\n\t\t\t\t\tlength: 0,\n\t\t\t\t\tdefinitions: {},\n\t\t\t\t\treferences: {},\n\t\t\t\t\tadd: function(item, create) {\n\t\t\t\t\t\tvar id = '#' + item._id,\n\t\t\t\t\t\t\tref = this.references[id];\n\t\t\t\t\t\tif (!ref) {\n\t\t\t\t\t\t\tthis.length++;\n\t\t\t\t\t\t\tvar res = create.call(item),\n\t\t\t\t\t\t\t\tname = item._class;\n\t\t\t\t\t\t\tif (name && res[0] !== name)\n\t\t\t\t\t\t\t\tres.unshift(name);\n\t\t\t\t\t\t\tthis.definitions[id] = res;\n\t\t\t\t\t\t\tref = this.references[id] = [id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (obj && obj._serialize) {\n\t\t\t\tres = obj._serialize(options, dictionary);\n\t\t\t\tvar name = obj._class;\n\t\t\t\tif (name && !compact && !res._compact && res[0] !== name)\n\t\t\t\t\tres.unshift(name);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = 0, l = obj.length; i < l; i++)\n\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\tdictionary);\n\t\t\t\tif (compact)\n\t\t\t\t\tres._compact = true;\n\t\t\t} else if (Base.isPlainObject(obj)) {\n\t\t\t\tres = {};\n\t\t\t\tfor (var i in obj)\n\t\t\t\t\tif (obj.hasOwnProperty(i))\n\t\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\t\tdictionary);\n\t\t\t} else if (typeof obj === 'number') {\n\t\t\t\tres = options.formatter.number(obj, options.precision);\n\t\t\t} else {\n\t\t\t\tres = obj;\n\t\t\t}\n\t\t\treturn root && dictionary.length > 0\n\t\t\t\t\t? [['dictionary', dictionary.definitions], res]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\tdeserialize: function(json, create, _data) {\n\t\t\tvar res = json,\n\t\t\t\tisRoot = !_data;\n\t\t\t_data = _data || {};\n\t\t\tif (Array.isArray(json)) {\n\t\t\t\tvar type = json[0],\n\t\t\t\t\tisDictionary = type === 'dictionary';\n\t\t\t\tif (!isDictionary) {\n\t\t\t\t\tif (_data.dictionary && json.length == 1 && /^#/.test(type))\n\t\t\t\t\t\treturn _data.dictionary[type];\n\t\t\t\t\ttype = Base.exports[type];\n\t\t\t\t}\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = type ? 1 : 0, l = json.length; i < l; i++)\n\t\t\t\t\tres.push(Base.deserialize(json[i], create, _data));\n\t\t\t\tif (isDictionary) {\n\t\t\t\t\t_data.dictionary = res[0];\n\t\t\t\t} else if (type) {\n\t\t\t\t\tvar args = res;\n\t\t\t\t\tif (create) {\n\t\t\t\t\t\tres = create(type, args);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres = Base.create(type.prototype);\n\t\t\t\t\t\ttype.apply(res, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (Base.isPlainObject(json)) {\n\t\t\t\tres = {};\n\t\t\t\tfor (var key in json)\n\t\t\t\t\tres[key] = Base.deserialize(json[key], create, _data);\n\t\t\t}\n\t\t\treturn isRoot && json && json.length && json[0][0] === 'dictionary'\n\t\t\t\t\t? res[1]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\texportJSON: function(obj, options) {\n\t\t\tvar json = Base.serialize(obj, options);\n\t\t\treturn options && options.asString === false\n\t\t\t\t\t? json\n\t\t\t\t\t: JSON.stringify(json);\n\t\t},\n\n\t\timportJSON: function(json, target) {\n\t\t\treturn Base.deserialize(\n\t\t\t\t\ttypeof json === 'string' ? JSON.parse(json) : json,\n\t\t\t\t\tfunction(type, args) {\n\t\t\t\t\t\tvar obj = target && target.constructor === type\n\t\t\t\t\t\t\t\t? target\n\t\t\t\t\t\t\t\t: Base.create(type.prototype),\n\t\t\t\t\t\t\tisTarget = obj === target;\n\t\t\t\t\t\tif (args.length === 1 && obj instanceof Item\n\t\t\t\t\t\t\t\t&& (isTarget || !(obj instanceof Layer))) {\n\t\t\t\t\t\t\tvar arg = args[0];\n\t\t\t\t\t\t\tif (Base.isPlainObject(arg))\n\t\t\t\t\t\t\t\targ.insert = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttype.apply(obj, args);\n\t\t\t\t\t\tif (isTarget)\n\t\t\t\t\t\t\ttarget = null;\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t});\n\t\t},\n\n\t\tsplice: function(list, items, index, remove) {\n\t\t\tvar amount = items && items.length,\n\t\t\t\tappend = index === undefined;\n\t\t\tindex = append ? list.length : index;\n\t\t\tif (index > list.length)\n\t\t\t\tindex = list.length;\n\t\t\tfor (var i = 0; i < amount; i++)\n\t\t\t\titems[i]._index = index + i;\n\t\t\tif (append) {\n\t\t\t\tlist.push.apply(list, items);\n\t\t\t\treturn [];\n\t\t\t} else {\n\t\t\t\tvar args = [index, remove];\n\t\t\t\tif (items)\n\t\t\t\t\targs.push.apply(args, items);\n\t\t\t\tvar removed = list.splice.apply(list, args);\n\t\t\t\tfor (var i = 0, l = removed.length; i < l; i++)\n\t\t\t\t\tremoved[i]._index = undefined;\n\t\t\t\tfor (var i = index + amount, l = list.length; i < l; i++)\n\t\t\t\t\tlist[i]._index = i;\n\t\t\t\treturn removed;\n\t\t\t}\n\t\t},\n\n\t\tcapitalize: function(str) {\n\t\t\treturn str.replace(/\\b[a-z]/g, function(match) {\n\t\t\t\treturn match.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\tcamelize: function(str) {\n\t\t\treturn str.replace(/-(.)/g, function(all, chr) {\n\t\t\t\treturn chr.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\thyphenate: function(str) {\n\t\t\treturn str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\t\t}\n\t}\n});\n\nvar Emitter = {\n\ton: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.on(key, value);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tvar entry = this._eventTypes[type];\n\t\t\tif (entry) {\n\t\t\t\tvar handlers = this._callbacks = this._callbacks || {};\n\t\t\t\thandlers = handlers[type] = handlers[type] || [];\n\t\t\t\tif (handlers.indexOf(func) === -1) {\n\t\t\t\t\thandlers.push(func);\n\t\t\t\t\tif (entry.install && handlers.length == 1)\n\t\t\t\t\t\tentry.install.call(this, type);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\toff: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.off(key, value);\n\t\t\t}, this);\n\t\t\treturn;\n\t\t}\n\t\tvar entry = this._eventTypes[type],\n\t\t\thandlers = this._callbacks && this._callbacks[type],\n\t\t\tindex;\n\t\tif (entry && handlers) {\n\t\t\tif (!func || (index = handlers.indexOf(func)) !== -1\n\t\t\t\t\t&& handlers.length === 1) {\n\t\t\t\tif (entry.uninstall)\n\t\t\t\t\tentry.uninstall.call(this, type);\n\t\t\t\tdelete this._callbacks[type];\n\t\t\t} else if (index !== -1) {\n\t\t\t\thandlers.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\tonce: function(type, func) {\n\t\treturn this.on(type, function() {\n\t\t\tfunc.apply(this, arguments);\n\t\t\tthis.off(type, func);\n\t\t});\n\t},\n\n\temit: function(type, event) {\n\t\tvar handlers = this._callbacks && this._callbacks[type];\n\t\tif (!handlers)\n\t\t\treturn false;\n\t\tvar args = [].slice.call(arguments, 1);\n\t\tfor (var i = 0, l = handlers.length; i < l; i++) {\n\t\t\tif (handlers[i].apply(this, args) === false\n\t\t\t\t\t&& event && event.stop) {\n\t\t\t\tevent.stop();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tresponds: function(type) {\n\t\treturn !!(this._callbacks && this._callbacks[type]);\n\t},\n\n\tattach: '#on',\n\tdetach: '#off',\n\tfire: '#emit',\n\n\t_installEvents: function(install) {\n\t\tvar handlers = this._callbacks,\n\t\t\tkey = install ? 'install' : 'uninstall';\n\t\tfor (var type in handlers) {\n\t\t\tif (handlers[type].length > 0) {\n\t\t\t\tvar entry = this._eventTypes[type],\n\t\t\t\t\tfunc = entry[key];\n\t\t\t\tif (func)\n\t\t\t\t\tfunc.call(this, type);\n\t\t\t}\n\t\t}\n\t},\n\n\tstatics: {\n\t\tinject: function inject(src) {\n\t\t\tvar events = src._events;\n\t\t\tif (events) {\n\t\t\t\tvar types = {};\n\t\t\t\tBase.each(events, function(entry, key) {\n\t\t\t\t\tvar isString = typeof entry === 'string',\n\t\t\t\t\t\tname = isString ? entry : key,\n\t\t\t\t\t\tpart = Base.capitalize(name),\n\t\t\t\t\t\ttype = name.substring(2).toLowerCase();\n\t\t\t\t\ttypes[type] = isString ? {} : entry;\n\t\t\t\t\tname = '_' + name;\n\t\t\t\t\tsrc['get' + part] = function() {\n\t\t\t\t\t\treturn this[name];\n\t\t\t\t\t};\n\t\t\t\t\tsrc['set' + part] = function(func) {\n\t\t\t\t\t\tvar prev = this[name];\n\t\t\t\t\t\tif (prev)\n\t\t\t\t\t\t\tthis.off(type, prev);\n\t\t\t\t\t\tif (func)\n\t\t\t\t\t\t\tthis.on(type, func);\n\t\t\t\t\t\tthis[name] = func;\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsrc._eventTypes = types;\n\t\t\t}\n\t\t\treturn inject.base.apply(this, arguments);\n\t\t}\n\t}\n};\n\nvar PaperScope = Base.extend({\n\t_class: 'PaperScope',\n\n\tinitialize: function PaperScope() {\n\t\tpaper = this;\n\t\tthis.settings = new Base({\n\t\t\tapplyMatrix: true,\n\t\t\thandleSize: 4,\n\t\t\thitTolerance: 0\n\t\t});\n\t\tthis.project = null;\n\t\tthis.projects = [];\n\t\tthis.tools = [];\n\t\tthis.palettes = [];\n\t\tthis._id = PaperScope._id++;\n\t\tPaperScope._scopes[this._id] = this;\n\t\tvar proto = PaperScope.prototype;\n\t\tif ( noCanvas ) {\n\t\t\treturn;\n\t\t}\n\t\tif (!this.support) {\n\t\t\tvar ctx = CanvasProvider.getContext(1, 1);\n\t\t\tproto.support = {\n\t\t\t\tnativeDash: 'setLineDash' in ctx || 'mozDash' in ctx,\n\t\t\t\tnativeBlendModes: BlendMode.nativeModes\n\t\t\t};\n\t\t\tCanvasProvider.release(ctx);\n\t\t}\n\n\t\tif (!this.browser) {\n\t\t\tvar browser = proto.browser = {};\n\t\t\tnavigator.userAgent.toLowerCase().replace(\n\t\t\t\t/(opera|chrome|safari|webkit|firefox|msie|trident|atom)\\/?\\s*([.\\d]+)(?:.*version\\/([.\\d]+))?(?:.*rv\\:([.\\d]+))?/g,\n\t\t\t\tfunction(all, n, v1, v2, rv) {\n\t\t\t\t\tif (!browser.chrome) {\n\t\t\t\t\t\tvar v = n === 'opera' ? v2 : v1;\n\t\t\t\t\t\tif (n === 'trident') {\n\t\t\t\t\t\t\tv = rv;\n\t\t\t\t\t\t\tn = 'msie';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbrowser.version = v;\n\t\t\t\t\t\tbrowser.versionNumber = parseFloat(v);\n\t\t\t\t\t\tbrowser.name = n;\n\t\t\t\t\t\tbrowser[n] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (browser.chrome)\n\t\t\t\tdelete browser.webkit;\n\t\t\tif (browser.atom)\n\t\t\t\tdelete browser.chrome;\n\t\t}\n\t},\n\n\tversion: '0.9.22',\n\n\tgetView: function() {\n\t\treturn this.project && this.project.getView();\n\t},\n\n\tgetPaper: function() {\n\t\treturn this;\n\t},\n\n\texecute: function(code, url, options) {\n\t\tpaper.PaperScript.execute(code, this, url, options);\n\t\tView.updateFocus();\n\t},\n\n\tinstall: function(scope) {\n\t\tvar that = this;\n\t\tBase.each(['project', 'view', 'tool'], function(key) {\n\t\t\tBase.define(scope, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn that[key];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tfor (var key in this)\n\t\t\tif (!/^_/.test(key) && this[key])\n\t\t\t\tscope[key] = this[key];\n\t},\n\n\tsetup: function(element) {\n\t\tpaper = this;\n\t\tthis.project = new Project(element);\n\t\treturn this;\n\t},\n\n\tactivate: function() {\n\t\tpaper = this;\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.projects.length - 1; i >= 0; i--)\n\t\t\tthis.projects[i].remove();\n\t\tfor (var i = this.tools.length - 1; i >= 0; i--)\n\t\t\tthis.tools[i].remove();\n\t\tfor (var i = this.palettes.length - 1; i >= 0; i--)\n\t\t\tthis.palettes[i].remove();\n\t},\n\n\tremove: function() {\n\t\tthis.clear();\n\t\tdelete PaperScope._scopes[this._id];\n\t},\n\n\tstatics: new function() {\n\t\tfunction handleAttribute(name) {\n\t\t\tname += 'Attribute';\n\t\t\treturn function(el, attr) {\n\t\t\t\treturn el[name](attr) || el[name]('data-paper-' + attr);\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t_scopes: {},\n\t\t\t_id: 0,\n\n\t\t\tget: function(id) {\n\t\t\t\treturn this._scopes[id] || null;\n\t\t\t},\n\n\t\t\tgetAttribute: handleAttribute('get'),\n\t\t\thasAttribute: handleAttribute('has')\n\t\t};\n\t}\n});\n\nvar PaperScopeItem = Base.extend(Emitter, {\n\n\tinitialize: function(activate) {\n\t\tthis._scope = paper;\n\t\tthis._index = this._scope[this._list].push(this) - 1;\n\t\tif (activate || !this._scope[this._reference])\n\t\t\tthis.activate();\n\t},\n\n\tactivate: function() {\n\t\tif (!this._scope)\n\t\t\treturn false;\n\t\tvar prev = this._scope[this._reference];\n\t\tif (prev && prev !== this)\n\t\t\tprev.emit('deactivate');\n\t\tthis._scope[this._reference] = this;\n\t\tthis.emit('activate', prev);\n\t\treturn true;\n\t},\n\n\tisActive: function() {\n\t\treturn this._scope[this._reference] === this;\n\t},\n\n\tremove: function() {\n\t\tif (this._index == null)\n\t\t\treturn false;\n\t\tBase.splice(this._scope[this._list], null, this._index, 1);\n\t\tif (this._scope[this._reference] == this)\n\t\t\tthis._scope[this._reference] = null;\n\t\tthis._scope = null;\n\t\treturn true;\n\t}\n});\n\nvar Formatter = Base.extend({\n\tinitialize: function(precision) {\n\t\tthis.precision = precision || 5;\n\t\tthis.multiplier = Math.pow(10, this.precision);\n\t},\n\n\tnumber: function(val) {\n\t\treturn Math.round(val * this.multiplier) / this.multiplier;\n\t},\n\n\tpair: function(val1, val2, separator) {\n\t\treturn this.number(val1) + (separator || ',') + this.number(val2);\n\t},\n\n\tpoint: function(val, separator) {\n\t\treturn this.number(val.x) + (separator || ',') + this.number(val.y);\n\t},\n\n\tsize: function(val, separator) {\n\t\treturn this.number(val.width) + (separator || ',')\n\t\t\t\t+ this.number(val.height);\n\t},\n\n\trectangle: function(val, separator) {\n\t\treturn this.point(val, separator) + (separator || ',')\n\t\t\t\t+ this.size(val, separator);\n\t}\n});\n\nFormatter.instance = new Formatter();\n\nvar Numerical = new function() {\n\n\tvar abscissas = [\n\t\t[  0.5773502691896257645091488],\n\t\t[0,0.7745966692414833770358531],\n\t\t[  0.3399810435848562648026658,0.8611363115940525752239465],\n\t\t[0,0.5384693101056830910363144,0.9061798459386639927976269],\n\t\t[  0.2386191860831969086305017,0.6612093864662645136613996,0.9324695142031520278123016],\n\t\t[0,0.4058451513773971669066064,0.7415311855993944398638648,0.9491079123427585245261897],\n\t\t[  0.1834346424956498049394761,0.5255324099163289858177390,0.7966664774136267395915539,0.9602898564975362316835609],\n\t\t[0,0.3242534234038089290385380,0.6133714327005903973087020,0.8360311073266357942994298,0.9681602395076260898355762],\n\t\t[  0.1488743389816312108848260,0.4333953941292471907992659,0.6794095682990244062343274,0.8650633666889845107320967,0.9739065285171717200779640],\n\t\t[0,0.2695431559523449723315320,0.5190961292068118159257257,0.7301520055740493240934163,0.8870625997680952990751578,0.9782286581460569928039380],\n\t\t[  0.1252334085114689154724414,0.3678314989981801937526915,0.5873179542866174472967024,0.7699026741943046870368938,0.9041172563704748566784659,0.9815606342467192506905491],\n\t\t[0,0.2304583159551347940655281,0.4484927510364468528779129,0.6423493394403402206439846,0.8015780907333099127942065,0.9175983992229779652065478,0.9841830547185881494728294],\n\t\t[  0.1080549487073436620662447,0.3191123689278897604356718,0.5152486363581540919652907,0.6872929048116854701480198,0.8272013150697649931897947,0.9284348836635735173363911,0.9862838086968123388415973],\n\t\t[0,0.2011940939974345223006283,0.3941513470775633698972074,0.5709721726085388475372267,0.7244177313601700474161861,0.8482065834104272162006483,0.9372733924007059043077589,0.9879925180204854284895657],\n\t\t[  0.0950125098376374401853193,0.2816035507792589132304605,0.4580167776572273863424194,0.6178762444026437484466718,0.7554044083550030338951012,0.8656312023878317438804679,0.9445750230732325760779884,0.9894009349916499325961542]\n\t];\n\n\tvar weights = [\n\t\t[1],\n\t\t[0.8888888888888888888888889,0.5555555555555555555555556],\n\t\t[0.6521451548625461426269361,0.3478548451374538573730639],\n\t\t[0.5688888888888888888888889,0.4786286704993664680412915,0.2369268850561890875142640],\n\t\t[0.4679139345726910473898703,0.3607615730481386075698335,0.1713244923791703450402961],\n\t\t[0.4179591836734693877551020,0.3818300505051189449503698,0.2797053914892766679014678,0.1294849661688696932706114],\n\t\t[0.3626837833783619829651504,0.3137066458778872873379622,0.2223810344533744705443560,0.1012285362903762591525314],\n\t\t[0.3302393550012597631645251,0.3123470770400028400686304,0.2606106964029354623187429,0.1806481606948574040584720,0.0812743883615744119718922],\n\t\t[0.2955242247147528701738930,0.2692667193099963550912269,0.2190863625159820439955349,0.1494513491505805931457763,0.0666713443086881375935688],\n\t\t[0.2729250867779006307144835,0.2628045445102466621806889,0.2331937645919904799185237,0.1862902109277342514260976,0.1255803694649046246346943,0.0556685671161736664827537],\n\t\t[0.2491470458134027850005624,0.2334925365383548087608499,0.2031674267230659217490645,0.1600783285433462263346525,0.1069393259953184309602547,0.0471753363865118271946160],\n\t\t[0.2325515532308739101945895,0.2262831802628972384120902,0.2078160475368885023125232,0.1781459807619457382800467,0.1388735102197872384636018,0.0921214998377284479144218,0.0404840047653158795200216],\n\t\t[0.2152638534631577901958764,0.2051984637212956039659241,0.1855383974779378137417166,0.1572031671581935345696019,0.1215185706879031846894148,0.0801580871597602098056333,0.0351194603317518630318329],\n\t\t[0.2025782419255612728806202,0.1984314853271115764561183,0.1861610000155622110268006,0.1662692058169939335532009,0.1395706779261543144478048,0.1071592204671719350118695,0.0703660474881081247092674,0.0307532419961172683546284],\n\t\t[0.1894506104550684962853967,0.1826034150449235888667637,0.1691565193950025381893121,0.1495959888165767320815017,0.1246289712555338720524763,0.0951585116824927848099251,0.0622535239386478928628438,0.0271524594117540948517806]\n\t];\n\n\tvar abs = Math.abs,\n\t\tsqrt = Math.sqrt,\n\t\tpow = Math.pow,\n\t\tTOLERANCE = 1e-6,\n\t\tEPSILON = 1e-12,\n\t\tMACHINE_EPSILON = 1.12e-16;\n\n\treturn {\n\t\tTOLERANCE: TOLERANCE,\n\t\tEPSILON: EPSILON,\n\t\tMACHINE_EPSILON: MACHINE_EPSILON,\n\t\tKAPPA: 4 * (sqrt(2) - 1) / 3,\n\n\t\tisZero: function(val) {\n\t\t\treturn abs(val) <= EPSILON;\n\t\t},\n\n\t\tintegrate: function(f, a, b, n) {\n\t\t\tvar x = abscissas[n - 2],\n\t\t\t\tw = weights[n - 2],\n\t\t\t\tA = (b - a) * 0.5,\n\t\t\t\tB = A + a,\n\t\t\t\ti = 0,\n\t\t\t\tm = (n + 1) >> 1,\n\t\t\t\tsum = n & 1 ? w[i++] * f(B) : 0;\n\t\t\twhile (i < m) {\n\t\t\t\tvar Ax = A * x[i];\n\t\t\t\tsum += w[i++] * (f(B + Ax) + f(B - Ax));\n\t\t\t}\n\t\t\treturn A * sum;\n\t\t},\n\n\t\tfindRoot: function(f, df, x, a, b, n, tolerance) {\n\t\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\tvar fx = f(x),\n\t\t\t\t\tdx = fx / df(x),\n\t\t\t\t\tnx = x - dx;\n\t\t\t\tif (abs(dx) < tolerance)\n\t\t\t\t\treturn nx;\n\t\t\t\tif (fx > 0) {\n\t\t\t\t\tb = x;\n\t\t\t\t\tx = nx <= a ? (a + b) * 0.5 : nx;\n\t\t\t\t} else {\n\t\t\t\t\ta = x;\n\t\t\t\t\tx = nx >= b ? (a + b) * 0.5 : nx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn x;\n\t\t},\n\n\t\tsolveQuadratic: function(a, b, c, roots, min, max) {\n\t\t\tvar count = 0,\n\t\t\t\tx1, x2 = Infinity,\n\t\t\t\tB = b,\n\t\t\t\tD;\n\t\t\tb /= 2;\n\t\t\tD = b * b - a * c;\n\t\t\tif (abs(D) < MACHINE_EPSILON) {\n\t\t\t\tvar pow = Math.pow,\n\t\t\t\t\tgmC = pow(abs(a*b*c), 1/3);\n\t\t\t\tif (gmC < 1e-8) {\n\t\t\t\t\t/*\n\t\t\t\t\t * we multiply with a factor to normalize the\n\t\t\t\t\t * coefficients. The factor is just the nearest exponent\n\t\t\t\t\t * of 10, big enough to raise all the coefficients to\n\t\t\t\t\t * nearly [-1, +1] range.\n\t\t\t\t\t */\n\t\t\t\t\tvar mult = pow(10, abs(\n\t\t\t\t\t\tMath.floor(Math.log(gmC) * Math.LOG10E)));\n\t\t\t\t\tif (!isFinite(mult))\n\t\t\t\t\t\tmult = 0;\n\t\t\t\t\ta *= mult;\n\t\t\t\t\tb *= mult;\n\t\t\t\t\tc *= mult;\n\t\t\t\t\tD = b * b - a * c;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (abs(a) < MACHINE_EPSILON) {\n\t\t\t\tif (abs(B) < MACHINE_EPSILON)\n\t\t\t\t\treturn abs(c) < MACHINE_EPSILON ? -1 : 0;\n\t\t\t\tx1 = -c / B;\n\t\t\t} else {\n\t\t\t\tif (D >= -MACHINE_EPSILON) {\n\t\t\t\t\tD = D < 0 ? 0 : D;\n\t\t\t\t\tvar R = sqrt(D);\n\t\t\t\t\tif (b >= MACHINE_EPSILON && b <= MACHINE_EPSILON) {\n\t\t\t\t\t\tx1 = abs(a) >= abs(c) ? R / a : -c / R;\n\t\t\t\t\t\tx2 = -x1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar q = -(b + (b < 0 ? -1 : 1) * R);\n\t\t\t\t\t\tx1 = q / a;\n\t\t\t\t\t\tx2 = c / q;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isFinite(x1) && (min == null || x1 >= min && x1 <= max))\n\t\t\t\troots[count++] = x1;\n\t\t\tif (x2 !== x1\n\t\t\t\t\t&& isFinite(x2) && (min == null || x2 >= min && x2 <= max))\n\t\t\t\troots[count++] = x2;\n\t\t\treturn count;\n\t\t},\n\n\t\tsolveCubic: function(a, b, c, d, roots, min, max) {\n\t\t\tvar x, b1, c2, count = 0;\n\t\t\tif (a === 0) {\n\t\t\t\ta = b;\n\t\t\t\tb1 = c;\n\t\t\t\tc2 = d;\n\t\t\t\tx = Infinity;\n\t\t\t} else if (d === 0) {\n\t\t\t\tb1 = b;\n\t\t\t\tc2 = c;\n\t\t\t\tx = 0;\n\t\t\t} else {\n\t\t\t\tvar ec = 1 + MACHINE_EPSILON,\n\t\t\t\t\tx0, q, qd, t, r, s, tmp;\n\t\t\t\tx = -(b / a) / 3;\n\t\t\t\ttmp = a * x,\n\t\t\t\tb1 = tmp + b,\n\t\t\t\tc2 = b1 * x + c,\n\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\tq = c2 * x + d;\n\t\t\t\tt = q /a;\n\t\t\t\tr = pow(abs(t), 1/3);\n\t\t\t\ts = t < 0 ? -1 : 1;\n\t\t\t\tt = -qd / a;\n\t\t\t\tr = t > 0 ? 1.3247179572 * Math.max(r, sqrt(t)) : r;\n\t\t\t\tx0 = x - s * r;\n\t\t\t\tif (x0 !== x) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\ttmp = a * x,\n\t\t\t\t\t\tb1 = tmp + b,\n\t\t\t\t\t\tc2 = b1 * x + c,\n\t\t\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\t\t\tq = c2 * x + d;\n\t\t\t\t\t\tx0 = qd === 0 ? x : x - q / qd / ec;\n\t\t\t\t\t\tif (x0 === x) {\n\t\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} while (s * x0 > s * x);\n\t\t\t\t\tif (abs(a) * x * x > abs(d / x)) {\n\t\t\t\t\t\tc2 = -d / x;\n\t\t\t\t\t\tb1 = (c2 - c) / x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar count = Numerical.solveQuadratic(a, b1, c2, roots, min, max);\n\t\t\tif (isFinite(x) && (count === 0 || x !== roots[count - 1])\n\t\t\t\t\t&& (min == null || x >= min && x <= max))\n\t\t\t\troots[count++] = x;\n\t\t\treturn count;\n\t\t}\n\t};\n};\n\nvar Point = Base.extend({\n\t_class: 'Point',\n\t_readIndex: true,\n\n\tinitialize: function Point(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasY = typeof arg1 === 'number';\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = hasY ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasY ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.x = arg0.x;\n\t\t\t\tthis.y = arg0.y;\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.x = arg0.width;\n\t\t\t\tthis.y = arg0.height;\n\t\t\t} else if (arg0.angle != null) {\n\t\t\t\tthis.x = arg0.length;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.setAngle(arg0.angle);\n\t\t\t} else {\n\t\t\t\tthis.x = this.y = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t},\n\n\tequals: function(point) {\n\t\treturn this === point || point\n\t\t\t\t&& (this.x === point.x && this.y === point.y\n\t\t\t\t\t|| Array.isArray(point)\n\t\t\t\t\t\t&& this.x === point[0] && this.y === point[1])\n\t\t\t\t|| false;\n\t},\n\n\tclone: function() {\n\t\treturn new Point(this.x, this.y);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x), f.number(this.y)];\n\t},\n\n\tgetLength: function() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t},\n\n\tsetLength: function(length) {\n\t\tif (this.isZero()) {\n\t\t\tvar angle = this._angle || 0;\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t} else {\n\t\t\tvar scale = length / this.getLength();\n\t\t\tif (Numerical.isZero(scale))\n\t\t\t\tthis.getAngle();\n\t\t\tthis.set(\n\t\t\t\tthis.x * scale,\n\t\t\t\tthis.y * scale\n\t\t\t);\n\t\t}\n\t},\n\tgetAngle: function() {\n\t\treturn this.getAngleInRadians.apply(this, arguments) * 180 / Math.PI;\n\t},\n\n\tsetAngle: function(angle) {\n\t\tthis.setAngleInRadians.call(this, angle * Math.PI / 180);\n\t},\n\n\tgetAngleInDegrees: '#getAngle',\n\tsetAngleInDegrees: '#setAngle',\n\n\tgetAngleInRadians: function() {\n\t\tif (!arguments.length) {\n\t\t\treturn this.isZero()\n\t\t\t\t\t? this._angle || 0\n\t\t\t\t\t: this._angle = Math.atan2(this.y, this.x);\n\t\t} else {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tdiv = this.getLength() * point.getLength();\n\t\t\tif (Numerical.isZero(div)) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\tvar a = this.dot(point) / div;\n\t\t\t\treturn Math.acos(a < -1 ? -1 : a > 1 ? 1 : a);\n\t\t\t}\n\t\t}\n\t},\n\n\tsetAngleInRadians: function(angle) {\n\t\tthis._angle = angle;\n\t\tif (!this.isZero()) {\n\t\t\tvar length = this.getLength();\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t}\n\t},\n\n\tgetQuadrant: function() {\n\t\treturn this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;\n\t}\n}, {\n\tbeans: false,\n\n\tgetDirectedAngle: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Math.atan2(this.cross(point), this.dot(point)) * 180 / Math.PI;\n\t},\n\n\tgetDistance: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x - this.x,\n\t\t\ty = point.y - this.y,\n\t\t\td = x * x + y * y,\n\t\t\tsquared = Base.read(arguments);\n\t\treturn squared ? d : Math.sqrt(d);\n\t},\n\n\tnormalize: function(length) {\n\t\tif (length === undefined)\n\t\t\tlength = 1;\n\t\tvar current = this.getLength(),\n\t\t\tscale = current !== 0 ? length / current : 0,\n\t\t\tpoint = new Point(this.x * scale, this.y * scale);\n\t\tif (scale >= 0)\n\t\t\tpoint._angle = this._angle;\n\t\treturn point;\n\t},\n\n\trotate: function(angle, center) {\n\t\tif (angle === 0)\n\t\t\treturn this.clone();\n\t\tangle = angle * Math.PI / 180;\n\t\tvar point = center ? this.subtract(center) : this,\n\t\t\ts = Math.sin(angle),\n\t\t\tc = Math.cos(angle);\n\t\tpoint = new Point(\n\t\t\tpoint.x * c - point.y * s,\n\t\t\tpoint.x * s + point.y * c\n\t\t);\n\t\treturn center ? point.add(center) : point;\n\t},\n\n\ttransform: function(matrix) {\n\t\treturn matrix ? matrix._transformPoint(this) : this;\n\t},\n\n\tadd: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x + point.x, this.y + point.y);\n\t},\n\n\tsubtract: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x - point.x, this.y - point.y);\n\t},\n\n\tmultiply: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x * point.x, this.y * point.y);\n\t},\n\n\tdivide: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x / point.x, this.y / point.y);\n\t},\n\n\tmodulo: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x % point.x, this.y % point.y);\n\t},\n\n\tnegate: function() {\n\t\treturn new Point(-this.x, -this.y);\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this);\n\t},\n\n\tisClose: function(point, tolerance) {\n\t\treturn this.getDistance(point) < tolerance;\n\t},\n\n\tisColinear: function(point) {\n\t\treturn Math.abs(this.cross(point)) < 1e-12;\n\t},\n\n\tisOrthogonal: function(point) {\n\t\treturn Math.abs(this.dot(point)) < 1e-12;\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.x) && Numerical.isZero(this.y);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.x) || isNaN(this.y);\n\t},\n\n\tdot: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.x + this.y * point.y;\n\t},\n\n\tcross: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.y - this.y * point.x;\n\t},\n\n\tproject: function() {\n\t\tvar point = Point.read(arguments);\n\t\tif (point.isZero()) {\n\t\t\treturn new Point(0, 0);\n\t\t} else {\n\t\t\tvar scale = this.dot(point) / point.dot(point);\n\t\t\treturn new Point(\n\t\t\t\tpoint.x * scale,\n\t\t\t\tpoint.y * scale\n\t\t\t);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tmin: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.min(point1.x, point2.x),\n\t\t\t\tMath.min(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\tmax: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.max(point1.x, point2.x),\n\t\t\t\tMath.max(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Point(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Point(op(this.x), op(this.y));\n\t};\n}, {}));\n\nvar LinkedPoint = Point.extend({\n\tinitialize: function Point(x, y, owner, setter) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Size = Base.extend({\n\t_class: 'Size',\n\t_readIndex: true,\n\n\tinitialize: function Size(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasHeight = typeof arg1 === 'number';\n\t\t\tthis.width = arg0;\n\t\t\tthis.height = hasHeight ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasHeight ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.width = this.height = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.width = arg0[0];\n\t\t\t\tthis.height = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.width = arg0.width;\n\t\t\t\tthis.height = arg0.height;\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.width = arg0.x;\n\t\t\t\tthis.height = arg0.y;\n\t\t\t} else {\n\t\t\t\tthis.width = this.height = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(width, height) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tequals: function(size) {\n\t\treturn size === this || size && (this.width === size.width\n\t\t\t\t&& this.height === size.height\n\t\t\t\t|| Array.isArray(size) && this.width === size[0]\n\t\t\t\t\t&& this.height === size[1]) || false;\n\t},\n\n\tclone: function() {\n\t\treturn new Size(this.width, this.height);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tadd: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width + size.width, this.height + size.height);\n\t},\n\n\tsubtract: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width - size.width, this.height - size.height);\n\t},\n\n\tmultiply: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width * size.width, this.height * size.height);\n\t},\n\n\tdivide: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width / size.width, this.height / size.height);\n\t},\n\n\tmodulo: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width % size.width, this.height % size.height);\n\t},\n\n\tnegate: function() {\n\t\treturn new Size(-this.width, -this.height);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.width) && Numerical.isZero(this.height);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.width) || isNaN(this.height);\n\t},\n\n\tstatics: {\n\t\tmin: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.min(size1.width, size2.width),\n\t\t\t\tMath.min(size1.height, size2.height));\n\t\t},\n\n\t\tmax: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.max(size1.width, size2.width),\n\t\t\t\tMath.max(size1.height, size2.height));\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Size(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Size(op(this.width), op(this.height));\n\t};\n}, {}));\n\nvar LinkedSize = Size.extend({\n\tinitialize: function Size(width, height, owner, setter) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(width, height, _dontNotify) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._width;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis._width = width;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._height;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis._height = height;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Rectangle = Base.extend({\n\t_class: 'Rectangle',\n\t_readIndex: true,\n\tbeans: true,\n\n\tinitialize: function Rectangle(arg0, arg1, arg2, arg3) {\n\t\tvar type = typeof arg0,\n\t\t\tread = 0;\n\t\tif (type === 'number') {\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = arg1;\n\t\t\tthis.width = arg2;\n\t\t\tthis.height = arg3;\n\t\t\tread = 4;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0[1];\n\t\t\t\tthis.width = arg0[2];\n\t\t\t\tthis.height = arg0[3];\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.x !== undefined || arg0.width !== undefined) {\n\t\t\t\tthis.x = arg0.x || 0;\n\t\t\t\tthis.y = arg0.y || 0;\n\t\t\t\tthis.width = arg0.width || 0;\n\t\t\t\tthis.height = arg0.height || 0;\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.from === undefined && arg0.to === undefined) {\n\t\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\t\tthis._set(arg0);\n\t\t\t\tread = 1;\n\t\t\t}\n\t\t}\n\t\tif (!read) {\n\t\t\tvar point = Point.readNamed(arguments, 'from'),\n\t\t\t\tnext = Base.peek(arguments);\n\t\t\tthis.x = point.x;\n\t\t\tthis.y = point.y;\n\t\t\tif (next && next.x !== undefined || Base.hasNamed(arguments, 'to')) {\n\t\t\t\tvar to = Point.readNamed(arguments, 'to');\n\t\t\t\tthis.width = to.x - point.x;\n\t\t\t\tthis.height = to.y - point.y;\n\t\t\t\tif (this.width < 0) {\n\t\t\t\t\tthis.x = to.x;\n\t\t\t\t\tthis.width = -this.width;\n\t\t\t\t}\n\t\t\t\tif (this.height < 0) {\n\t\t\t\t\tthis.y = to.y;\n\t\t\t\t\tthis.height = -this.height;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tthis.width = size.width;\n\t\t\t\tthis.height = size.height;\n\t\t\t}\n\t\t\tread = arguments.__index;\n\t\t}\n\t\tif (this.__read)\n\t\t\tthis.__read = read;\n\t},\n\n\tset: function(x, y, width, height) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tclone: function() {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t},\n\n\tequals: function(rect) {\n\t\tvar rt = Base.isPlainValue(rect)\n\t\t\t\t? Rectangle.read(arguments)\n\t\t\t\t: rect;\n\t\treturn rt === this\n\t\t\t\t|| rt && this.x === rt.x && this.y === rt.y\n\t\t\t\t\t&& this.width === rt.width && this.height === rt.height\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x)\n\t\t\t\t+ ', y: ' + f.number(this.y)\n\t\t\t\t+ ', width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height)\n\t\t\t\t+ ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x),\n\t\t\t\tf.number(this.y),\n\t\t\t\tf.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tgetPoint: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.x, this.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t},\n\n\tgetSize: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Size : LinkedSize;\n\t\treturn new ctor(this.width, this.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (this._fixX)\n\t\t\tthis.x += (this.width - size.width) * this._fixX;\n\t\tif (this._fixY)\n\t\t\tthis.y += (this.height - size.height) * this._fixY;\n\t\tthis.width = size.width;\n\t\tthis.height = size.height;\n\t\tthis._fixW = 1;\n\t\tthis._fixH = 1;\n\t},\n\n\tgetLeft: function() {\n\t\treturn this.x;\n\t},\n\n\tsetLeft: function(left) {\n\t\tif (!this._fixW)\n\t\t\tthis.width -= left - this.x;\n\t\tthis.x = left;\n\t\tthis._fixX = 0;\n\t},\n\n\tgetTop: function() {\n\t\treturn this.y;\n\t},\n\n\tsetTop: function(top) {\n\t\tif (!this._fixH)\n\t\t\tthis.height -= top - this.y;\n\t\tthis.y = top;\n\t\tthis._fixY = 0;\n\t},\n\n\tgetRight: function() {\n\t\treturn this.x + this.width;\n\t},\n\n\tsetRight: function(right) {\n\t\tif (this._fixX !== undefined && this._fixX !== 1)\n\t\t\tthis._fixW = 0;\n\t\tif (this._fixW)\n\t\t\tthis.x = right - this.width;\n\t\telse\n\t\t\tthis.width = right - this.x;\n\t\tthis._fixX = 1;\n\t},\n\n\tgetBottom: function() {\n\t\treturn this.y + this.height;\n\t},\n\n\tsetBottom: function(bottom) {\n\t\tif (this._fixY !== undefined && this._fixY !== 1)\n\t\t\tthis._fixH = 0;\n\t\tif (this._fixH)\n\t\t\tthis.y = bottom - this.height;\n\t\telse\n\t\t\tthis.height = bottom - this.y;\n\t\tthis._fixY = 1;\n\t},\n\n\tgetCenterX: function() {\n\t\treturn this.x + this.width * 0.5;\n\t},\n\n\tsetCenterX: function(x) {\n\t\tthis.x = x - this.width * 0.5;\n\t\tthis._fixX = 0.5;\n\t},\n\n\tgetCenterY: function() {\n\t\treturn this.y + this.height * 0.5;\n\t},\n\n\tsetCenterY: function(y) {\n\t\tthis.y = y - this.height * 0.5;\n\t\tthis._fixY = 0.5;\n\t},\n\n\tgetCenter: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.getCenterX(), this.getCenterY(), this, 'setCenter');\n\t},\n\n\tsetCenter: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.setCenterX(point.x);\n\t\tthis.setCenterY(point.y);\n\t\treturn this;\n\t},\n\n\tgetArea: function() {\n\t\treturn this.width * this.height;\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.width === 0 || this.height === 0;\n\t},\n\n\tcontains: function(arg) {\n\t\treturn arg && arg.width !== undefined\n\t\t\t\t|| (Array.isArray(arg) ? arg : arguments).length == 4\n\t\t\t\t? this._containsRectangle(Rectangle.read(arguments))\n\t\t\t\t: this._containsPoint(Point.read(arguments));\n\t},\n\n\t_containsPoint: function(point) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x <= this.x + this.width\n\t\t\t\t&& y <= this.y + this.height;\n\t},\n\n\t_containsRectangle: function(rect) {\n\t\tvar x = rect.x,\n\t\t\ty = rect.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x + rect.width <= this.x + this.width\n\t\t\t\t&& y + rect.height <= this.y + this.height;\n\t},\n\n\tintersects: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width > this.x\n\t\t\t\t&& rect.y + rect.height > this.y\n\t\t\t\t&& rect.x < this.x + this.width\n\t\t\t\t&& rect.y < this.y + this.height;\n\t},\n\n\ttouches: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width >= this.x\n\t\t\t\t&& rect.y + rect.height >= this.y\n\t\t\t\t&& rect.x <= this.x + this.width\n\t\t\t\t&& rect.y <= this.y + this.height;\n\t},\n\n\tintersect: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.max(this.x, rect.x),\n\t\t\ty1 = Math.max(this.y, rect.y),\n\t\t\tx2 = Math.min(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.min(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tunite: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.min(this.x, rect.x),\n\t\t\ty1 = Math.min(this.y, rect.y),\n\t\t\tx2 = Math.max(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.max(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tinclude: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar x1 = Math.min(this.x, point.x),\n\t\t\ty1 = Math.min(this.y, point.y),\n\t\t\tx2 = Math.max(this.x + this.width, point.x),\n\t\t\ty2 = Math.max(this.y + this.height, point.y);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\texpand: function() {\n\t\tvar amount = Size.read(arguments),\n\t\t\thor = amount.width,\n\t\t\tver = amount.height;\n\t\treturn new Rectangle(this.x - hor / 2, this.y - ver / 2,\n\t\t\t\tthis.width + hor, this.height + ver);\n\t},\n\n\tscale: function(hor, ver) {\n\t\treturn this.expand(this.width * hor - this.width,\n\t\t\t\tthis.height * (ver === undefined ? hor : ver) - this.height);\n\t}\n}, Base.each([\n\t\t['Top', 'Left'], ['Top', 'Right'],\n\t\t['Bottom', 'Left'], ['Bottom', 'Right'],\n\t\t['Left', 'Center'], ['Top', 'Center'],\n\t\t['Right', 'Center'], ['Bottom', 'Center']\n\t],\n\tfunction(parts, index) {\n\t\tvar part = parts.join('');\n\t\tvar xFirst = /^[RL]/.test(part);\n\t\tif (index >= 4)\n\t\t\tparts[1] += xFirst ? 'Y' : 'X';\n\t\tvar x = parts[xFirst ? 0 : 1],\n\t\t\ty = parts[xFirst ? 1 : 0],\n\t\t\tgetX = 'get' + x,\n\t\t\tgetY = 'get' + y,\n\t\t\tsetX = 'set' + x,\n\t\t\tsetY = 'set' + y,\n\t\t\tget = 'get' + part,\n\t\t\tset = 'set' + part;\n\t\tthis[get] = function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn new ctor(this[getX](), this[getY](), this, set);\n\t\t};\n\t\tthis[set] = function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis[setX](point.x);\n\t\t\tthis[setY](point.y);\n\t\t};\n\t}, {\n\t\tbeans: true\n\t}\n));\n\nvar LinkedRectangle = Rectangle.extend({\n\tinitialize: function Rectangle(x, y, width, height, owner, setter) {\n\t\tthis.set(x, y, width, height, true);\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, width, height, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t}\n}, new function() {\n\tvar proto = Rectangle.prototype;\n\n\treturn Base.each(['x', 'y', 'width', 'height'], function(key) {\n\t\tvar part = Base.capitalize(key);\n\t\tvar internal = '_' + key;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[internal];\n\t\t};\n\n\t\tthis['set' + part] = function(value) {\n\t\t\tthis[internal] = value;\n\t\t\tif (!this._dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t};\n\t}, Base.each(['Point', 'Size', 'Center',\n\t\t\t'Left', 'Top', 'Right', 'Bottom', 'CenterX', 'CenterY',\n\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'],\n\t\tfunction(key) {\n\t\t\tvar name = 'set' + key;\n\t\t\tthis[name] = function() {\n\t\t\t\tthis._dontNotify = true;\n\t\t\t\tproto[name].apply(this, arguments);\n\t\t\t\tthis._dontNotify = false;\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\t};\n\t\t}, {\n\t\t\tisSelected: function() {\n\t\t\t\treturn this._owner._boundsSelected;\n\t\t\t},\n\n\t\t\tsetSelected: function(selected) {\n\t\t\t\tvar owner = this._owner;\n\t\t\t\tif (owner.setSelected) {\n\t\t\t\t\towner._boundsSelected = selected;\n\t\t\t\t\towner.setSelected(selected || owner._selectedSegmentState > 0);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n});\n\nvar Matrix = Base.extend({\n\t_class: 'Matrix',\n\n\tinitialize: function Matrix(arg) {\n\t\tvar count = arguments.length,\n\t\t\tok = true;\n\t\tif (count === 6) {\n\t\t\tthis.set.apply(this, arguments);\n\t\t} else if (count === 1) {\n\t\t\tif (arg instanceof Matrix) {\n\t\t\t\tthis.set(arg._a, arg._c, arg._b, arg._d, arg._tx, arg._ty);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tthis.set.apply(this, arg);\n\t\t\t} else {\n\t\t\t\tok = false;\n\t\t\t}\n\t\t} else if (count === 0) {\n\t\t\tthis.reset();\n\t\t} else {\n\t\t\tok = false;\n\t\t}\n\t\tif (!ok)\n\t\t\tthrow new Error('Unsupported matrix parameters');\n\t},\n\n\tset: function(a, c, b, d, tx, ty, _dontNotify) {\n\t\tthis._a = a;\n\t\tthis._c = c;\n\t\tthis._b = b;\n\t\tthis._d = d;\n\t\tthis._tx = tx;\n\t\tthis._ty = ty;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.getValues(), options);\n\t},\n\n\t_changed: function() {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\tif (owner._applyMatrix) {\n\t\t\t\towner.transform(null, true);\n\t\t\t} else {\n\t\t\t\towner._changed(9);\n\t\t\t}\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d,\n\t\t\t\tthis._tx, this._ty);\n\t},\n\n\tequals: function(mx) {\n\t\treturn mx === this || mx && this._a === mx._a && this._b === mx._b\n\t\t\t\t&& this._c === mx._c && this._d === mx._d\n\t\t\t\t&& this._tx === mx._tx && this._ty === mx._ty\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '[[' + [f.number(this._a), f.number(this._b),\n\t\t\t\t\tf.number(this._tx)].join(', ') + '], ['\n\t\t\t\t+ [f.number(this._c), f.number(this._d),\n\t\t\t\t\tf.number(this._ty)].join(', ') + ']]';\n\t},\n\n\treset: function(_dontNotify) {\n\t\tthis._a = this._d = 1;\n\t\tthis._c = this._b = this._tx = this._ty = 0;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tapply: function(recursively, _setApplyMatrix) {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\towner.transform(null, true, Base.pick(recursively, true),\n\t\t\t\t\t_setApplyMatrix);\n\t\t\treturn this.isIdentity();\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x,\n\t\t\ty = point.y;\n\t\tthis._tx += x * this._a + y * this._b;\n\t\tthis._ty += x * this._c + y * this._d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tscale: function() {\n\t\tvar scale = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tthis._a *= scale.x;\n\t\tthis._c *= scale.x;\n\t\tthis._b *= scale.y;\n\t\tthis._d *= scale.y;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\trotate: function(angle ) {\n\t\tangle *= Math.PI / 180;\n\t\tvar center = Point.read(arguments, 1),\n\t\t\tx = center.x,\n\t\t\ty = center.y,\n\t\t\tcos = Math.cos(angle),\n\t\t\tsin = Math.sin(angle),\n\t\t\ttx = x - x * cos + y * sin,\n\t\t\tty = y - x * sin - y * cos,\n\t\t\ta = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d;\n\t\tthis._a = cos * a + sin * b;\n\t\tthis._b = -sin * a + cos * b;\n\t\tthis._c = cos * c + sin * d;\n\t\tthis._d = -sin * c + cos * d;\n\t\tthis._tx += tx * a + ty * b;\n\t\tthis._ty += tx * c + ty * d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tshear: function() {\n\t\tvar shear = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tvar a = this._a,\n\t\t\tc = this._c;\n\t\tthis._a += shear.y * this._b;\n\t\tthis._c += shear.y * this._d;\n\t\tthis._b += shear.x * a;\n\t\tthis._d += shear.x * c;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tskew: function() {\n\t\tvar skew = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true }),\n\t\t\ttoRadians = Math.PI / 180,\n\t\t\tshear = new Point(Math.tan(skew.x * toRadians),\n\t\t\t\tMath.tan(skew.y * toRadians));\n\t\treturn this.shear(shear, center);\n\t},\n\n\tconcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + c2 * b1;\n\t\tthis._b = b2 * a1 + d2 * b1;\n\t\tthis._c = a2 * c1 + c2 * d1;\n\t\tthis._d = b2 * c1 + d2 * d1;\n\t\tthis._tx += tx2 * a1 + ty2 * b1;\n\t\tthis._ty += tx2 * c1 + ty2 * d1;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tpreConcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + b2 * c1;\n\t\tthis._b = a2 * b1 + b2 * d1;\n\t\tthis._c = c2 * a1 + d2 * c1;\n\t\tthis._d = c2 * b1 + d2 * d1;\n\t\tthis._tx = a2 * tx1 + b2 * ty1 + tx2;\n\t\tthis._ty = c2 * tx1 + d2 * ty1 + ty2;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tchain: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\treturn new Matrix(\n\t\t\t\ta2 * a1 + c2 * b1,\n\t\t\t\ta2 * c1 + c2 * d1,\n\t\t\t\tb2 * a1 + d2 * b1,\n\t\t\t\tb2 * c1 + d2 * d1,\n\t\t\t\ttx1 + tx2 * a1 + ty2 * b1,\n\t\t\t\tty1 + tx2 * c1 + ty2 * d1);\n\t},\n\n\tisIdentity: function() {\n\t\treturn this._a === 1 && this._c === 0 && this._b === 0 && this._d === 1\n\t\t\t\t&& this._tx === 0 && this._ty === 0;\n\t},\n\n\torNullIfIdentity: function() {\n\t\treturn this.isIdentity() ? null : this;\n\t},\n\n\tisInvertible: function() {\n\t\treturn !!this._getDeterminant();\n\t},\n\n\tisSingular: function() {\n\t\treturn !this._getDeterminant();\n\t},\n\n\ttransform: function( src, dst, count) {\n\t\treturn arguments.length < 3\n\t\t\t? this._transformPoint(Point.read(arguments))\n\t\t\t: this._transformCoordinates(src, dst, count);\n\t},\n\n\t_transformPoint: function(point, dest, _dontNotify) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\tx * this._a + y * this._b + this._tx,\n\t\t\tx * this._c + y * this._d + this._ty,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\t_transformCoordinates: function(src, dst, count) {\n\t\tvar i = 0,\n\t\t\tj = 0,\n\t\t\tmax = 2 * count;\n\t\twhile (i < max) {\n\t\t\tvar x = src[i++],\n\t\t\t\ty = src[i++];\n\t\t\tdst[j++] = x * this._a + y * this._b + this._tx;\n\t\t\tdst[j++] = x * this._c + y * this._d + this._ty;\n\t\t}\n\t\treturn dst;\n\t},\n\n\t_transformCorners: function(rect) {\n\t\tvar x1 = rect.x,\n\t\t\ty1 = rect.y,\n\t\t\tx2 = x1 + rect.width,\n\t\t\ty2 = y1 + rect.height,\n\t\t\tcoords = [ x1, y1, x2, y1, x2, y2, x1, y2 ];\n\t\treturn this._transformCoordinates(coords, coords, 4);\n\t},\n\n\t_transformBounds: function(bounds, dest, _dontNotify) {\n\t\tvar coords = this._transformCorners(bounds),\n\t\t\tmin = coords.slice(0, 2),\n\t\t\tmax = coords.slice();\n\t\tfor (var i = 2; i < 8; i++) {\n\t\t\tvar val = coords[i],\n\t\t\t\tj = i & 1;\n\t\t\tif (val < min[j])\n\t\t\t\tmin[j] = val;\n\t\t\telse if (val > max[j])\n\t\t\t\tmax[j] = val;\n\t\t}\n\t\tif (!dest)\n\t\t\tdest = new Rectangle();\n\t\treturn dest.set(min[0], min[1], max[0] - min[0], max[1] - min[1],\n\t\t\t\t_dontNotify);\n\t},\n\n\tinverseTransform: function() {\n\t\treturn this._inverseTransform(Point.read(arguments));\n\t},\n\n\t_getDeterminant: function() {\n\t\tvar det = this._a * this._d - this._b * this._c;\n\t\treturn isFinite(det) && !Numerical.isZero(det)\n\t\t\t\t&& isFinite(this._tx) && isFinite(this._ty)\n\t\t\t\t? det : null;\n\t},\n\n\t_inverseTransform: function(point, dest, _dontNotify) {\n\t\tvar det = this._getDeterminant();\n\t\tif (!det)\n\t\t\treturn null;\n\t\tvar x = point.x - this._tx,\n\t\t\ty = point.y - this._ty;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\t(x * this._d - y * this._b) / det,\n\t\t\t(y * this._a - x * this._c) / det,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\tdecompose: function() {\n\t\tvar a = this._a, b = this._b, c = this._c, d = this._d;\n\t\tif (Numerical.isZero(a * d - b * c))\n\t\t\treturn null;\n\n\t\tvar scaleX = Math.sqrt(a * a + b * b);\n\t\ta /= scaleX;\n\t\tb /= scaleX;\n\n\t\tvar shear = a * c + b * d;\n\t\tc -= a * shear;\n\t\td -= b * shear;\n\n\t\tvar scaleY = Math.sqrt(c * c + d * d);\n\t\tc /= scaleY;\n\t\td /= scaleY;\n\t\tshear /= scaleY;\n\n\t\tif (a * d < b * c) {\n\t\t\ta = -a;\n\t\t\tb = -b;\n\t\t\tshear = -shear;\n\t\t\tscaleX = -scaleX;\n\t\t}\n\n\t\treturn {\n\t\t\tscaling: new Point(scaleX, scaleY),\n\t\t\trotation: -Math.atan2(b, a) * 180 / Math.PI,\n\t\t\tshearing: shear\n\t\t};\n\t},\n\n\tgetValues: function() {\n\t\treturn [ this._a, this._c, this._b, this._d, this._tx, this._ty ];\n\t},\n\n\tgetTranslation: function() {\n\t\treturn new Point(this._tx, this._ty);\n\t},\n\n\tgetScaling: function() {\n\t\treturn (this.decompose() || {}).scaling;\n\t},\n\n\tgetRotation: function() {\n\t\treturn (this.decompose() || {}).rotation;\n\t},\n\n\tinverted: function() {\n\t\tvar det = this._getDeterminant();\n\t\treturn det && new Matrix(\n\t\t\t\tthis._d / det,\n\t\t\t\t-this._c / det,\n\t\t\t\t-this._b / det,\n\t\t\t\tthis._a / det,\n\t\t\t\t(this._b * this._ty - this._d * this._tx) / det,\n\t\t\t\t(this._c * this._tx - this._a * this._ty) / det);\n\t},\n\n\tshiftless: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d, 0, 0);\n\t},\n\n\tapplyToContext: function(ctx) {\n\t\tctx.transform(this._a, this._c, this._b, this._d, this._tx, this._ty);\n\t}\n}, Base.each(['a', 'c', 'b', 'd', 'tx', 'ty'], function(name) {\n\tvar part = Base.capitalize(name),\n\t\tprop = '_' + name;\n\tthis['get' + part] = function() {\n\t\treturn this[prop];\n\t};\n\tthis['set' + part] = function(value) {\n\t\tthis[prop] = value;\n\t\tthis._changed();\n\t};\n}, {}));\n\nvar Line = Base.extend({\n\t_class: 'Line',\n\n\tinitialize: function Line(arg0, arg1, arg2, arg3, arg4) {\n\t\tvar asVector = false;\n\t\tif (arguments.length >= 4) {\n\t\t\tthis._px = arg0;\n\t\t\tthis._py = arg1;\n\t\t\tthis._vx = arg2;\n\t\t\tthis._vy = arg3;\n\t\t\tasVector = arg4;\n\t\t} else {\n\t\t\tthis._px = arg0.x;\n\t\t\tthis._py = arg0.y;\n\t\t\tthis._vx = arg1.x;\n\t\t\tthis._vy = arg1.y;\n\t\t\tasVector = arg2;\n\t\t}\n\t\tif (!asVector) {\n\t\t\tthis._vx -= this._px;\n\t\t\tthis._vy -= this._py;\n\t\t}\n\t},\n\n\tgetPoint: function() {\n\t\treturn new Point(this._px, this._py);\n\t},\n\n\tgetVector: function() {\n\t\treturn new Point(this._vx, this._vy);\n\t},\n\n\tgetLength: function() {\n\t\treturn this.getVector().getLength();\n\t},\n\n\tintersect: function(line, isInfinite) {\n\t\treturn Line.intersect(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tline._px, line._py, line._vx, line._vy,\n\t\t\t\ttrue, isInfinite);\n\t},\n\n\tgetSide: function(point) {\n\t\treturn Line.getSide(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true);\n\t},\n\n\tgetDistance: function(point) {\n\t\treturn Math.abs(Line.getSignedDistance(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true));\n\t},\n\n\tstatics: {\n\t\tintersect: function(apx, apy, avx, avy, bpx, bpy, bvx, bvy, asVector,\n\t\t\t\tisInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tavx -= apx;\n\t\t\t\tavy -= apy;\n\t\t\t\tbvx -= bpx;\n\t\t\t\tbvy -= bpy;\n\t\t\t}\n\t\t\tvar cross = avx * bvy - avy * bvx;\n\t\t\tif (!Numerical.isZero(cross)) {\n\t\t\t\tvar dx = apx - bpx,\n\t\t\t\t\tdy = apy - bpy,\n\t\t\t\t\tta = (bvx * dy - bvy * dx) / cross,\n\t\t\t\t\ttb = (avx * dy - avy * dx) / cross;\n\t\t\t\tif (isInfinite || 0 <= ta && ta <= 1 && 0 <= tb && tb <= 1)\n\t\t\t\t\treturn new Point(\n\t\t\t\t\t\t\t\tapx + ta * avx,\n\t\t\t\t\t\t\t\tapy + ta * avy);\n\t\t\t}\n\t\t},\n\n\t\tgetSide: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\tvar v2x = x - px,\n\t\t\t\tv2y = y - py,\n\t\t\t\tccw = v2x * vy - v2y * vx;\n\t\t\tif (ccw === 0) {\n\t\t\t\tccw = v2x * vx + v2y * vy;\n\t\t\t\tif (ccw > 0) {\n\t\t\t\t\tv2x -= vx;\n\t\t\t\t\tv2y -= vy;\n\t\t\t\t\tccw = v2x * vx + v2y * vy;\n\t\t\t\t\tif (ccw < 0)\n\t\t\t\t\t\tccw = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ccw < 0 ? -1 : ccw > 0 ? 1 : 0;\n\t\t},\n\n\t\tgetSignedDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\treturn Numerical.isZero(vx)\n\t\t\t\t\t? vy >= 0 ? px - x : x - px\n\t\t\t\t\t: Numerical.isZero(vy)\n\t\t\t\t\t\t? vx >= 0 ? y - py : py - y\n\t\t\t\t\t\t: (vx * (y - py) - vy * (x - px)) / Math.sqrt(vx * vx + vy * vy);\n\t\t}\n\t}\n});\n\nvar Project = PaperScopeItem.extend({\n\t_class: 'Project',\n\t_list: 'projects',\n\t_reference: 'project',\n\n\tinitialize: function Project(element) {\n\t\tPaperScopeItem.call(this, true);\n\t\tthis.layers = [];\n\t\tthis._activeLayer = null;\n\t\tthis.symbols = [];\n\t\tthis._currentStyle = new Style(null, null, this);\n\t\tthis._view = View.create(this,\n\t\t\t\telement || CanvasProvider.getCanvas(1, 1));\n\t\tthis._selectedItems = {};\n\t\tthis._selectedItemCount = 0;\n\t\tthis._updateVersion = 0;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this.layers, options, true, dictionary);\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--)\n\t\t\tthis.layers[i].remove();\n\t\tthis.symbols = [];\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.layers.length === 0;\n\t},\n\n\tremove: function remove() {\n\t\tif (!remove.base.call(this))\n\t\t\treturn false;\n\t\tif (this._view)\n\t\t\tthis._view.remove();\n\t\treturn true;\n\t},\n\n\tgetView: function() {\n\t\treturn this._view;\n\t},\n\n\tgetCurrentStyle: function() {\n\t\treturn this._currentStyle;\n\t},\n\n\tsetCurrentStyle: function(style) {\n\t\tthis._currentStyle.initialize(style);\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tgetOptions: function() {\n\t\treturn this._scope.settings;\n\t},\n\n\tgetActiveLayer: function() {\n\t\treturn this._activeLayer || new Layer({ project: this });\n\t},\n\n\tgetSelectedItems: function() {\n\t\tvar items = [];\n\t\tfor (var id in this._selectedItems) {\n\t\t\tvar item = this._selectedItems[id];\n\t\t\tif (item.isInserted())\n\t\t\t\titems.push(item);\n\t\t}\n\t\treturn items;\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tif (item instanceof Layer) {\n\t\t\titem._remove(false, true);\n\t\t\tBase.splice(this.layers, [item], index, 0);\n\t\t\titem._setProject(this, true);\n\t\t\tif (this._changes)\n\t\t\t\titem._changed(5);\n\t\t\tif (!this._activeLayer)\n\t\t\t\tthis._activeLayer = item;\n\t\t} else if (item instanceof Item) {\n\t\t\t(this._activeLayer\n\t\t\t\t|| this.insertChild(index, new Layer(Item.NO_INSERT)))\n\t\t\t\t\t.insertChild(index, item, _preserve);\n\t\t} else {\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\t_updateSelection: function(item) {\n\t\tvar id = item._id,\n\t\t\tselectedItems = this._selectedItems;\n\t\tif (item._selected) {\n\t\t\tif (selectedItems[id] !== item) {\n\t\t\t\tthis._selectedItemCount++;\n\t\t\t\tselectedItems[id] = item;\n\t\t\t}\n\t\t} else if (selectedItems[id] === item) {\n\t\t\tthis._selectedItemCount--;\n\t\t\tdelete selectedItems[id];\n\t\t}\n\t},\n\n\tselectAll: function() {\n\t\tvar layers = this.layers;\n\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\tlayers[i].setFullySelected(true);\n\t},\n\n\tdeselectAll: function() {\n\t\tvar selectedItems = this._selectedItems;\n\t\tfor (var i in selectedItems)\n\t\t\tselectedItems[i].setFullySelected(false);\n\t},\n\n\thitTest: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\toptions = HitResult.getOptions(Base.read(arguments));\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--) {\n\t\t\tvar res = this.layers[i]._hitTest(point, options);\n\t\t\tif (res) return res;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this.layers, match);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this.layers, match, null, null, true)[0] || null;\n\t},\n\n\timportJSON: function(json) {\n\t\tthis.activate();\n\t\tvar layer = this._activeLayer;\n\t\treturn Base.importJSON(json, layer && layer.isEmpty() && layer);\n\t},\n\n\tdraw: function(ctx, matrix, pixelRatio) {\n\t\tthis._updateVersion++;\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tvar param = new Base({\n\t\t\toffset: new Point(0, 0),\n\t\t\tpixelRatio: pixelRatio,\n\t\t\tviewMatrix: matrix.isIdentity() ? null : matrix,\n\t\t\tmatrices: [new Matrix()],\n\t\t\tupdateMatrix: true\n\t\t});\n\t\tfor (var i = 0, layers = this.layers, l = layers.length; i < l; i++)\n\t\t\tlayers[i].draw(ctx, param);\n\t\tctx.restore();\n\n\t\tif (this._selectedItemCount > 0) {\n\t\t\tctx.save();\n\t\t\tctx.strokeWidth = 1;\n\t\t\tvar items = this._selectedItems,\n\t\t\t\tsize = this._scope.settings.handleSize,\n\t\t\t\tversion = this._updateVersion;\n\t\t\tfor (var id in items)\n\t\t\t\titems[id]._drawSelection(ctx, matrix, size, items, version);\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nvar Symbol = Base.extend({\n\t_class: 'Symbol',\n\n\tinitialize: function Symbol(item, dontCenter) {\n\t\tthis._id = Symbol._id = (Symbol._id || 0) + 1;\n\t\tthis.project = paper.project;\n\t\tthis.project.symbols.push(this);\n\t\tif (item)\n\t\t\tthis.setDefinition(item, dontCenter);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._class, this._definition],\n\t\t\t\t\toptions, false, dictionary);\n\t\t});\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 8) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (flags & 1) {\n\t\t\tthis.project._needsUpdate = true;\n\t\t}\n\t},\n\n\tgetDefinition: function() {\n\t\treturn this._definition;\n\t},\n\n\tsetDefinition: function(item, _dontCenter) {\n\t\tif (item._parentSymbol)\n\t\t\titem = item.clone();\n\t\tif (this._definition)\n\t\t\tthis._definition._parentSymbol = null;\n\t\tthis._definition = item;\n\t\titem.remove();\n\t\titem.setSelected(false);\n\t\tif (!_dontCenter)\n\t\t\titem.setPosition(new Point());\n\t\titem._parentSymbol = this;\n\t\tthis._changed(9);\n\t},\n\n\tplace: function(position) {\n\t\treturn new PlacedSymbol(this, position);\n\t},\n\n\tclone: function() {\n\t\treturn new Symbol(this._definition.clone(false));\n\t},\n\n\tequals: function(symbol) {\n\t\treturn symbol === this\n\t\t\t\t|| symbol && this.definition.equals(symbol.definition)\n\t\t\t\t|| false;\n\t}\n});\n\nvar Item = Base.extend(Emitter, {\n\tstatics: {\n\t\textend: function extend(src) {\n\t\t\tif (src._serializeFields)\n\t\t\t\tsrc._serializeFields = new Base(\n\t\t\t\t\t\tthis.prototype._serializeFields, src._serializeFields);\n\t\t\treturn extend.base.apply(this, arguments);\n\t\t},\n\n\t\tNO_INSERT: { insert: false }\n\t},\n\n\t_class: 'Item',\n\t_applyMatrix: true,\n\t_canApplyMatrix: true,\n\t_boundsSelected: false,\n\t_selectChildren: false,\n\t_serializeFields: {\n\t\tname: null,\n\t\tapplyMatrix: null,\n\t\tmatrix: new Matrix(),\n\t\tpivot: null,\n\t\tlocked: false,\n\t\tvisible: true,\n\t\tblendMode: 'normal',\n\t\topacity: 1,\n\t\tguide: false,\n\t\tselected: false,\n\t\tclipMask: false,\n\t\tdata: {}\n\t},\n\n\tinitialize: function Item() {\n\t},\n\n\t_initialize: function(props, point) {\n\t\tvar hasProps = props && Base.isPlainObject(props),\n\t\t\tinternal = hasProps && props.internal === true,\n\t\t\tmatrix = this._matrix = new Matrix(),\n\t\t\tproject = hasProps && props.project || paper.project;\n\t\tif (!internal)\n\t\t\tthis._id = Item._id = (Item._id || 0) + 1;\n\t\tthis._applyMatrix = this._canApplyMatrix && paper.settings.applyMatrix;\n\t\tif (point)\n\t\t\tmatrix.translate(point);\n\t\tmatrix._owner = this;\n\t\tthis._style = new Style(project._currentStyle, this, project);\n\t\tif (!this._project) {\n\t\t\tif (internal || hasProps && props.insert === false) {\n\t\t\t\tthis._setProject(project);\n\t\t\t} else if (hasProps && props.parent) {\n\t\t\t\tthis.setParent(props.parent);\n\t\t\t} else {\n\t\t\t\t(project._activeLayer || new Layer()).addChild(this);\n\t\t\t}\n\t\t}\n\t\tif (hasProps && props !== Item.NO_INSERT)\n\t\t\tthis._set(props, { insert: true, parent: true }, true);\n\t\treturn hasProps;\n\t},\n\n\t_events: new function() {\n\n\t\tvar mouseFlags = {\n\t\t\tmousedown: {\n\t\t\t\tmousedown: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmouseup: {\n\t\t\t\tmouseup: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmousemove: {\n\t\t\t\tmousedrag: 1,\n\t\t\t\tmousemove: 1,\n\t\t\t\tmouseenter: 1,\n\t\t\t\tmouseleave: 1\n\t\t\t}\n\t\t};\n\n\t\tvar mouseEvent = {\n\t\t\tinstall: function(type) {\n\t\t\t\tvar counters = this.getView()._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags) {\n\t\t\t\t\t\tcounters[key] = (counters[key] || 0)\n\t\t\t\t\t\t\t\t+ (mouseFlags[key][type] || 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tuninstall: function(type) {\n\t\t\t\tvar counters = this.getView()._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags)\n\t\t\t\t\t\tcounters[key] -= mouseFlags[key][type] || 0;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn Base.each(['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onClick',\n\t\t\t'onDoubleClick', 'onMouseMove', 'onMouseEnter', 'onMouseLeave'],\n\t\t\tfunction(name) {\n\t\t\t\tthis[name] = mouseEvent;\n\t\t\t}, {\n\t\t\t\tonFrame: {\n\t\t\t\t\tinstall: function() {\n\t\t\t\t\t\tthis._animateItem(true);\n\t\t\t\t\t},\n\t\t\t\t\tuninstall: function() {\n\t\t\t\t\t\tthis._animateItem(false);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tonLoad: {}\n\t\t\t}\n\t\t);\n\t},\n\n\t_animateItem: function(animate) {\n\t\tthis.getView()._animateItem(this, animate);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\tvar props = {},\n\t\t\tthat = this;\n\n\t\tfunction serialize(fields) {\n\t\t\tfor (var key in fields) {\n\t\t\t\tvar value = that[key];\n\t\t\t\tif (!Base.equals(value, key === 'leading'\n\t\t\t\t\t\t? fields.fontSize * 1.2 : fields[key])) {\n\t\t\t\t\tprops[key] = Base.serialize(value, options,\n\t\t\t\t\t\t\tkey !== 'data', dictionary);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tserialize(this._serializeFields);\n\t\tif (!(this instanceof Group))\n\t\t\tserialize(this._style._defaults);\n\t\treturn [ this._class, props ];\n\t},\n\n\t_changed: function(flags) {\n\t\tvar symbol = this._parentSymbol,\n\t\t\tcacheParent = this._parent || symbol,\n\t\t\tproject = this._project;\n\t\tif (flags & 8) {\n\t\t\tthis._bounds = this._position = this._decomposed =\n\t\t\t\t\tthis._globalMatrix = this._currentPath = undefined;\n\t\t}\n\t\tif (cacheParent\n\t\t\t\t&& (flags & 40)) {\n\t\t\tItem._clearBoundsCache(cacheParent);\n\t\t}\n\t\tif (flags & 2) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (project) {\n\t\t\tif (flags & 1) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\tif (project._changes) {\n\t\t\t\tvar entry = project._changesById[this._id];\n\t\t\t\tif (entry) {\n\t\t\t\t\tentry.flags |= flags;\n\t\t\t\t} else {\n\t\t\t\t\tentry = { item: this, flags: flags };\n\t\t\t\t\tproject._changesById[this._id] = entry;\n\t\t\t\t\tproject._changes.push(entry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (symbol)\n\t\t\tsymbol._changed(flags);\n\t},\n\n\tset: function(props) {\n\t\tif (props)\n\t\t\tthis._set(props);\n\t\treturn this;\n\t},\n\n\tgetId: function() {\n\t\treturn this._id;\n\t},\n\n\tgetName: function() {\n\t\treturn this._name;\n\t},\n\n\tsetName: function(name, unique) {\n\n\t\tif (this._name)\n\t\t\tthis._removeNamed();\n\t\tif (name === (+name) + '')\n\t\t\tthrow new Error(\n\t\t\t\t\t'Names consisting only of numbers are not supported.');\n\t\tvar parent = this._parent;\n\t\tif (name && parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\torig = name,\n\t\t\t\ti = 1;\n\t\t\twhile (unique && children[name])\n\t\t\t\tname = orig + ' ' + (i++);\n\t\t\t(namedChildren[name] = namedChildren[name] || []).push(this);\n\t\t\tchildren[name] = this;\n\t\t}\n\t\tthis._name = name || undefined;\n\t\tthis._changed(128);\n\t},\n\n\tgetStyle: function() {\n\t\treturn this._style;\n\t},\n\n\tsetStyle: function(style) {\n\t\tthis.getStyle().set(style);\n\t}\n}, Base.each(['locked', 'visible', 'blendMode', 'opacity', 'guide'],\n\tfunction(name) {\n\t\tvar part = Base.capitalize(name),\n\t\t\tname = '_' + name;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[name];\n\t\t};\n\t\tthis['set' + part] = function(value) {\n\t\t\tif (value != this[name]) {\n\t\t\t\tthis[name] = value;\n\t\t\t\tthis._changed(name === '_locked'\n\t\t\t\t\t\t? 128 : 129);\n\t\t\t}\n\t\t};\n\t},\n{}), {\n\tbeans: true,\n\n\t_locked: false,\n\n\t_visible: true,\n\n\t_blendMode: 'normal',\n\n\t_opacity: 1,\n\n\t_guide: false,\n\n\tisSelected: function() {\n\t\tif (this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (children[i].isSelected())\n\t\t\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetSelected: function(selected, noChildren) {\n\t\tif (!noChildren && this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setSelected(selected);\n\t\t}\n\t\tif ((selected = !!selected) ^ this._selected) {\n\t\t\tthis._selected = selected;\n\t\t\tthis._project._updateSelection(this);\n\t\t\tthis._changed(129);\n\t\t}\n\t},\n\n\t_selected: false,\n\n\tisFullySelected: function() {\n\t\tvar children = this._children;\n\t\tif (children && this._selected) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (!children[i].isFullySelected())\n\t\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setFullySelected(selected);\n\t\t}\n\t\tthis.setSelected(selected, true);\n\t},\n\n\tisClipMask: function() {\n\t\treturn this._clipMask;\n\t},\n\n\tsetClipMask: function(clipMask) {\n\t\tif (this._clipMask != (clipMask = !!clipMask)) {\n\t\t\tthis._clipMask = clipMask;\n\t\t\tif (clipMask) {\n\t\t\t\tthis.setFillColor(null);\n\t\t\t\tthis.setStrokeColor(null);\n\t\t\t}\n\t\t\tthis._changed(129);\n\t\t\tif (this._parent)\n\t\t\t\tthis._parent._changed(1024);\n\t\t}\n\t},\n\n\t_clipMask: false,\n\n\tgetData: function() {\n\t\tif (!this._data)\n\t\t\tthis._data = {};\n\t\treturn this._data;\n\t},\n\n\tsetData: function(data) {\n\t\tthis._data = data;\n\t},\n\n\tgetPosition: function(_dontLink) {\n\t\tvar position = this._position,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\tif (!position) {\n\t\t\tvar pivot = this._pivot;\n\t\t\tposition = this._position = pivot\n\t\t\t\t\t? this._matrix._transformPoint(pivot)\n\t\t\t\t\t: this.getBounds().getCenter(true);\n\t\t}\n\t\treturn new ctor(position.x, position.y, this, 'setPosition');\n\t},\n\n\tsetPosition: function() {\n\t\tthis.translate(Point.read(arguments).subtract(this.getPosition(true)));\n\t},\n\n\tgetPivot: function(_dontLink) {\n\t\tvar pivot = this._pivot;\n\t\tif (pivot) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\tpivot = new ctor(pivot.x, pivot.y, this, 'setPivot');\n\t\t}\n\t\treturn pivot;\n\t},\n\n\tsetPivot: function() {\n\t\tthis._pivot = Point.read(arguments);\n\t\tthis._position = undefined;\n\t},\n\n\t_pivot: null,\n\n\tgetRegistration: '#getPivot',\n\tsetRegistration: '#setPivot'\n}, Base.each(['bounds', 'strokeBounds', 'handleBounds', 'roughBounds',\n\t\t'internalBounds', 'internalRoughBounds'],\n\tfunction(key) {\n\t\tvar getter = 'get' + Base.capitalize(key),\n\t\t\tmatch = key.match(/^internal(.*)$/),\n\t\t\tinternalGetter = match ? 'get' + match[1] : null;\n\t\tthis[getter] = function(_matrix) {\n\t\t\tvar boundsGetter = this._boundsGetter,\n\t\t\t\tname = !internalGetter && (typeof boundsGetter === 'string'\n\t\t\t\t\t\t? boundsGetter : boundsGetter && boundsGetter[getter])\n\t\t\t\t\t\t|| getter,\n\t\t\t\tbounds = this._getCachedBounds(name, _matrix, this,\n\t\t\t\t\t\tinternalGetter);\n\t\t\treturn key === 'bounds'\n\t\t\t\t\t? new LinkedRectangle(bounds.x, bounds.y, bounds.width,\n\t\t\t\t\t\t\tbounds.height, this, 'setBounds')\n\t\t\t\t\t: bounds;\n\t\t};\n\t},\n{\n\tbeans: true,\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar children = this._children;\n\t\tif (!children || children.length == 0)\n\t\t\treturn new Rectangle();\n\t\tvar x1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tif (child._visible && !child.isEmpty()) {\n\t\t\t\tvar rect = child._getCachedBounds(getter,\n\t\t\t\t\t\tmatrix && matrix.chain(child._matrix), cacheItem);\n\t\t\t\tx1 = Math.min(rect.x, x1);\n\t\t\t\ty1 = Math.min(rect.y, y1);\n\t\t\t\tx2 = Math.max(rect.x + rect.width, x2);\n\t\t\t\ty2 = Math.max(rect.y + rect.height, y2);\n\t\t\t}\n\t\t}\n\t\treturn isFinite(x1)\n\t\t\t\t? new Rectangle(x1, y1, x2 - x1, y2 - y1)\n\t\t\t\t: new Rectangle();\n\t},\n\n\tsetBounds: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tbounds = this.getBounds(),\n\t\t\tmatrix = new Matrix(),\n\t\t\tcenter = rect.getCenter();\n\t\tmatrix.translate(center);\n\t\tif (rect.width != bounds.width || rect.height != bounds.height) {\n\t\t\tmatrix.scale(\n\t\t\t\t\tbounds.width != 0 ? rect.width / bounds.width : 1,\n\t\t\t\t\tbounds.height != 0 ? rect.height / bounds.height : 1);\n\t\t}\n\t\tcenter = bounds.getCenter();\n\t\tmatrix.translate(-center.x, -center.y);\n\t\tthis.transform(matrix);\n\t},\n\n\t_getCachedBounds: function(getter, matrix, cacheItem, internalGetter) {\n\t\tmatrix = matrix && matrix.orNullIfIdentity();\n\t\tvar _matrix = internalGetter ? null : this._matrix.orNullIfIdentity(),\n\t\t\tcache = (!matrix || matrix.equals(_matrix)) && getter;\n\t\tvar cacheParent = this._parent || this._parentSymbol;\n\t\tif (cacheParent) {\n\t\t\tvar id = cacheItem._id,\n\t\t\t\tref = cacheParent._boundsCache = cacheParent._boundsCache || {\n\t\t\t\t\tids: {},\n\t\t\t\t\tlist: []\n\t\t\t\t};\n\t\t\tif (!ref.ids[id]) {\n\t\t\t\tref.list.push(cacheItem);\n\t\t\t\tref.ids[id] = cacheItem;\n\t\t\t}\n\t\t}\n\t\tif (cache && this._bounds && this._bounds[cache])\n\t\t\treturn this._bounds[cache].clone();\n\t\tvar bounds = this._getBounds(internalGetter || getter,\n\t\t\t\tmatrix || _matrix, cacheItem);\n\t\tif (cache) {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar cached = this._bounds[cache] = bounds.clone();\n\t\t\tcached._internal = !!internalGetter;\n\t\t}\n\t\treturn bounds;\n\t},\n\n\tstatics: {\n\t\t_clearBoundsCache: function(item) {\n\t\t\tvar cache = item._boundsCache;\n\t\t\tif (cache) {\n\t\t\t\titem._bounds = item._position = item._boundsCache = undefined;\n\t\t\t\tfor (var i = 0, list = cache.list, l = list.length; i < l; i++) {\n\t\t\t\t\tvar other = list[i];\n\t\t\t\t\tif (other !== item) {\n\t\t\t\t\t\tother._bounds = other._position = undefined;\n\t\t\t\t\t\tif (other._boundsCache)\n\t\t\t\t\t\t\tItem._clearBoundsCache(other);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}), {\n\tbeans: true,\n\n\t_decompose: function() {\n\t\treturn this._decomposed = this._matrix.decompose();\n\t},\n\n\tgetRotation: function() {\n\t\tvar decomposed = this._decomposed || this._decompose();\n\t\treturn decomposed && decomposed.rotation;\n\t},\n\n\tsetRotation: function(rotation) {\n\t\tvar current = this.getRotation();\n\t\tif (current != null && rotation != null) {\n\t\t\tvar decomposed = this._decomposed;\n\t\t\tthis.rotate(rotation - current);\n\t\t\tdecomposed.rotation = rotation;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetScaling: function(_dontLink) {\n\t\tvar decomposed = this._decomposed || this._decompose(),\n\t\t\tscaling = decomposed && decomposed.scaling,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\treturn scaling && new ctor(scaling.x, scaling.y, this, 'setScaling');\n\t},\n\n\tsetScaling: function() {\n\t\tvar current = this.getScaling();\n\t\tif (current) {\n\t\t\tvar scaling = Point.read(arguments, 0, { clone: true }),\n\t\t\t\tdecomposed = this._decomposed;\n\t\t\tthis.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t\tdecomposed.scaling = scaling;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetMatrix: function() {\n\t\treturn this._matrix;\n\t},\n\n\tsetMatrix: function(matrix) {\n\t\tthis._matrix.initialize(matrix);\n\t\tif (this._applyMatrix) {\n\t\t\tthis.transform(null, true);\n\t\t} else {\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetGlobalMatrix: function(_dontClone) {\n\t\tvar matrix = this._globalMatrix,\n\t\t\tupdateVersion = this._project._updateVersion;\n\t\tif (matrix && matrix._updateVersion !== updateVersion)\n\t\t\tmatrix = null;\n\t\tif (!matrix) {\n\t\t\tmatrix = this._globalMatrix = this._matrix.clone();\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tmatrix.preConcatenate(parent.getGlobalMatrix(true));\n\t\t\tmatrix._updateVersion = updateVersion;\n\t\t}\n\t\treturn _dontClone ? matrix : matrix.clone();\n\t},\n\n\tgetApplyMatrix: function() {\n\t\treturn this._applyMatrix;\n\t},\n\n\tsetApplyMatrix: function(apply) {\n\t\tif (this._applyMatrix = this._canApplyMatrix && !!apply)\n\t\t\tthis.transform(null, true);\n\t},\n\n\tgetTransformContent: '#getApplyMatrix',\n\tsetTransformContent: '#setApplyMatrix',\n}, {\n\tgetProject: function() {\n\t\treturn this._project;\n\t},\n\n\t_setProject: function(project, installEvents) {\n\t\tif (this._project !== project) {\n\t\t\tif (this._project)\n\t\t\t\tthis._installEvents(false);\n\t\t\tthis._project = project;\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\t\tchildren[i]._setProject(project);\n\t\t\tinstallEvents = true;\n\t\t}\n\t\tif (installEvents)\n\t\t\tthis._installEvents(true);\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\t_installEvents: function _installEvents(install) {\n\t\t_installEvents.base.call(this, install);\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\tchildren[i]._installEvents(install);\n\t},\n\n\tgetLayer: function() {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent instanceof Layer)\n\t\t\t\treturn parent;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetParent: function() {\n\t\treturn this._parent;\n\t},\n\n\tsetParent: function(item) {\n\t\treturn item.addChild(this);\n\t},\n\n\tgetChildren: function() {\n\t\treturn this._children;\n\t},\n\n\tsetChildren: function(items) {\n\t\tthis.removeChildren();\n\t\tthis.addChildren(items);\n\t},\n\n\tgetFirstChild: function() {\n\t\treturn this._children && this._children[0] || null;\n\t},\n\n\tgetLastChild: function() {\n\t\treturn this._children && this._children[this._children.length - 1]\n\t\t\t\t|| null;\n\t},\n\n\tgetNextSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index - 1] || null;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tequals: function(item) {\n\t\treturn item === this || item && this._class === item._class\n\t\t\t\t&& this._style.equals(item._style)\n\t\t\t\t&& this._matrix.equals(item._matrix)\n\t\t\t\t&& this._locked === item._locked\n\t\t\t\t&& this._visible === item._visible\n\t\t\t\t&& this._blendMode === item._blendMode\n\t\t\t\t&& this._opacity === item._opacity\n\t\t\t\t&& this._clipMask === item._clipMask\n\t\t\t\t&& this._guide === item._guide\n\t\t\t\t&& this._equals(item)\n\t\t\t\t|| false;\n\t},\n\n\t_equals: function(item) {\n\t\treturn Base.equals(this._children, item._children);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new this.constructor(Item.NO_INSERT), insert);\n\t},\n\n\t_clone: function(copy, insert) {\n\t\tcopy.setStyle(this._style);\n\t\tif (this._children) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tcopy.addChild(this._children[i].clone(false), true);\n\t\t}\n\t\tif (insert || insert === undefined)\n\t\t\tcopy.insertAbove(this);\n\t\tvar keys = ['_locked', '_visible', '_blendMode', '_opacity',\n\t\t\t\t'_clipMask', '_guide', '_applyMatrix'];\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tif (this.hasOwnProperty(key))\n\t\t\t\tcopy[key] = this[key];\n\t\t}\n\t\tcopy._matrix.initialize(this._matrix);\n\t\tcopy._data = this._data ? Base.clone(this._data) : null;\n\t\tcopy.setSelected(this._selected);\n\t\tif (this._name)\n\t\t\tcopy.setName(this._name, true);\n\t\treturn copy;\n\t},\n\n\tcopyTo: function(itemOrProject) {\n\t\treturn itemOrProject.addChild(this.clone(false));\n\t},\n\n\trasterize: function(resolution) {\n\t\tvar bounds = this.getStrokeBounds(),\n\t\t\tscale = (resolution || this.getView().getResolution()) / 72,\n\t\t\ttopLeft = bounds.getTopLeft().floor(),\n\t\t\tbottomRight = bounds.getBottomRight().ceil(),\n\t\t\tsize = new Size(bottomRight.subtract(topLeft)),\n\t\t\tcanvas = CanvasProvider.getCanvas(size.multiply(scale)),\n\t\t\tctx = canvas.getContext('2d'),\n\t\t\tmatrix = new Matrix().scale(scale).translate(topLeft.negate());\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tthis.draw(ctx, new Base({ matrices: [matrix] }));\n\t\tctx.restore();\n\t\tvar raster = new Raster(Item.NO_INSERT);\n\t\traster.setCanvas(canvas);\n\t\traster.transform(new Matrix().translate(topLeft.add(size.divide(2)))\n\t\t\t\t.scale(1 / scale));\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\tcontains: function() {\n\t\treturn !!this._contains(\n\t\t\t\tthis._matrix._inverseTransform(Point.read(arguments)));\n\t},\n\n\t_contains: function(point) {\n\t\tif (this._children) {\n\t\t\tfor (var i = this._children.length - 1; i >= 0; i--) {\n\t\t\t\tif (this._children[i].contains(point))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn point.isInside(this.getInternalBounds());\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this.getBounds());\n\t},\n\n\t_asPathItem: function() {\n\t\treturn new Path.Rectangle({\n\t\t\trectangle: this.getInternalBounds(),\n\t\t\tmatrix: this._matrix,\n\t\t\tinsert: false,\n\t\t});\n\t},\n\n\tintersects: function(item, _matrix) {\n\t\tif (!(item instanceof Item))\n\t\t\treturn false;\n\t\treturn this._asPathItem().getIntersections(item._asPathItem(),\n\t\t\t\t_matrix || item._matrix).length > 0;\n\t},\n\n\thitTest: function() {\n\t\treturn this._hitTest(\n\t\t\t\tPoint.read(arguments),\n\t\t\t\tHitResult.getOptions(Base.read(arguments)));\n\t},\n\n\t_hitTest: function(point, options) {\n\t\tif (this._locked || !this._visible || this._guide && !options.guides\n\t\t\t\t|| this.isEmpty())\n\t\t\treturn null;\n\n\t\tvar matrix = this._matrix,\n\t\t\tparentTotalMatrix = options._totalMatrix,\n\t\t\tview = this.getView(),\n\t\t\ttotalMatrix = options._totalMatrix = parentTotalMatrix\n\t\t\t\t\t? parentTotalMatrix.chain(matrix)\n\t\t\t\t\t: this.getGlobalMatrix().preConcatenate(view._matrix),\n\t\t\ttolerancePadding = options._tolerancePadding = new Size(\n\t\t\t\t\t\tPath._getPenPadding(1, totalMatrix.inverted())\n\t\t\t\t\t).multiply(\n\t\t\t\t\t\tMath.max(options.tolerance, 0.000001)\n\t\t\t\t\t);\n\t\tpoint = matrix._inverseTransform(point);\n\n\t\tif (!this._children && !this.getInternalRoughBounds()\n\t\t\t\t.expand(tolerancePadding.multiply(2))._containsPoint(point))\n\t\t\treturn null;\n\t\tvar checkSelf = !(options.guides && !this._guide\n\t\t\t\t|| options.selected && !this._selected\n\t\t\t\t|| options.type && options.type !== Base.hyphenate(this._class)\n\t\t\t\t|| options.class && !(this instanceof options.class)),\n\t\t\tthat = this,\n\t\t\tres;\n\n\t\tfunction checkBounds(type, part) {\n\t\t\tvar pt = bounds['get' + part]();\n\t\t\tif (point.subtract(pt).divide(tolerancePadding).length <= 1)\n\t\t\t\treturn new HitResult(type, that,\n\t\t\t\t\t\t{ name: Base.hyphenate(part), point: pt });\n\t\t}\n\n\t\tif (checkSelf && (options.center || options.bounds) && this._parent) {\n\t\t\tvar bounds = this.getInternalBounds();\n\t\t\tif (options.center)\n\t\t\t\tres = checkBounds('center', 'Center');\n\t\t\tif (!res && options.bounds) {\n\t\t\t\tvar points = [\n\t\t\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'\n\t\t\t\t];\n\t\t\t\tfor (var i = 0; i < 8 && !res; i++)\n\t\t\t\t\tres = checkBounds('bounds', points[i]);\n\t\t\t}\n\t\t}\n\n\t\tvar children = !res && this._children;\n\t\tif (children) {\n\t\t\tvar opts = this._getChildHitTestOptions(options);\n\t\t\tfor (var i = children.length - 1; i >= 0 && !res; i--)\n\t\t\t\tres = children[i]._hitTest(point, opts);\n\t\t}\n\t\tif (!res && checkSelf)\n\t\t\tres = this._hitTestSelf(point, options);\n\t\tif (res && res.point)\n\t\t\tres.point = matrix.transform(res.point);\n\t\toptions._totalMatrix = parentTotalMatrix;\n\t\treturn res;\n\t},\n\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tif (options.fill && this.hasFill() && this._contains(point))\n\t\t\treturn new HitResult('fill', this);\n\t},\n\n\tmatches: function(name, compare) {\n\t\tfunction matchObject(obj1, obj2) {\n\t\t\tfor (var i in obj1) {\n\t\t\t\tif (obj1.hasOwnProperty(i)) {\n\t\t\t\t\tvar val1 = obj1[i],\n\t\t\t\t\t\tval2 = obj2[i];\n\t\t\t\t\tif (Base.isPlainObject(val1) && Base.isPlainObject(val2)) {\n\t\t\t\t\t\tif (!matchObject(val1, val2))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!Base.equals(val1, val2)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tif (typeof name === 'object') {\n\t\t\tfor (var key in name) {\n\t\t\t\tif (name.hasOwnProperty(key) && !this.matches(key, name[key]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tvar value = /^(empty|editable)$/.test(name)\n\t\t\t\t\t? this['is' + Base.capitalize(name)]()\n\t\t\t\t\t: name === 'type'\n\t\t\t\t\t\t? Base.hyphenate(this._class)\n\t\t\t\t\t\t: this[name];\n\t\t\tif (/^(constructor|class)$/.test(name)) {\n\t\t\t\tif (!(this instanceof compare))\n\t\t\t\t\treturn false;\n\t\t\t} else if (compare instanceof RegExp) {\n\t\t\t\tif (!compare.test(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (typeof compare === 'function') {\n\t\t\t\tif (!compare(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (Base.isPlainObject(compare)) {\n\t\t\t\tif (!matchObject(compare, value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (!Base.equals(value, compare)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix, null, true)\n\t\t\t\t[0] || null;\n\t},\n\n\tstatics: {\n\t\t_getItems: function _getItems(children, match, matrix, param,\n\t\t\t\tfirstOnly) {\n\t\t\tif (!param) {\n\t\t\t\tvar overlapping = match.overlapping,\n\t\t\t\t\tinside = match.inside,\n\t\t\t\t\tbounds = overlapping || inside,\n\t\t\t\t\trect =\tbounds && Rectangle.read([bounds]);\n\t\t\t\tparam = {\n\t\t\t\t\titems: [],\n\t\t\t\t\tinside: rect,\n\t\t\t\t\toverlapping: overlapping && new Path.Rectangle({\n\t\t\t\t\t\trectangle: rect,\n\t\t\t\t\t\tinsert: false\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tif (bounds)\n\t\t\t\t\tmatch = Base.set({}, match,\n\t\t\t\t\t\t\t{ inside: true, overlapping: true });\n\t\t\t}\n\t\t\tvar items = param.items,\n\t\t\t\tinside = param.inside,\n\t\t\t\toverlapping = param.overlapping;\n\t\t\tmatrix = inside && (matrix || new Matrix());\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\t\tvar child = children[i],\n\t\t\t\t\tchildMatrix = matrix && matrix.chain(child._matrix),\n\t\t\t\t\tadd = true;\n\t\t\t\tif (inside) {\n\t\t\t\t\tvar bounds = child.getBounds(childMatrix);\n\t\t\t\t\tif (!inside.intersects(bounds))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (!(inside && inside.contains(bounds)) && !(overlapping\n\t\t\t\t\t\t\t&& overlapping.intersects(child, childMatrix)))\n\t\t\t\t\t\tadd = false;\n\t\t\t\t}\n\t\t\t\tif (add && child.matches(match)) {\n\t\t\t\t\titems.push(child);\n\t\t\t\t\tif (firstOnly)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t_getItems(child._children, match,\n\t\t\t\t\t\tchildMatrix, param,\n\t\t\t\t\t\tfirstOnly);\n\t\t\t\tif (firstOnly && items.length > 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n}, {\n\n\timportJSON: function(json) {\n\t\tvar res = Base.importJSON(json, this);\n\t\treturn res !== this\n\t\t\t\t? this.addChild(res)\n\t\t\t\t: res;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tvar res = item ? this.insertChildren(index, [item], _preserve) : null;\n\t\treturn res && res[0];\n\t},\n\n\taddChildren: function(items, _preserve) {\n\t\treturn this.insertChildren(this._children.length, items, _preserve);\n\t},\n\n\tinsertChildren: function(index, items, _preserve, _proto) {\n\t\tvar children = this._children;\n\t\tif (children && items && items.length > 0) {\n\t\t\titems = Array.prototype.slice.apply(items);\n\t\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (_proto && !(item instanceof _proto)) {\n\t\t\t\t\titems.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tvar shift = item._parent === this && item._index < index;\n\t\t\t\t\tif (item._remove(false, true) && shift)\n\t\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tBase.splice(children, items, index, 0);\n\t\t\tvar project = this._project,\n\t\t\t\tnotifySelf = project && project._changes;\n\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\tvar item = items[i];\n\t\t\t\titem._parent = this;\n\t\t\t\titem._setProject(this._project, true);\n\t\t\t\tif (item._name)\n\t\t\t\t\titem.setName(item._name);\n\t\t\t\tif (notifySelf)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tthis._changed(11);\n\t\t} else {\n\t\t\titems = null;\n\t\t}\n\t\treturn items;\n\t},\n\n\t_insertSibling: function(index, item, _preserve) {\n\t\treturn this._parent\n\t\t\t\t? this._parent.insertChild(index, item, _preserve)\n\t\t\t\t: null;\n\t},\n\n\tinsertAbove: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index + 1, this, _preserve);\n\t},\n\n\tinsertBelow: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index, this, _preserve);\n\t},\n\n\tsendToBack: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.insertChild(0, this);\n\t},\n\n\tbringToFront: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.addChild(this);\n\t},\n\n\tappendTop: '#addChild',\n\n\tappendBottom: function(item) {\n\t\treturn this.insertChild(0, item);\n\t},\n\n\tmoveAbove: '#insertAbove',\n\n\tmoveBelow: '#insertBelow',\n\n\treduce: function() {\n\t\tif (this._children && this._children.length === 1) {\n\t\t\tvar child = this._children[0].reduce();\n\t\t\tchild.insertAbove(this);\n\t\t\tchild.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn child;\n\t\t}\n\t\treturn this;\n\t},\n\n\t_removeNamed: function() {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\tname = this._name,\n\t\t\t\tnamedArray = namedChildren[name],\n\t\t\t\tindex = namedArray ? namedArray.indexOf(this) : -1;\n\t\t\tif (index !== -1) {\n\t\t\t\tif (children[name] == this)\n\t\t\t\t\tdelete children[name];\n\t\t\t\tnamedArray.splice(index, 1);\n\t\t\t\tif (namedArray.length) {\n\t\t\t\t\tchildren[name] = namedArray[namedArray.length - 1];\n\t\t\t\t} else {\n\t\t\t\t\tdelete namedChildren[name];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_remove: function(notifySelf, notifyParent) {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tif (this._name)\n\t\t\t\tthis._removeNamed();\n\t\t\tif (this._index != null)\n\t\t\t\tBase.splice(parent._children, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf) {\n\t\t\t\tvar project = this._project;\n\t\t\t\tif (project && project._changes)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tif (notifyParent)\n\t\t\t\tparent._changed(11);\n\t\t\tthis._parent = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tremove: function() {\n\t\treturn this._remove(true, true);\n\t},\n\n\treplaceWith: function(item) {\n\t\tvar ok = item && item.insertBelow(this);\n\t\tif (ok)\n\t\t\tthis.remove();\n\t\treturn ok;\n\t},\n\n\tremoveChildren: function(from, to) {\n\t\tif (!this._children)\n\t\t\treturn null;\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._children.length);\n\t\tvar removed = Base.splice(this._children, null, from, to - from);\n\t\tfor (var i = removed.length - 1; i >= 0; i--) {\n\t\t\tremoved[i]._remove(true, false);\n\t\t}\n\t\tif (removed.length > 0)\n\t\t\tthis._changed(11);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeChildren',\n\n\treverseChildren: function() {\n\t\tif (this._children) {\n\t\t\tthis._children.reverse();\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tthis._children[i]._index = i;\n\t\t\tthis._changed(11);\n\t\t}\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._children || this._children.length === 0;\n\t},\n\n\tisEditable: function() {\n\t\tvar item = this;\n\t\twhile (item) {\n\t\t\tif (!item._visible || item._locked)\n\t\t\t\treturn false;\n\t\t\titem = item._parent;\n\t\t}\n\t\treturn true;\n\t},\n\n\thasFill: function() {\n\t\treturn this.getStyle().hasFill();\n\t},\n\n\thasStroke: function() {\n\t\treturn this.getStyle().hasStroke();\n\t},\n\n\thasShadow: function() {\n\t\treturn this.getStyle().hasShadow();\n\t},\n\n\t_getOrder: function(item) {\n\t\tfunction getList(item) {\n\t\t\tvar list = [];\n\t\t\tdo {\n\t\t\t\tlist.unshift(item);\n\t\t\t} while (item = item._parent);\n\t\t\treturn list;\n\t\t}\n\t\tvar list1 = getList(this),\n\t\t\tlist2 = getList(item);\n\t\tfor (var i = 0, l = Math.min(list1.length, list2.length); i < l; i++) {\n\t\t\tif (list1[i] != list2[i]) {\n\t\t\t\treturn list1[i]._index < list2[i]._index ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t},\n\n\thasChildren: function() {\n\t\treturn this._children && this._children.length > 0;\n\t},\n\n\tisInserted: function() {\n\t\treturn this._parent ? this._parent.isInserted() : false;\n\t},\n\n\tisAbove: function(item) {\n\t\treturn this._getOrder(item) === -1;\n\t},\n\n\tisBelow: function(item) {\n\t\treturn this._getOrder(item) === 1;\n\t},\n\n\tisParent: function(item) {\n\t\treturn this._parent === item;\n\t},\n\n\tisChild: function(item) {\n\t\treturn item && item._parent === this;\n\t},\n\n\tisDescendant: function(item) {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent == item)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisAncestor: function(item) {\n\t\treturn item ? item.isDescendant(this) : false;\n\t},\n\n\tisGroupedWith: function(item) {\n\t\tvar parent = this._parent;\n\t\twhile (parent) {\n\t\t\tif (parent._parent\n\t\t\t\t&& /^(Group|Layer|CompoundPath)$/.test(parent._class)\n\t\t\t\t&& item.isDescendant(parent))\n\t\t\t\t\treturn true;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar mx = new Matrix();\n\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t},\n\n\trotate: function(angle ) {\n\t\treturn this.transform(new Matrix().rotate(angle,\n\t\t\t\tPoint.read(arguments, 1, { readNull: true })\n\t\t\t\t\t|| this.getPosition(true)));\n\t}\n}, Base.each(['scale', 'shear', 'skew'], function(name) {\n\tthis[name] = function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\treturn this.transform(new Matrix()[name](point,\n\t\t\t\tcenter || this.getPosition(true)));\n\t};\n}, {\n\n}), {\n\ttransform: function(matrix, _applyMatrix, _applyRecursively,\n\t\t\t_setApplyMatrix) {\n\t\tif (matrix && matrix.isIdentity())\n\t\t\tmatrix = null;\n\t\tvar _matrix = this._matrix,\n\t\t\tapplyMatrix = (_applyMatrix || this._applyMatrix)\n\t\t\t\t\t&& ((!_matrix.isIdentity() || matrix)\n\t\t\t\t\t\t|| _applyMatrix && _applyRecursively && this._children);\n\t\tif (!matrix && !applyMatrix)\n\t\t\treturn this;\n\t\tif (matrix)\n\t\t\t_matrix.preConcatenate(matrix);\n\t\tif (applyMatrix = applyMatrix && this._transformContent(_matrix,\n\t\t\t\t\t_applyRecursively, _setApplyMatrix)) {\n\t\t\tvar pivot = this._pivot,\n\t\t\t\tstyle = this._style,\n\t\t\t\tfillColor = style.getFillColor(true),\n\t\t\t\tstrokeColor = style.getStrokeColor(true);\n\t\t\tif (pivot)\n\t\t\t\t_matrix._transformPoint(pivot, pivot, true);\n\t\t\tif (fillColor)\n\t\t\t\tfillColor.transform(_matrix);\n\t\t\tif (strokeColor)\n\t\t\t\tstrokeColor.transform(_matrix);\n\t\t\t_matrix.reset(true);\n\t\t\tif (_setApplyMatrix && this._canApplyMatrix)\n\t\t\t\tthis._applyMatrix = true;\n\t\t}\n\t\tvar bounds = this._bounds,\n\t\t\tposition = this._position;\n\t\tthis._changed(9);\n\t\tvar decomp = bounds && matrix && matrix.decompose();\n\t\tif (decomp && !decomp.shearing && decomp.rotation % 90 === 0) {\n\t\t\tfor (var key in bounds) {\n\t\t\t\tvar rect = bounds[key];\n\t\t\t\tif (applyMatrix || !rect._internal)\n\t\t\t\t\tmatrix._transformBounds(rect, rect);\n\t\t\t}\n\t\t\tvar getter = this._boundsGetter,\n\t\t\t\trect = bounds[getter && getter.getBounds || getter || 'getBounds'];\n\t\t\tif (rect)\n\t\t\t\tthis._position = rect.getCenter(true);\n\t\t\tthis._bounds = bounds;\n\t\t} else if (matrix && position) {\n\t\t\tthis._position = matrix._transformPoint(position, position);\n\t\t}\n\t\treturn this;\n\t},\n\n\t_transformContent: function(matrix, applyRecursively, setApplyMatrix) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].transform(matrix, true, applyRecursively,\n\t\t\t\t\t\tsetApplyMatrix);\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tglobalToLocal: function() {\n\t\treturn this.getGlobalMatrix(true)._inverseTransform(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tlocalToGlobal: function() {\n\t\treturn this.getGlobalMatrix(true)._transformPoint(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tparentToLocal: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t},\n\n\tlocalToParent: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tfitBounds: function(rectangle, fill) {\n\t\trectangle = Rectangle.read(arguments);\n\t\tvar bounds = this.getBounds(),\n\t\t\titemRatio = bounds.height / bounds.width,\n\t\t\trectRatio = rectangle.height / rectangle.width,\n\t\t\tscale = (fill ? itemRatio > rectRatio : itemRatio < rectRatio)\n\t\t\t\t\t? rectangle.width / bounds.width\n\t\t\t\t\t: rectangle.height / bounds.height,\n\t\t\tnewBounds = new Rectangle(new Point(),\n\t\t\t\t\tnew Size(bounds.width * scale, bounds.height * scale));\n\t\tnewBounds.setCenter(rectangle.getCenter());\n\t\tthis.setBounds(newBounds);\n\t},\n\n\t_setStyles: function(ctx) {\n\t\tvar style = this._style,\n\t\t\tfillColor = style.getFillColor(),\n\t\t\tstrokeColor = style.getStrokeColor(),\n\t\t\tshadowColor = style.getShadowColor();\n\t\tif (fillColor)\n\t\t\tctx.fillStyle = fillColor.toCanvasStyle(ctx);\n\t\tif (strokeColor) {\n\t\t\tvar strokeWidth = style.getStrokeWidth();\n\t\t\tif (strokeWidth > 0) {\n\t\t\t\tctx.strokeStyle = strokeColor.toCanvasStyle(ctx);\n\t\t\t\tctx.lineWidth = strokeWidth;\n\t\t\t\tvar strokeJoin = style.getStrokeJoin(),\n\t\t\t\t\tstrokeCap = style.getStrokeCap(),\n\t\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\t\tif (strokeJoin)\n\t\t\t\t\tctx.lineJoin = strokeJoin;\n\t\t\t\tif (strokeCap)\n\t\t\t\t\tctx.lineCap = strokeCap;\n\t\t\t\tif (miterLimit)\n\t\t\t\t\tctx.miterLimit = miterLimit;\n\t\t\t\tif (paper.support.nativeDash) {\n\t\t\t\t\tvar dashArray = style.getDashArray(),\n\t\t\t\t\t\tdashOffset = style.getDashOffset();\n\t\t\t\t\tif (dashArray && dashArray.length) {\n\t\t\t\t\t\tif ('setLineDash' in ctx) {\n\t\t\t\t\t\t\tctx.setLineDash(dashArray);\n\t\t\t\t\t\t\tctx.lineDashOffset = dashOffset;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.mozDash = dashArray;\n\t\t\t\t\t\t\tctx.mozDashOffset = dashOffset;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (shadowColor) {\n\t\t\tvar shadowBlur = style.getShadowBlur();\n\t\t\tif (shadowBlur > 0) {\n\t\t\t\tctx.shadowColor = shadowColor.toCanvasStyle(ctx);\n\t\t\t\tctx.shadowBlur = shadowBlur;\n\t\t\t\tvar offset = this.getShadowOffset();\n\t\t\t\tctx.shadowOffsetX = offset.x;\n\t\t\t\tctx.shadowOffsetY = offset.y;\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function(ctx, param, parentStrokeMatrix) {\n\t\tvar updateVersion = this._updateVersion = this._project._updateVersion;\n\t\tif (!this._visible || this._opacity === 0)\n\t\t\treturn;\n\t\tvar matrices = param.matrices,\n\t\t\tviewMatrix = param.viewMatrix,\n\t\t\tmatrix = this._matrix,\n\t\t\tglobalMatrix = matrices[matrices.length - 1].chain(matrix);\n\t\tif (!globalMatrix.isInvertible())\n\t\t\treturn;\n\n\t\tfunction getViewMatrix(matrix) {\n\t\t\treturn viewMatrix ? viewMatrix.chain(matrix) : matrix;\n\t\t}\n\n\t\tmatrices.push(globalMatrix);\n\t\tif (param.updateMatrix) {\n\t\t\tglobalMatrix._updateVersion = updateVersion;\n\t\t\tthis._globalMatrix = globalMatrix;\n\t\t}\n\n\t\tvar blendMode = this._blendMode,\n\t\t\topacity = this._opacity,\n\t\t\tnormalBlend = blendMode === 'normal',\n\t\t\tnativeBlend = BlendMode.nativeModes[blendMode],\n\t\t\tdirect = normalBlend && opacity === 1\n\t\t\t\t\t|| param.dontStart\n\t\t\t\t\t|| param.clip\n\t\t\t\t\t|| (nativeBlend || normalBlend && opacity < 1)\n\t\t\t\t\t\t&& this._canComposite(),\n\t\t\tpixelRatio = param.pixelRatio,\n\t\t\tmainCtx, itemOffset, prevOffset;\n\t\tif (!direct) {\n\t\t\tvar bounds = this.getStrokeBounds(getViewMatrix(globalMatrix));\n\t\t\tif (!bounds.width || !bounds.height)\n\t\t\t\treturn;\n\t\t\tprevOffset = param.offset;\n\t\t\titemOffset = param.offset = bounds.getTopLeft().floor();\n\t\t\tmainCtx = ctx;\n\t\t\tctx = CanvasProvider.getContext(bounds.getSize().ceil().add(1)\n\t\t\t\t\t.multiply(pixelRatio));\n\t\t\tif (pixelRatio !== 1)\n\t\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t}\n\t\tctx.save();\n\t\tvar strokeMatrix = parentStrokeMatrix\n\t\t\t\t? parentStrokeMatrix.chain(matrix)\n\t\t\t\t: !this.getStrokeScaling(true) && getViewMatrix(globalMatrix),\n\t\t\tclip = !direct && param.clipItem,\n\t\t\ttransform = !strokeMatrix || clip;\n\t\tif (direct) {\n\t\t\tctx.globalAlpha = opacity;\n\t\t\tif (nativeBlend)\n\t\t\t\tctx.globalCompositeOperation = blendMode;\n\t\t} else if (transform) {\n\t\t\tctx.translate(-itemOffset.x, -itemOffset.y);\n\t\t}\n\t\tif (transform)\n\t\t\t(direct ? matrix : getViewMatrix(globalMatrix)).applyToContext(ctx);\n\t\tif (clip)\n\t\t\tparam.clipItem.draw(ctx, param.extend({ clip: true }));\n\t\tif (strokeMatrix) {\n\t\t\tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\t\t\tvar offset = param.offset;\n\t\t\tif (offset)\n\t\t\t\tctx.translate(-offset.x, -offset.y);\n\t\t}\n\t\tthis._draw(ctx, param, strokeMatrix);\n\t\tctx.restore();\n\t\tmatrices.pop();\n\t\tif (param.clip && !param.dontFinish)\n\t\t\tctx.clip();\n\t\tif (!direct) {\n\t\t\tBlendMode.process(blendMode, ctx, mainCtx, opacity,\n\t\t\t\t\titemOffset.subtract(prevOffset).multiply(pixelRatio));\n\t\t\tCanvasProvider.release(ctx);\n\t\t\tparam.offset = prevOffset;\n\t\t}\n\t},\n\n\t_isUpdated: function(updateVersion) {\n\t\tvar parent = this._parent;\n\t\tif (parent instanceof CompoundPath)\n\t\t\treturn parent._isUpdated(updateVersion);\n\t\tvar updated = this._updateVersion === updateVersion;\n\t\tif (!updated && parent && parent._visible\n\t\t\t\t&& parent._isUpdated(updateVersion)) {\n\t\t\tthis._updateVersion = updateVersion;\n\t\t\tupdated = true;\n\t\t}\n\t\treturn updated;\n\t},\n\n\t_drawSelection: function(ctx, matrix, size, selectedItems, updateVersion) {\n\t\tif ((this._drawSelected || this._boundsSelected)\n\t\t\t\t&& this._isUpdated(updateVersion)) {\n\t\t\tvar color = this.getSelectedColor(true)\n\t\t\t\t\t|| this.getLayer().getSelectedColor(true),\n\t\t\t\tmx = matrix.chain(this.getGlobalMatrix(true));\n\t\t\tctx.strokeStyle = ctx.fillStyle = color\n\t\t\t\t\t? color.toCanvasStyle(ctx) : '#009dec';\n\t\t\tif (this._drawSelected)\n\t\t\t\tthis._drawSelected(ctx, mx, selectedItems);\n\t\t\tif (this._boundsSelected) {\n\t\t\t\tvar half = size / 2;\n\t\t\t\t\tcoords = mx._transformCorners(this.getInternalBounds());\n\t\t\t\tctx.beginPath();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx[i === 0 ? 'moveTo' : 'lineTo'](coords[i], coords[++i]);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx.fillRect(coords[i] - half, coords[++i] - half,\n\t\t\t\t\t\t\tsize, size);\n\t\t\t}\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn false;\n\t}\n}, Base.each(['down', 'drag', 'up', 'move'], function(name) {\n\tthis['removeOn' + Base.capitalize(name)] = function() {\n\t\tvar hash = {};\n\t\thash[name] = true;\n\t\treturn this.removeOn(hash);\n\t};\n}, {\n\n\tremoveOn: function(obj) {\n\t\tfor (var name in obj) {\n\t\t\tif (obj[name]) {\n\t\t\t\tvar key = 'mouse' + name,\n\t\t\t\t\tproject = this._project,\n\t\t\t\t\tsets = project._removeSets = project._removeSets || {};\n\t\t\t\tsets[key] = sets[key] || {};\n\t\t\t\tsets[key][this._id] = this;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n}));\n\nvar Group = Item.extend({\n\t_class: 'Group',\n\t_selectChildren: true,\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function Group(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg))\n\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 1026) {\n\t\t\tthis._clipItem = undefined;\n\t\t}\n\t},\n\n\t_getClipItem: function() {\n\t\tvar clipItem = this._clipItem;\n\t\tif (clipItem === undefined) {\n\t\t\tclipItem = null;\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar child = this._children[i];\n\t\t\t\tif (child._clipMask) {\n\t\t\t\t\tclipItem = child;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._clipItem = clipItem;\n\t\t}\n\t\treturn clipItem;\n\t},\n\n\tisClipped: function() {\n\t\treturn !!this._getClipItem();\n\t},\n\n\tsetClipped: function(clipped) {\n\t\tvar child = this.getFirstChild();\n\t\tif (child)\n\t\t\tchild.setClipMask(clipped);\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tvar clip = param.clip,\n\t\t\tclipItem = !clip && this._getClipItem(),\n\t\t\tdraw = true;\n\t\tparam = param.extend({ clipItem: clipItem, clip: false });\n\t\tif (clip) {\n\t\t\tif (this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t\tdraw = false;\n\t\t\t} else {\n\t\t\t\tctx.beginPath();\n\t\t\t\tparam.dontStart = param.dontFinish = true;\n\t\t\t}\n\t\t} else if (clipItem) {\n\t\t\tclipItem.draw(ctx, param.extend({ clip: true }));\n\t\t}\n\t\tif (draw) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar item = this._children[i];\n\t\t\t\tif (item !== clipItem)\n\t\t\t\t\titem.draw(ctx, param);\n\t\t\t}\n\t\t}\n\t\tif (clip) {\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\t}\n});\n\nvar Layer = Group.extend({\n\t_class: 'Layer',\n\n\tinitialize: function Layer(arg) {\n\t\tvar props = Base.isPlainObject(arg)\n\t\t\t\t? new Base(arg)\n\t\t\t\t: { children: Array.isArray(arg) ? arg : arguments },\n\t\t\tinsert = props.insert;\n\t\tprops.insert = false;\n\t\tGroup.call(this, props);\n\t\tif (insert || insert === undefined) {\n\t\t\tthis._project.addChild(this);\n\t\t\tthis.activate();\n\t\t}\n\t},\n\n\t_remove: function _remove(notifySelf, notifyParent) {\n\t\tif (this._parent)\n\t\t\treturn _remove.base.call(this, notifySelf, notifyParent);\n\t\tif (this._index != null) {\n\t\t\tvar project = this._project;\n\t\t\tif (project._activeLayer === this)\n\t\t\t\tproject._activeLayer = this.getNextSibling()\n\t\t\t\t\t\t|| this.getPreviousSibling();\n\t\t\tBase.splice(project.layers, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf && project._changes)\n\t\t\t\tthis._changed(5);\n\t\t\tif (notifyParent) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetNextSibling: function getNextSibling() {\n\t\treturn this._parent ? getNextSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function getPreviousSibling() {\n\t\treturn this._parent ? getPreviousSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index - 1] || null;\n\t},\n\n\tisInserted: function isInserted() {\n\t\treturn this._parent ? isInserted.base.call(this) : this._index != null;\n\t},\n\n\tactivate: function() {\n\t\tthis._project._activeLayer = this;\n\t},\n\n\t_insertSibling: function _insertSibling(index, item, _preserve) {\n\t\treturn !this._parent\n\t\t\t\t? this._project.insertChild(index, item, _preserve)\n\t\t\t\t: _insertSibling.base.call(this, index, item, _preserve);\n\t}\n});\n\nvar Shape = Item.extend({\n\t_class: 'Shape',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\ttype: null,\n\t\tsize: null,\n\t\tradius: null\n\t},\n\n\tinitialize: function Shape(props) {\n\t\tthis._initialize(props);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._type === item._type\n\t\t\t&& this._size.equals(item._size)\n\t\t\t&& Base.equals(this._radius, item._radius);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Shape(Item.NO_INSERT);\n\t\tcopy.setType(this._type);\n\t\tcopy.setSize(this._size);\n\t\tcopy.setRadius(this._radius);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetType: function() {\n\t\treturn this._type;\n\t},\n\n\tsetType: function(type) {\n\t\tthis._type = type;\n\t},\n\n\tgetShape: '#getType',\n\tsetShape: '#setType',\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!this._size) {\n\t\t\tthis._size = size.clone();\n\t\t} else if (!this._size.equals(size)) {\n\t\t\tvar type = this._type,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tif (type === 'rectangle') {\n\t\t\t\tvar radius = Size.min(this._radius, size.divide(2));\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t} else if (type === 'circle') {\n\t\t\t\twidth = height = (width + height) / 2;\n\t\t\t\tthis._radius = width / 2;\n\t\t\t} else if (type === 'ellipse') {\n\t\t\t\tthis._radius.set(width / 2, height / 2);\n\t\t\t}\n\t\t\tthis._size.set(width, height);\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetRadius: function() {\n\t\tvar rad = this._radius;\n\t\treturn this._type === 'circle'\n\t\t\t\t? rad\n\t\t\t\t: new LinkedSize(rad.width, rad.height, this, 'setRadius');\n\t},\n\n\tsetRadius: function(radius) {\n\t\tvar type = this._type;\n\t\tif (type === 'circle') {\n\t\t\tif (radius === this._radius)\n\t\t\t\treturn;\n\t\t\tvar size = radius * 2;\n\t\t\tthis._radius = radius;\n\t\t\tthis._size.set(size, size);\n\t\t} else {\n\t\t\tradius = Size.read(arguments);\n\t\t\tif (!this._radius) {\n\t\t\t\tthis._radius = radius.clone();\n\t\t\t} else {\n\t\t\t\tif (this._radius.equals(radius))\n\t\t\t\t\treturn;\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar size = Size.max(this._size, radius.multiply(2));\n\t\t\t\t\tthis._size.set(size.width, size.height);\n\t\t\t\t} else if (type === 'ellipse') {\n\t\t\t\t\tthis._size.set(radius.width * 2, radius.height * 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._changed(9);\n\t},\n\n\tisEmpty: function() {\n\t\treturn false;\n\t},\n\n\ttoPath: function(insert) {\n\t\tvar path = new Path[Base.capitalize(this._type)]({\n\t\t\tcenter: new Point(),\n\t\t\tsize: this._size,\n\t\t\tradius: this._radius,\n\t\t\tinsert: false\n\t\t});\n\t\tpath.setStyle(this._style);\n\t\tpath.transform(this._matrix);\n\t\tif (insert || insert === undefined)\n\t\t\tpath.insertAbove(this);\n\t\treturn path;\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar style = this._style,\n\t\t\thasFill = style.hasFill(),\n\t\t\thasStroke = style.hasStroke(),\n\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\tuntransformed = !strokeMatrix;\n\t\tif (hasFill || hasStroke || dontPaint) {\n\t\t\tvar type = this._type,\n\t\t\t\tradius = this._radius,\n\t\t\t\tisCircle = type === 'circle';\n\t\t\tif (!param.dontStart)\n\t\t\t\tctx.beginPath();\n\t\t\tif (untransformed && isCircle) {\n\t\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n\t\t\t} else {\n\t\t\t\tvar rx = isCircle ? radius : radius.width,\n\t\t\t\t\try = isCircle ? radius : radius.height,\n\t\t\t\t\tsize = this._size,\n\t\t\t\t\twidth = size.width,\n\t\t\t\t\theight = size.height;\n\t\t\t\tif (untransformed && type === 'rect' && rx === 0 && ry === 0) {\n\t\t\t\t\tctx.rect(-width / 2, -height / 2, width, height);\n\t\t\t\t} else {\n\t\t\t\t\tvar x = width / 2,\n\t\t\t\t\t\ty = height / 2,\n\t\t\t\t\t\tkappa = 1 - 0.5522847498307936,\n\t\t\t\t\t\tcx = rx * kappa,\n\t\t\t\t\t\tcy = ry * kappa,\n\t\t\t\t\t\tc = [\n\t\t\t\t\t\t\t-x, -y + ry,\n\t\t\t\t\t\t\t-x, -y + cy,\n\t\t\t\t\t\t\t-x + cx, -y,\n\t\t\t\t\t\t\t-x + rx, -y,\n\t\t\t\t\t\t\tx - rx, -y,\n\t\t\t\t\t\t\tx - cx, -y,\n\t\t\t\t\t\t\tx, -y + cy,\n\t\t\t\t\t\t\tx, -y + ry,\n\t\t\t\t\t\t\tx, y - ry,\n\t\t\t\t\t\t\tx, y - cy,\n\t\t\t\t\t\t\tx - cx, y,\n\t\t\t\t\t\t\tx - rx, y,\n\t\t\t\t\t\t\t-x + rx, y,\n\t\t\t\t\t\t\t-x + cx, y,\n\t\t\t\t\t\t\t-x, y - cy,\n\t\t\t\t\t\t\t-x, y - ry\n\t\t\t\t\t\t];\n\t\t\t\t\tif (strokeMatrix)\n\t\t\t\t\t\tstrokeMatrix.transform(c, c, 32);\n\t\t\t\t\tctx.moveTo(c[0], c[1]);\n\t\t\t\t\tctx.bezierCurveTo(c[2], c[3], c[4], c[5], c[6], c[7]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[8], c[9]);\n\t\t\t\t\tctx.bezierCurveTo(c[10], c[11], c[12], c[13], c[14], c[15]);\n\t\t\t\t\tif (y !== ry)\n\t\t\t\t\t\tctx.lineTo(c[16], c[17]);\n\t\t\t\t\tctx.bezierCurveTo(c[18], c[19], c[20], c[21], c[22], c[23]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[24], c[25]);\n\t\t\t\t\tctx.bezierCurveTo(c[26], c[27], c[28], c[29], c[30], c[31]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t}\n\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tif (hasFill) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (hasStroke)\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\tif (getter !== 'getBounds' && this.hasStroke())\n\t\t\trect = rect.expand(this.getStrokeWidth());\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t}\n},\nnew function() {\n\n\tfunction getCornerCenter(that, point, expand) {\n\t\tvar radius = that._radius;\n\t\tif (!radius.isZero()) {\n\t\t\tvar halfSize = that._size.divide(2);\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\tvar dir = new Point(i & 1 ? 1 : -1, i > 1 ? 1 : -1),\n\t\t\t\t\tcorner = dir.multiply(halfSize),\n\t\t\t\t\tcenter = corner.subtract(dir.multiply(radius)),\n\t\t\t\t\trect = new Rectangle(corner, center);\n\t\t\t\tif ((expand ? rect.expand(expand) : rect).contains(point))\n\t\t\t\t\treturn center;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getEllipseRadius(point, radius) {\n\t\tvar angle = point.getAngleInRadians(),\n\t\t\twidth = radius.width * 2,\n\t\t\theight = radius.height * 2,\n\t\t\tx = width * Math.sin(angle),\n\t\t\ty = height * Math.cos(angle);\n\t\treturn width * height / (2 * Math.sqrt(x * x + y * y));\n\t}\n\n\treturn {\n\t\t_contains: function _contains(point) {\n\t\t\tif (this._type === 'rectangle') {\n\t\t\t\tvar center = getCornerCenter(this, point);\n\t\t\t\treturn center\n\t\t\t\t\t\t? point.subtract(center).divide(this._radius)\n\t\t\t\t\t\t\t.getLength() <= 1\n\t\t\t\t\t\t: _contains.base.call(this, point);\n\t\t\t} else {\n\t\t\t\treturn point.divide(this.size).getLength() <= 0.5;\n\t\t\t}\n\t\t},\n\n\t\t_hitTestSelf: function _hitTestSelf(point, options) {\n\t\t\tvar hit = false;\n\t\t\tif (this.hasStroke()) {\n\t\t\t\tvar type = this._type,\n\t\t\t\t\tradius = this._radius,\n\t\t\t\t\tstrokeWidth = this.getStrokeWidth() + 2 * options.tolerance;\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar center = getCornerCenter(this, point, strokeWidth);\n\t\t\t\t\tif (center) {\n\t\t\t\t\t\tvar pt = point.subtract(center);\n\t\t\t\t\t\thit = 2 * Math.abs(pt.getLength()\n\t\t\t\t\t\t\t\t- getEllipseRadius(pt, radius)) <= strokeWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\t\t\t\t\touter = rect.expand(strokeWidth),\n\t\t\t\t\t\t\tinner = rect.expand(-strokeWidth);\n\t\t\t\t\t\thit = outer._containsPoint(point)\n\t\t\t\t\t\t\t\t&& !inner._containsPoint(point);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (type === 'ellipse')\n\t\t\t\t\t\tradius = getEllipseRadius(point, radius);\n\t\t\t\t\thit = 2 * Math.abs(point.getLength() - radius)\n\t\t\t\t\t\t\t<= strokeWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn hit\n\t\t\t\t\t? new HitResult('stroke', this)\n\t\t\t\t\t: _hitTestSelf.base.apply(this, arguments);\n\t\t}\n\t};\n}, {\n\nstatics: new function() {\n\tfunction createShape(type, point, size, radius, args) {\n\t\tvar item = new Shape(Base.getNamed(args));\n\t\titem._type = type;\n\t\titem._size = size;\n\t\titem._radius = radius;\n\t\treturn item.translate(point);\n\t}\n\n\treturn {\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createShape('circle', center, new Size(radius * 2), radius,\n\t\t\t\t\targuments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.min(Size.readNamed(arguments, 'radius'),\n\t\t\t\t\t\trect.getSize(true).divide(2));\n\t\t\treturn createShape('rectangle', rect.getCenter(true),\n\t\t\t\t\trect.getSize(true), radius, arguments);\n\t\t},\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments),\n\t\t\t\tradius = ellipse.radius;\n\t\t\treturn createShape('ellipse', ellipse.center, radius.multiply(2),\n\t\t\t\t\tradius, arguments);\n\t\t},\n\n\t\t_readEllipse: function(args) {\n\t\t\tvar center,\n\t\t\t\tradius;\n\t\t\tif (Base.hasNamed(args, 'radius')) {\n\t\t\t\tcenter = Point.readNamed(args, 'center');\n\t\t\t\tradius = Size.readNamed(args, 'radius');\n\t\t\t} else {\n\t\t\t\tvar rect = Rectangle.readNamed(args, 'rectangle');\n\t\t\t\tcenter = rect.getCenter(true);\n\t\t\t\tradius = rect.getSize(true).divide(2);\n\t\t\t}\n\t\t\treturn { center: center, radius: radius };\n\t\t}\n\t};\n}});\n\nvar Raster = Item.extend({\n\t_class: 'Raster',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: 'getBounds',\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsource: null\n\t},\n\n\tinitialize: function Raster(object, position) {\n\t\tif (!this._initialize(object,\n\t\t\t\tposition !== undefined && Point.read(arguments, 1))) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\tthis.setSource(object);\n\t\t\t} else {\n\t\t\t\tthis.setImage(object);\n\t\t\t}\n\t\t}\n\t\tif (!this._size) {\n\t\t\tthis._size = new Size();\n\t\t\tthis._loaded = false;\n\t\t}\n\t},\n\n\t_equals: function(item) {\n\t\treturn this.getSource() === item.getSource();\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Raster(Item.NO_INSERT),\n\t\t\timage = this._image,\n\t\t\tcanvas = this._canvas;\n\t\tif (image) {\n\t\t\tcopy.setImage(image);\n\t\t} else if (canvas) {\n\t\t\tvar copyCanvas = CanvasProvider.getCanvas(this._size);\n\t\t\tcopyCanvas.getContext('2d').drawImage(canvas, 0, 0);\n\t\t\tcopy.setImage(copyCanvas);\n\t\t}\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size ? size.width : 0, size ? size.height : 0,\n\t\t\t\tthis, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!size.equals(this._size)) {\n\t\t\tif (size.width > 0 && size.height > 0) {\n\t\t\t\tvar element = this.getElement();\n\t\t\t\tthis.setImage(CanvasProvider.getCanvas(size));\n\t\t\t\tif (element)\n\t\t\t\t\tthis.getContext(true).drawImage(element, 0, 0,\n\t\t\t\t\t\t\tsize.width, size.height);\n\t\t\t} else {\n\t\t\t\tif (this._canvas)\n\t\t\t\t\tCanvasProvider.release(this._canvas);\n\t\t\t\tthis._size = size.clone();\n\t\t\t}\n\t\t}\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._size ? this._size.width : 0;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis.setSize(width, this.getHeight());\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._size ? this._size.height : 0;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis.setSize(this.getWidth(), height);\n\t},\n\n\tisEmpty: function() {\n\t\tvar size = this._size;\n\t\treturn !size || size.width === 0 && size.height === 0;\n\t},\n\n\tgetResolution: function() {\n\t\tvar matrix = this._matrix,\n\t\t\torig = new Point(0, 0).transform(matrix),\n\t\t\tu = new Point(1, 0).transform(matrix).subtract(orig),\n\t\t\tv = new Point(0, 1).transform(matrix).subtract(orig);\n\t\treturn new Size(\n\t\t\t72 / u.getLength(),\n\t\t\t72 / v.getLength()\n\t\t);\n\t},\n\n\tgetPpi: '#getResolution',\n\n\tgetImage: function() {\n\t\treturn this._image;\n\t},\n\n\tsetImage: function(image) {\n\t\tif (this._canvas)\n\t\t\tCanvasProvider.release(this._canvas);\n\t\tif (image && image.getContext) {\n\t\t\tthis._image = null;\n\t\t\tthis._canvas = image;\n\t\t\tthis._loaded = true;\n\t\t} else {\n\t\t\tthis._image = image;\n\t\t\tthis._canvas = null;\n\t\t\tthis._loaded = image && image.complete;\n\t\t}\n\t\tthis._size = new Size(\n\t\t\t\timage ? image.naturalWidth || image.width : 0,\n\t\t\t\timage ? image.naturalHeight || image.height : 0);\n\t\tthis._context = null;\n\t\tthis._changed(521);\n\t},\n\n\tgetCanvas: function() {\n\t\tif (!this._canvas) {\n\t\t\tvar ctx = CanvasProvider.getContext(this._size);\n\t\t\ttry {\n\t\t\t\tif (this._image)\n\t\t\t\t\tctx.drawImage(this._image, 0, 0);\n\t\t\t\tthis._canvas = ctx.canvas;\n\t\t\t} catch (e) {\n\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t}\n\t\t}\n\t\treturn this._canvas;\n\t},\n\n\tsetCanvas: '#setImage',\n\n\tgetContext: function(modify) {\n\t\tif (!this._context)\n\t\t\tthis._context = this.getCanvas().getContext('2d');\n\t\tif (modify) {\n\t\t\tthis._image = null;\n\t\t\tthis._changed(513);\n\t\t}\n\t\treturn this._context;\n\t},\n\n\tsetContext: function(context) {\n\t\tthis._context = context;\n\t},\n\n\tgetSource: function() {\n\t\treturn this._image && this._image.src || this.toDataURL();\n\t},\n\n\tsetSource: function(src) {\n\t\tvar that = this,\n\t\t\timage;\n\n\t\tfunction loaded() {\n\t\t\tvar view = that.getView();\n\t\t\tif (view) {\n\t\t\t\tpaper = view._scope;\n\t\t\t\tthat.setImage(image);\n\t\t\t\tthat.emit('load');\n\t\t\t\tview.update();\n\t\t\t}\n\t\t}\n\n\t\t\timage = document.getElementById(src) || new Image();\n\n\t\tif (image.naturalWidth && image.naturalHeight) {\n\t\t\tsetTimeout(loaded, 0);\n\t\t} else {\n\t\t\tDomEvent.add(image, {\n\t\t\t\tload: loaded\n\t\t\t});\n\t\t\tif (!image.src)\n\t\t\t\timage.src = src;\n\t\t}\n\t\tthis.setImage(image);\n\t},\n\n\tgetElement: function() {\n\t\treturn this._canvas || this._loaded && this._image;\n\t}\n}, {\n\tbeans: false,\n\n\tgetSubCanvas: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tctx = CanvasProvider.getContext(rect.getSize());\n\t\tctx.drawImage(this.getCanvas(), rect.x, rect.y,\n\t\t\t\trect.width, rect.height, 0, 0, rect.width, rect.height);\n\t\treturn ctx.canvas;\n\t},\n\n\tgetSubRaster: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\traster.setImage(this.getSubCanvas(rect));\n\t\traster.translate(rect.getCenter().subtract(this.getSize().divide(2)));\n\t\traster._matrix.preConcatenate(this._matrix);\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\ttoDataURL: function() {\n\t\tvar src = this._image && this._image.src;\n\t\tif (/^data:/.test(src))\n\t\t\treturn src;\n\t\tvar canvas = this.getCanvas();\n\t\treturn canvas ? canvas.toDataURL() : null;\n\t},\n\n\tdrawImage: function(image ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).drawImage(image, point.x, point.y);\n\t},\n\n\tgetAverageColor: function(object) {\n\t\tvar bounds, path;\n\t\tif (!object) {\n\t\t\tbounds = this.getBounds();\n\t\t} else if (object instanceof PathItem) {\n\t\t\tpath = object;\n\t\t\tbounds = object.getBounds();\n\t\t} else if (object.width) {\n\t\t\tbounds = new Rectangle(object);\n\t\t} else if (object.x) {\n\t\t\tbounds = new Rectangle(object.x - 0.5, object.y - 0.5, 1, 1);\n\t\t}\n\t\tvar sampleSize = 32,\n\t\t\twidth = Math.min(bounds.width, sampleSize),\n\t\t\theight = Math.min(bounds.height, sampleSize);\n\t\tvar ctx = Raster._sampleContext;\n\t\tif (!ctx) {\n\t\t\tctx = Raster._sampleContext = CanvasProvider.getContext(\n\t\t\t\t\tnew Size(sampleSize));\n\t\t} else {\n\t\t\tctx.clearRect(0, 0, sampleSize + 1, sampleSize + 1);\n\t\t}\n\t\tctx.save();\n\t\tvar matrix = new Matrix()\n\t\t\t\t.scale(width / bounds.width, height / bounds.height)\n\t\t\t\t.translate(-bounds.x, -bounds.y);\n\t\tmatrix.applyToContext(ctx);\n\t\tif (path)\n\t\t\tpath.draw(ctx, new Base({ clip: true, matrices: [matrix] }));\n\t\tthis._matrix.applyToContext(ctx);\n\t\tvar element = this.getElement(),\n\t\t\tsize = this._size;\n\t\tif (element)\n\t\t\tctx.drawImage(element, -size.width / 2, -size.height / 2);\n\t\tctx.restore();\n\t\tvar pixels = ctx.getImageData(0.5, 0.5, Math.ceil(width),\n\t\t\t\tMath.ceil(height)).data,\n\t\t\tchannels = [0, 0, 0],\n\t\t\ttotal = 0;\n\t\tfor (var i = 0, l = pixels.length; i < l; i += 4) {\n\t\t\tvar alpha = pixels[i + 3];\n\t\t\ttotal += alpha;\n\t\t\talpha /= 255;\n\t\t\tchannels[0] += pixels[i] * alpha;\n\t\t\tchannels[1] += pixels[i + 1] * alpha;\n\t\t\tchannels[2] += pixels[i + 2] * alpha;\n\t\t}\n\t\tfor (var i = 0; i < 3; i++)\n\t\t\tchannels[i] /= total;\n\t\treturn total ? Color.read(channels) : null;\n\t},\n\n\tgetPixel: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar data = this.getContext().getImageData(point.x, point.y, 1, 1).data;\n\t\treturn new Color('rgb', [data[0] / 255, data[1] / 255, data[2] / 255],\n\t\t\t\tdata[3] / 255);\n\t},\n\n\tsetPixel: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcolor = Color.read(arguments),\n\t\t\tcomponents = color._convert('rgb'),\n\t\t\talpha = color._alpha,\n\t\t\tctx = this.getContext(true),\n\t\t\timageData = ctx.createImageData(1, 1),\n\t\t\tdata = imageData.data;\n\t\tdata[0] = components[0] * 255;\n\t\tdata[1] = components[1] * 255;\n\t\tdata[2] = components[2] * 255;\n\t\tdata[3] = alpha != null ? alpha * 255 : 255;\n\t\tctx.putImageData(imageData, point.x, point.y);\n\t},\n\n\tcreateImageData: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn this.getContext().createImageData(size.width, size.height);\n\t},\n\n\tgetImageData: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\tif (rect.isEmpty())\n\t\t\trect = new Rectangle(this._size);\n\t\treturn this.getContext().getImageData(rect.x, rect.y,\n\t\t\t\trect.width, rect.height);\n\t},\n\n\tsetImageData: function(data ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).putImageData(data, point.x, point.y);\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t},\n\n\t_hitTestSelf: function(point) {\n\t\tif (this._contains(point)) {\n\t\t\tvar that = this;\n\t\t\treturn new HitResult('pixel', that, {\n\t\t\t\toffset: point.add(that._size.divide(2)).round(),\n\t\t\t\tcolor: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn that.getPixel(this.offset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_draw: function(ctx) {\n\t\tvar element = this.getElement();\n\t\tif (element) {\n\t\t\tctx.globalAlpha = this._opacity;\n\t\t\tctx.drawImage(element,\n\t\t\t\t\t-this._size.width / 2, -this._size.height / 2);\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn true;\n\t}\n});\n\nvar PlacedSymbol = Item.extend({\n\t_class: 'PlacedSymbol',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: { getBounds: 'getStrokeBounds' },\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsymbol: null\n\t},\n\n\tinitialize: function PlacedSymbol(arg0, arg1) {\n\t\tif (!this._initialize(arg0,\n\t\t\t\targ1 !== undefined && Point.read(arguments, 1)))\n\t\t\tthis.setSymbol(arg0 instanceof Symbol ? arg0 : new Symbol(arg0));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._symbol === item._symbol;\n\t},\n\n\tgetSymbol: function() {\n\t\treturn this._symbol;\n\t},\n\n\tsetSymbol: function(symbol) {\n\t\tthis._symbol = symbol;\n\t\tthis._changed(9);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new PlacedSymbol(Item.NO_INSERT);\n\t\tcopy.setSymbol(this._symbol);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tisEmpty: function() {\n\t\treturn this._symbol._definition.isEmpty();\n\t},\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar definition = this.symbol._definition;\n\t\treturn definition._getCachedBounds(getter,\n\t\t\t\tmatrix && matrix.chain(definition._matrix), cacheItem);\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar res = this._symbol._definition._hitTest(point, options);\n\t\tif (res)\n\t\t\tres.item = this;\n\t\treturn res;\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tthis.symbol._definition.draw(ctx, param);\n\t}\n\n});\n\nvar HitResult = Base.extend({\n\t_class: 'HitResult',\n\n\tinitialize: function HitResult(type, item, values) {\n\t\tthis.type = type;\n\t\tthis.item = item;\n\t\tif (values) {\n\t\t\tvalues.enumerable = true;\n\t\t\tthis.inject(values);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tgetOptions: function(options) {\n\t\t\treturn new Base({\n\t\t\t\ttype: null,\n\t\t\t\ttolerance: paper.settings.hitTolerance,\n\t\t\t\tfill: !options,\n\t\t\t\tstroke: !options,\n\t\t\t\tsegments: !options,\n\t\t\t\thandles: false,\n\t\t\t\tends: false,\n\t\t\t\tcenter: false,\n\t\t\t\tbounds: false,\n\t\t\t\tguides: false,\n\t\t\t\tselected: false\n\t\t\t}, options);\n\t\t}\n\t}\n});\n\nvar Segment = Base.extend({\n\t_class: 'Segment',\n\tbeans: true,\n\n\tinitialize: function Segment(arg0, arg1, arg2, arg3, arg4, arg5) {\n\t\tvar count = arguments.length,\n\t\t\tpoint, handleIn, handleOut;\n\t\tif (count === 0) {\n\t\t} else if (count === 1) {\n\t\t\tif (arg0.point) {\n\t\t\t\tpoint = arg0.point;\n\t\t\t\thandleIn = arg0.handleIn;\n\t\t\t\thandleOut = arg0.handleOut;\n\t\t\t} else {\n\t\t\t\tpoint = arg0;\n\t\t\t}\n\t\t} else if (count === 2 && typeof arg0 === 'number') {\n\t\t\tpoint = arguments;\n\t\t} else if (count <= 3) {\n\t\t\tpoint = arg0;\n\t\t\thandleIn = arg1;\n\t\t\thandleOut = arg2;\n\t\t} else {\n\t\t\tpoint = arg0 !== undefined ? [ arg0, arg1 ] : null;\n\t\t\thandleIn = arg2 !== undefined ? [ arg2, arg3 ] : null;\n\t\t\thandleOut = arg4 !== undefined ? [ arg4, arg5 ] : null;\n\t\t}\n\t\tnew SegmentPoint(point, this, '_point');\n\t\tnew SegmentPoint(handleIn, this, '_handleIn');\n\t\tnew SegmentPoint(handleOut, this, '_handleOut');\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.isLinear() ? this._point\n\t\t\t\t: [this._point, this._handleIn, this._handleOut],\n\t\t\t\toptions, true);\n\t},\n\n\t_changed: function(point) {\n\t\tvar path = this._path;\n\t\tif (!path)\n\t\t\treturn;\n\t\tvar curves = path._curves,\n\t\t\tindex = this._index,\n\t\t\tcurve;\n\t\tif (curves) {\n\t\t\tif ((!point || point === this._point || point === this._handleIn)\n\t\t\t\t\t&& (curve = index > 0 ? curves[index - 1] : path._closed\n\t\t\t\t\t\t? curves[curves.length - 1] : null))\n\t\t\t\tcurve._changed();\n\t\t\tif ((!point || point === this._point || point === this._handleOut)\n\t\t\t\t\t&& (curve = curves[index]))\n\t\t\t\tcurve._changed();\n\t\t}\n\t\tpath._changed(25);\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._point.set(point.x, point.y);\n\t},\n\n\tgetHandleIn: function() {\n\t\treturn this._handleIn;\n\t},\n\n\tsetHandleIn: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleIn.set(point.x, point.y);\n\t},\n\n\tgetHandleOut: function() {\n\t\treturn this._handleOut;\n\t},\n\n\tsetHandleOut: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleOut.set(point.x, point.y);\n\t},\n\n\tisLinear: function() {\n\t\treturn this._handleIn.isZero() && this._handleOut.isZero();\n\t},\n\n\tsetLinear: function(linear) {\n\t\tif (linear) {\n\t\t\tthis._handleIn.set(0, 0);\n\t\t\tthis._handleOut.set(0, 0);\n\t\t} else {\n\t\t}\n\t},\n\n\tisColinear: function(segment) {\n\t\tvar next1 = this.getNext(),\n\t\t\tnext2 = segment.getNext();\n\t\treturn this._handleOut.isZero() && next1._handleIn.isZero()\n\t\t\t\t&& segment._handleOut.isZero() && next2._handleIn.isZero()\n\t\t\t\t&& next1._point.subtract(this._point).isColinear(\n\t\t\t\t\tnext2._point.subtract(segment._point));\n\t},\n\n\tisOrthogonal: function() {\n\t\tvar prev = this.getPrevious(),\n\t\t\tnext = this.getNext();\n\t\treturn prev._handleOut.isZero() && this._handleIn.isZero()\n\t\t\t&& this._handleOut.isZero() && next._handleIn.isZero()\n\t\t\t&& this._point.subtract(prev._point).isOrthogonal(\n\t\t\t\t\tnext._point.subtract(this._point));\n\t},\n\n\tisArc: function() {\n\t\tvar next = this.getNext(),\n\t\t\thandle1 = this._handleOut,\n\t\t\thandle2 = next._handleIn,\n\t\t\tkappa = 0.5522847498307936;\n\t\tif (handle1.isOrthogonal(handle2)) {\n\t\t\tvar from = this._point,\n\t\t\t\tto = next._point,\n\t\t\t\tcorner = new Line(from, handle1, true).intersect(\n\t\t\t\t\t\tnew Line(to, handle2, true), true);\n\t\t\treturn corner && Numerical.isZero(handle1.getLength() /\n\t\t\t\t\tcorner.subtract(from).getLength() - kappa)\n\t\t\t\t&& Numerical.isZero(handle2.getLength() /\n\t\t\t\t\tcorner.subtract(to).getLength() - kappa);\n\t\t}\n\t\treturn false;\n\t},\n\n\t_selectionState: 0,\n\n\tisSelected: function(_point) {\n\t\tvar state = this._selectionState;\n\t\treturn !_point ? !!(state & 7)\n\t\t\t: _point === this._point ? !!(state & 4)\n\t\t\t: _point === this._handleIn ? !!(state & 1)\n\t\t\t: _point === this._handleOut ? !!(state & 2)\n\t\t\t: false;\n\t},\n\n\tsetSelected: function(selected, _point) {\n\t\tvar path = this._path,\n\t\t\tselected = !!selected,\n\t\t\tstate = this._selectionState,\n\t\t\toldState = state,\n\t\t\tflag = !_point ? 7\n\t\t\t\t\t: _point === this._point ? 4\n\t\t\t\t\t: _point === this._handleIn ? 1\n\t\t\t\t\t: _point === this._handleOut ? 2\n\t\t\t\t\t: 0;\n\t\tif (selected) {\n\t\t\tstate |= flag;\n\t\t} else {\n\t\t\tstate &= ~flag;\n\t\t}\n\t\tthis._selectionState = state;\n\t\tif (path && state !== oldState) {\n\t\t\tpath._updateSelection(this, oldState, state);\n\t\t\tpath._changed(129);\n\t\t}\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index !== undefined ? this._index : null;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path || null;\n\t},\n\n\tgetCurve: function() {\n\t\tvar path = this._path,\n\t\t\tindex = this._index;\n\t\tif (path) {\n\t\t\tif (index > 0 && !path._closed\n\t\t\t\t\t&& index === path._segments.length - 1)\n\t\t\t\tindex--;\n\t\t\treturn path.getCurves()[index] || null;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocation: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve\n\t\t\t\t? new CurveLocation(curve, this === curve._segment1 ? 0 : 1)\n\t\t\t\t: null;\n\t},\n\n\tgetNext: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index + 1]\n\t\t\t\t|| this._path._closed && segments[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index - 1]\n\t\t\t\t|| this._path._closed && segments[segments.length - 1]) || null;\n\t},\n\n\treverse: function() {\n\t\treturn new Segment(this._point, this._handleOut, this._handleIn);\n\t},\n\n\tremove: function() {\n\t\treturn this._path ? !!this._path.removeSegment(this._index) : false;\n\t},\n\n\tclone: function() {\n\t\treturn new Segment(this._point, this._handleIn, this._handleOut);\n\t},\n\n\tequals: function(segment) {\n\t\treturn segment === this || segment && this._class === segment._class\n\t\t\t\t&& this._point.equals(segment._point)\n\t\t\t\t&& this._handleIn.equals(segment._handleIn)\n\t\t\t\t&& this._handleOut.equals(segment._handleOut)\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point: ' + this._point ];\n\t\tif (!this._handleIn.isZero())\n\t\t\tparts.push('handleIn: ' + this._handleIn);\n\t\tif (!this._handleOut.isZero())\n\t\t\tparts.push('handleOut: ' + this._handleOut);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\ttransform: function(matrix) {\n\t\tthis._transformCoordinates(matrix, new Array(6), true);\n\t\tthis._changed();\n\t},\n\n\tinterpolate: function(segment0, segment1, coef) {\n\t\tvar dxPoint = segment1._point._x - segment0._point._x,\n\t\t\tdyPoint = segment1._point._y - segment0._point._y,\n\t\t\tdxHandleIn = segment1._handleIn._x - segment0._handleIn._x,\n\t\t\tdyHandleIn = segment1._handleIn._y - segment0._handleIn._y,\n\t\t\tdxHandleOut = segment1._handleOut._x - segment0._handleOut._x,\n\t\t\tdyHandleOut = segment1._handleOut._y - segment0._handleOut._y;\n\n\t\tthis._point._x = segment0._point._x + dxPoint * coef;\n\t\tthis._point._y = segment0._point._y + dyPoint * coef;\n\t\tthis._handleIn._x = segment0._handleIn._x + dxHandleIn * coef;\n\t\tthis._handleIn._y = segment0._handleIn._y + dyHandleIn * coef;\n\t\tthis._handleOut._x = segment0._handleOut._x + dxHandleOut * coef;\n\t\tthis._handleOut._y = segment0._handleOut._y + dyHandleOut * coef;\n\n\t\tthis._changed();\n\t},\n\n\t_transformCoordinates: function(matrix, coords, change) {\n\t\tvar point = this._point,\n\t\t\thandleIn = !change || !this._handleIn.isZero()\n\t\t\t\t\t? this._handleIn : null,\n\t\t\thandleOut = !change || !this._handleOut.isZero()\n\t\t\t\t\t? this._handleOut : null,\n\t\t\tx = point._x,\n\t\t\ty = point._y,\n\t\t\ti = 2;\n\t\tcoords[0] = x;\n\t\tcoords[1] = y;\n\t\tif (handleIn) {\n\t\t\tcoords[i++] = handleIn._x + x;\n\t\t\tcoords[i++] = handleIn._y + y;\n\t\t}\n\t\tif (handleOut) {\n\t\t\tcoords[i++] = handleOut._x + x;\n\t\t\tcoords[i++] = handleOut._y + y;\n\t\t}\n\t\tif (matrix) {\n\t\t\tmatrix._transformCoordinates(coords, coords, i / 2);\n\t\t\tx = coords[0];\n\t\t\ty = coords[1];\n\t\t\tif (change) {\n\t\t\t\tpoint._x = x;\n\t\t\t\tpoint._y = y;\n\t\t\t\ti  = 2;\n\t\t\t\tif (handleIn) {\n\t\t\t\t\thandleIn._x = coords[i++] - x;\n\t\t\t\t\thandleIn._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t\tif (handleOut) {\n\t\t\t\t\thandleOut._x = coords[i++] - x;\n\t\t\t\t\thandleOut._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!handleIn) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t\tif (!handleOut) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn coords;\n\t}\n});\n\nvar SegmentPoint = Point.extend({\n\tinitialize: function SegmentPoint(point, owner, key) {\n\t\tvar x, y, selected;\n\t\tif (!point) {\n\t\t\tx = y = 0;\n\t\t} else if ((x = point[0]) !== undefined) {\n\t\t\ty = point[1];\n\t\t} else {\n\t\t\tvar pt = point;\n\t\t\tif ((x = pt.x) === undefined) {\n\t\t\t\tpt = Point.read(arguments);\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\ty = pt.y;\n\t\t\tselected = pt.selected;\n\t\t}\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\towner[key] = this;\n\t\tif (selected)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tset: function(x, y) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter,\n\t\t\tx = f.number(this._x),\n\t\t\ty = f.number(this._y);\n\t\treturn this.isSelected()\n\t\t\t\t? { x: x, y: y, selected: true }\n\t\t\t\t: [x, y];\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner._changed(this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this._x) && Numerical.isZero(this._y);\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._owner.setSelected(selected, this);\n\t},\n\n\tisSelected: function() {\n\t\treturn this._owner.isSelected(this);\n\t}\n});\n\nvar Curve = Base.extend({\n\t_class: 'Curve',\n\n\tinitialize: function Curve(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n\t\tvar count = arguments.length;\n\t\tif (count === 3) {\n\t\t\tthis._path = arg0;\n\t\t\tthis._segment1 = arg1;\n\t\t\tthis._segment2 = arg2;\n\t\t} else if (count === 0) {\n\t\t\tthis._segment1 = new Segment();\n\t\t\tthis._segment2 = new Segment();\n\t\t} else if (count === 1) {\n\t\t\tthis._segment1 = new Segment(arg0.segment1);\n\t\t\tthis._segment2 = new Segment(arg0.segment2);\n\t\t} else if (count === 2) {\n\t\t\tthis._segment1 = new Segment(arg0);\n\t\t\tthis._segment2 = new Segment(arg1);\n\t\t} else {\n\t\t\tvar point1, handle1, handle2, point2;\n\t\t\tif (count === 4) {\n\t\t\t\tpoint1 = arg0;\n\t\t\t\thandle1 = arg1;\n\t\t\t\thandle2 = arg2;\n\t\t\t\tpoint2 = arg3;\n\t\t\t} else if (count === 8) {\n\t\t\t\tpoint1 = [arg0, arg1];\n\t\t\t\tpoint2 = [arg6, arg7];\n\t\t\t\thandle1 = [arg2 - arg0, arg3 - arg1];\n\t\t\t\thandle2 = [arg4 - arg6, arg5 - arg7];\n\t\t\t}\n\t\t\tthis._segment1 = new Segment(point1, null, handle1);\n\t\t\tthis._segment2 = new Segment(point2, handle2, null);\n\t\t}\n\t},\n\n\t_changed: function() {\n\t\tthis._length = this._bounds = undefined;\n\t},\n\n\tgetPoint1: function() {\n\t\treturn this._segment1._point;\n\t},\n\n\tsetPoint1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._point.set(point.x, point.y);\n\t},\n\n\tgetPoint2: function() {\n\t\treturn this._segment2._point;\n\t},\n\n\tsetPoint2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._point.set(point.x, point.y);\n\t},\n\n\tgetHandle1: function() {\n\t\treturn this._segment1._handleOut;\n\t},\n\n\tsetHandle1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._handleOut.set(point.x, point.y);\n\t},\n\n\tgetHandle2: function() {\n\t\treturn this._segment2._handleIn;\n\t},\n\n\tsetHandle2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._handleIn.set(point.x, point.y);\n\t},\n\n\tgetSegment1: function() {\n\t\treturn this._segment1;\n\t},\n\n\tgetSegment2: function() {\n\t\treturn this._segment2;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._segment1._index;\n\t},\n\n\tgetNext: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index + 1]\n\t\t\t\t|| this._path._closed && curves[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index - 1]\n\t\t\t\t|| this._path._closed && curves[curves.length - 1]) || null;\n\t},\n\n\tisSelected: function() {\n\t\treturn this.getPoint1().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getPoint2().isSelected();\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis.getPoint1().setSelected(selected);\n\t\tthis.getHandle1().setSelected(selected);\n\t\tthis.getHandle2().setSelected(selected);\n\t\tthis.getPoint2().setSelected(selected);\n\t},\n\n\tgetValues: function(matrix) {\n\t\treturn Curve.getValues(this._segment1, this._segment2, matrix);\n\t},\n\n\tgetPoints: function() {\n\t\tvar coords = this.getValues(),\n\t\t\tpoints = [];\n\t\tfor (var i = 0; i < 8; i += 2)\n\t\t\tpoints.push(new Point(coords[i], coords[i + 1]));\n\t\treturn points;\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tthis._length = this.isLinear()\n\t\t\t\t? this._segment2._point.getDistance(this._segment1._point)\n\t\t\t\t: Curve.getLength(this.getValues(), 0, 1);\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\treturn Curve.getArea(this.getValues());\n\t},\n\n\tgetPart: function(from, to) {\n\t\treturn new Curve(Curve.getPart(this.getValues(), from, to));\n\t},\n\n\tgetPartLength: function(from, to) {\n\t\treturn Curve.getLength(this.getValues(), from, to);\n\t},\n\n\tisLinear: function() {\n\t\treturn this._segment1._handleOut.isZero()\n\t\t\t\t&& this._segment2._handleIn.isZero();\n\t},\n\n\tgetIntersections: function(curve) {\n\t\treturn Curve.filterIntersections(Curve.getIntersections(\n\t\t\t\tthis.getValues(), curve.getValues(), this, curve, []));\n\t},\n\n\t_getParameter: function(offset, isParameter) {\n\t\treturn isParameter\n\t\t\t\t? offset\n\t\t\t\t: offset && offset.curve === this\n\t\t\t\t\t? offset.parameter\n\t\t\t\t\t: offset === undefined && isParameter === undefined\n\t\t\t\t\t\t? 0.5\n\t\t\t\t\t\t: this.getParameterAt(offset, 0);\n\t},\n\n\tdivide: function(offset, isParameter, ignoreLinear) {\n\t\tvar parameter = this._getParameter(offset, isParameter),\n\t\t\ttolerance = 0.000001,\n\t\t\tres = null;\n\t\tif (parameter > tolerance && parameter < 1 - tolerance) {\n\t\t\tvar parts = Curve.subdivide(this.getValues(), parameter),\n\t\t\t\tisLinear = ignoreLinear ? false : this.isLinear(),\n\t\t\t\tleft = parts[0],\n\t\t\t\tright = parts[1];\n\n\t\t\tif (!isLinear) {\n\t\t\t\tthis._segment1._handleOut.set(left[2] - left[0],\n\t\t\t\t\t\tleft[3] - left[1]);\n\t\t\t\tthis._segment2._handleIn.set(right[4] - right[6],\n\t\t\t\t\t\tright[5] - right[7]);\n\t\t\t}\n\n\t\t\tvar x = left[6], y = left[7],\n\t\t\t\tsegment = new Segment(new Point(x, y),\n\t\t\t\t\t\t!isLinear && new Point(left[4] - x, left[5] - y),\n\t\t\t\t\t\t!isLinear && new Point(right[2] - x, right[3] - y));\n\n\t\t\tif (this._path) {\n\t\t\t\tif (this._segment1._index > 0 && this._segment2._index === 0) {\n\t\t\t\t\tthis._path.add(segment);\n\t\t\t\t} else {\n\t\t\t\t\tthis._path.insert(this._segment2._index, segment);\n\t\t\t\t}\n\t\t\t\tres = this;\n\t\t\t} else {\n\t\t\t\tvar end = this._segment2;\n\t\t\t\tthis._segment2 = segment;\n\t\t\t\tres = new Curve(segment, end);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function(offset, isParameter) {\n\t\treturn this._path\n\t\t\t? this._path.split(this._segment1._index,\n\t\t\t\t\tthis._getParameter(offset, isParameter))\n\t\t\t: null;\n\t},\n\n\treverse: function() {\n\t\treturn new Curve(this._segment2.reverse(), this._segment1.reverse());\n\t},\n\n\tremove: function() {\n\t\tvar removed = false;\n\t\tif (this._path) {\n\t\t\tvar segment2 = this._segment2,\n\t\t\t\thandleOut = segment2._handleOut;\n\t\t\tremoved = segment2.remove();\n\t\t\tif (removed)\n\t\t\t\tthis._segment1._handleOut.set(handleOut.x, handleOut.y);\n\t\t}\n\t\treturn removed;\n\t},\n\n\tclone: function() {\n\t\treturn new Curve(this._segment1, this._segment2);\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point1: ' + this._segment1._point ];\n\t\tif (!this._segment1._handleOut.isZero())\n\t\t\tparts.push('handle1: ' + this._segment1._handleOut);\n\t\tif (!this._segment2._handleIn.isZero())\n\t\t\tparts.push('handle2: ' + this._segment2._handleIn);\n\t\tparts.push('point2: ' + this._segment2._point);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\nstatics: {\n\tgetValues: function(segment1, segment2, matrix) {\n\t\tvar p1 = segment1._point,\n\t\t\th1 = segment1._handleOut,\n\t\t\th2 = segment2._handleIn,\n\t\t\tp2 = segment2._point,\n\t\t\tvalues = [\n\t\t\t\tp1._x, p1._y,\n\t\t\t\tp1._x + h1._x, p1._y + h1._y,\n\t\t\t\tp2._x + h2._x, p2._y + h2._y,\n\t\t\t\tp2._x, p2._y\n\t\t\t];\n\t\tif (matrix)\n\t\t\tmatrix._transformCoordinates(values, values, 4);\n\t\treturn values;\n\t},\n\n\tevaluate: function(v, t, type) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\ttolerance = 0.000001,\n\t\t\tx, y;\n\n\t\tif (type === 0 && (t < tolerance || t > 1 - tolerance)) {\n\t\t\tvar isZero = t < tolerance;\n\t\t\tx = isZero ? p1x : p2x;\n\t\t\ty = isZero ? p1y : p2y;\n\t\t} else {\n\t\t\tvar cx = 3 * (c1x - p1x),\n\t\t\t\tbx = 3 * (c2x - c1x) - cx,\n\t\t\t\tax = p2x - p1x - cx - bx,\n\n\t\t\t\tcy = 3 * (c1y - p1y),\n\t\t\t\tby = 3 * (c2y - c1y) - cy,\n\t\t\t\tay = p2y - p1y - cy - by;\n\t\t\tif (type === 0) {\n\t\t\t\tx = ((ax * t + bx) * t + cx) * t + p1x;\n\t\t\t\ty = ((ay * t + by) * t + cy) * t + p1y;\n\t\t\t} else {\n\t\t\t\tif (t < tolerance && c1x === p1x && c1y === p1y\n\t\t\t\t\t\t|| t > 1 - tolerance && c2x === p2x && c2y === p2y) {\n\t\t\t\t\tx = c2x - c1x;\n\t\t\t\t\ty = c2y - c1y;\n\t\t\t\t} else if (t < tolerance) {\n\t\t\t\t\tx = cx;\n\t\t\t\t\ty = cy;\n\t\t\t\t} else if (t > 1 - tolerance) {\n\t\t\t\t\tx = 3 * (p2x - c2x);\n\t\t\t\t\ty = 3 * (p2y - c2y);\n\t\t\t\t} else {\n\t\t\t\t\tx = (3 * ax * t + 2 * bx) * t + cx;\n\t\t\t\t\ty = (3 * ay * t + 2 * by) * t + cy;\n\t\t\t\t}\n\t\t\t\tif (type === 3) {\n\t\t\t\t\tvar x2 = 6 * ax * t + 2 * bx,\n\t\t\t\t\t\ty2 = 6 * ay * t + 2 * by;\n\t\t\t\t\treturn (x * y2 - y * x2) / Math.pow(x * x + y * y, 3 / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn type === 2 ? new Point(y, -x) : new Point(x, y);\n\t},\n\n\tsubdivide: function(v, t) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\tif (t === undefined)\n\t\t\tt = 0.5;\n\t\tvar u = 1 - t,\n\t\t\tp3x = u * p1x + t * c1x, p3y = u * p1y + t * c1y,\n\t\t\tp4x = u * c1x + t * c2x, p4y = u * c1y + t * c2y,\n\t\t\tp5x = u * c2x + t * p2x, p5y = u * c2y + t * p2y,\n\t\t\tp6x = u * p3x + t * p4x, p6y = u * p3y + t * p4y,\n\t\t\tp7x = u * p4x + t * p5x, p7y = u * p4y + t * p5y,\n\t\t\tp8x = u * p6x + t * p7x, p8y = u * p6y + t * p7y;\n\t\treturn [\n\t\t\t[p1x, p1y, p3x, p3y, p6x, p6y, p8x, p8y],\n\t\t\t[p8x, p8y, p7x, p7y, p5x, p5y, p2x, p2y]\n\t\t];\n\t},\n\n\tsolveCubic: function (v, coord, val, roots, min, max) {\n\t\tvar p1 = v[coord],\n\t\t\tc1 = v[coord + 2],\n\t\t\tc2 = v[coord + 4],\n\t\t\tp2 = v[coord + 6],\n\t\t\tc = 3 * (c1 - p1),\n\t\t\tb = 3 * (c2 - c1) - c,\n\t\t\ta = p2 - p1 - c - b,\n\t\t\tisZero = Numerical.isZero;\n\t\tif (isZero(a) && isZero(b))\n\t\t\ta = b = 0;\n\t\treturn Numerical.solveCubic(a, b, c, p1 - val, roots, min, max);\n\t},\n\n\tgetParameterOf: function(v, x, y) {\n\t\tvar tolerance = 0.000001;\n\t\tif (Math.abs(v[0] - x) < tolerance && Math.abs(v[1] - y) < tolerance)\n\t\t\treturn 0;\n\t\tif (Math.abs(v[6] - x) < tolerance && Math.abs(v[7] - y) < tolerance)\n\t\t\treturn 1;\n\t\tvar txs = [],\n\t\t\ttys = [],\n\t\t\tsx = Curve.solveCubic(v, 0, x, txs, 0, 1),\n\t\t\tsy = Curve.solveCubic(v, 1, y, tys, 0, 1),\n\t\t\ttx, ty;\n\t\tfor (var cx = 0;  sx == -1 || cx < sx;) {\n\t\t\tif (sx == -1 || (tx = txs[cx++]) >= 0 && tx <= 1) {\n\t\t\t\tfor (var cy = 0; sy == -1 || cy < sy;) {\n\t\t\t\t\tif (sy == -1 || (ty = tys[cy++]) >= 0 && ty <= 1) {\n\t\t\t\t\t\tif (sx == -1) tx = ty;\n\t\t\t\t\t\telse if (sy == -1) ty = tx;\n\t\t\t\t\t\tif (Math.abs(tx - ty) < tolerance)\n\t\t\t\t\t\t\treturn (tx + ty) * 0.5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (sx == -1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetPart: function(v, from, to) {\n\t\tif (from > 0)\n\t\t\tv = Curve.subdivide(v, from)[1];\n\t\tif (to < 1)\n\t\t\tv = Curve.subdivide(v, (to - from) / (1 - from))[0];\n\t\treturn v;\n\t},\n\n\tisLinear: function(v) {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t&& isZero(v[4] - v[6]) && isZero(v[5] - v[7]);\n\t},\n\n\tisFlatEnough: function(v, tolerance) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\tux = 3 * c1x - 2 * p1x - p2x,\n\t\t\tuy = 3 * c1y - 2 * p1y - p2y,\n\t\t\tvx = 3 * c2x - 2 * p2x - p1x,\n\t\t\tvy = 3 * c2y - 2 * p2y - p1y;\n\t\treturn Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy)\n\t\t\t\t< 10 * tolerance * tolerance;\n\t},\n\n\tgetArea: function(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\treturn (  3.0 * c1y * p1x - 1.5 * c1y * c2x\n\t\t\t\t- 1.5 * c1y * p2x - 3.0 * p1y * c1x\n\t\t\t\t- 1.5 * p1y * c2x - 0.5 * p1y * p2x\n\t\t\t\t+ 1.5 * c2y * p1x + 1.5 * c2y * c1x\n\t\t\t\t- 3.0 * c2y * p2x + 0.5 * p2y * p1x\n\t\t\t\t+ 1.5 * p2y * c1x + 3.0 * p2y * c2x) / 10;\n\t},\n\n\tgetEdgeSum: function(v) {\n\t\treturn\t  (v[0] - v[2]) * (v[3] + v[1])\n\t\t\t\t+ (v[2] - v[4]) * (v[5] + v[3])\n\t\t\t\t+ (v[4] - v[6]) * (v[7] + v[5]);\n\t},\n\n\tgetBounds: function(v) {\n\t\tvar min = v.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = [0, 0];\n\t\tfor (var i = 0; i < 2; i++)\n\t\t\tCurve._addBounds(v[i], v[i + 2], v[i + 4], v[i + 6],\n\t\t\t\t\ti, 0, min, max, roots);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\t_addBounds: function(v0, v1, v2, v3, coord, padding, min, max, roots) {\n\t\tfunction add(value, padding) {\n\t\t\tvar left = value - padding,\n\t\t\t\tright = value + padding;\n\t\t\tif (left < min[coord])\n\t\t\t\tmin[coord] = left;\n\t\t\tif (right > max[coord])\n\t\t\t\tmax[coord] = right;\n\t\t}\n\t\tvar a = 3 * (v1 - v2) - v0 + v3,\n\t\t\tb = 2 * (v0 + v2) - 4 * v1,\n\t\t\tc = v1 - v0,\n\t\t\tcount = Numerical.solveQuadratic(a, b, c, roots),\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tadd(v3, 0);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar t = roots[i],\n\t\t\t\tu = 1 - t;\n\t\t\tif (tMin < t && t < tMax)\n\t\t\t\tadd(u * u * u * v0\n\t\t\t\t\t+ 3 * u * u * t * v1\n\t\t\t\t\t+ 3 * u * t * t * v2\n\t\t\t\t\t+ t * t * t * v3,\n\t\t\t\t\tpadding);\n\t\t}\n\t}\n}}, Base.each(['getBounds', 'getStrokeBounds', 'getHandleBounds', 'getRoughBounds'],\n\tfunction(name) {\n\t\tthis[name] = function() {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar bounds = this._bounds[name];\n\t\t\tif (!bounds) {\n\t\t\t\tbounds = this._bounds[name] = Path[name]([this._segment1,\n\t\t\t\t\t\tthis._segment2], false, this._path.getStyle());\n\t\t\t}\n\t\t\treturn bounds.clone();\n\t\t};\n\t},\n{\n\n}), Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name, index) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar values = this.getValues();\n\t\t\treturn Curve.evaluate(values, isParameter\n\t\t\t\t\t? offset : Curve.getParameterAt(values, offset, 0), index);\n\t\t};\n\t\tthis[name] = function(parameter) {\n\t\t\treturn Curve.evaluate(this.getValues(), parameter, index);\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\tgetParameterAt: function(offset, start) {\n\t\treturn Curve.getParameterAt(this.getValues(), offset, start);\n\t},\n\n\tgetParameterOf: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Curve.getParameterOf(this.getValues(), point.x, point.y);\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tif (!isParameter)\n\t\t\toffset = this.getParameterAt(offset);\n\t\treturn offset >= 0 && offset <= 1 && new CurveLocation(this, offset);\n\t},\n\n\tgetLocationOf: function() {\n\t\treturn this.getLocationAt(this.getParameterOf(Point.read(arguments)),\n\t\t\t\ttrue);\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tvalues = this.getValues(),\n\t\t\tcount = 100,\n\t\t\tminDist = Infinity,\n\t\t\tminT = 0;\n\n\t\tfunction refine(t) {\n\t\t\tif (t >= 0 && t <= 1) {\n\t\t\t\tvar dist = point.getDistance(\n\t\t\t\t\t\tCurve.evaluate(values, t, 0), true);\n\t\t\t\tif (dist < minDist) {\n\t\t\t\t\tminDist = dist;\n\t\t\t\t\tminT = t;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= count; i++)\n\t\t\trefine(i / count);\n\n\t\tvar step = 1 / (count * 2);\n\t\twhile (step > 0.000001) {\n\t\t\tif (!refine(minT - step) && !refine(minT + step))\n\t\t\t\tstep /= 2;\n\t\t}\n\t\tvar pt = Curve.evaluate(values, minT, 0);\n\t\treturn new CurveLocation(this, minT, pt, null, null, null,\n\t\t\t\tpoint.getDistance(pt));\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n\n}),\nnew function() {\n\n\tfunction getLengthIntegrand(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\n\t\t\tax = 9 * (c1x - c2x) + 3 * (p2x - p1x),\n\t\t\tbx = 6 * (p1x + c2x) - 12 * c1x,\n\t\t\tcx = 3 * (c1x - p1x),\n\n\t\t\tay = 9 * (c1y - c2y) + 3 * (p2y - p1y),\n\t\t\tby = 6 * (p1y + c2y) - 12 * c1y,\n\t\t\tcy = 3 * (c1y - p1y);\n\n\t\treturn function(t) {\n\t\t\tvar dx = (ax * t + bx) * t + cx,\n\t\t\t\tdy = (ay * t + by) * t + cy;\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t};\n\t}\n\n\tfunction getIterations(a, b) {\n\t\treturn Math.max(2, Math.min(16, Math.ceil(Math.abs(b - a) * 32)));\n\t}\n\n\treturn {\n\t\tstatics: true,\n\n\t\tgetLength: function(v, a, b) {\n\t\t\tif (a === undefined)\n\t\t\t\ta = 0;\n\t\t\tif (b === undefined)\n\t\t\t\tb = 1;\n\t\t\tvar isZero = Numerical.isZero;\n\t\t\tif (a === 0 && b === 1\n\t\t\t\t\t&& isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t\t&& isZero(v[6] - v[4]) && isZero(v[7] - v[5])) {\n\t\t\t\tvar dx = v[6] - v[0],\n\t\t\t\t\tdy = v[7] - v[1];\n\t\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t\t}\n\t\t\tvar ds = getLengthIntegrand(v);\n\t\t\treturn Numerical.integrate(ds, a, b, getIterations(a, b));\n\t\t},\n\n\t\tgetParameterAt: function(v, offset, start) {\n\t\t\tif (start === undefined)\n\t\t\t\tstart = offset < 0 ? 1 : 0\n\t\t\tif (offset === 0)\n\t\t\t\treturn start;\n\t\t\tvar forward = offset > 0,\n\t\t\t\ta = forward ? start : 0,\n\t\t\t\tb = forward ? 1 : start,\n\t\t\t\tds = getLengthIntegrand(v),\n\t\t\t\trangeLength = Numerical.integrate(ds, a, b,\n\t\t\t\t\t\tgetIterations(a, b));\n\t\t\tif (Math.abs(offset) >= rangeLength)\n\t\t\t\treturn forward ? b : a;\n\t\t\tvar guess = offset / rangeLength,\n\t\t\t\tlength = 0;\n\t\t\tfunction f(t) {\n\t\t\t\tlength += Numerical.integrate(ds, start, t,\n\t\t\t\t\t\tgetIterations(start, t));\n\t\t\t\tstart = t;\n\t\t\t\treturn length - offset;\n\t\t\t}\n\t\t\treturn Numerical.findRoot(f, ds, start + guess, a, b, 16,\n\t\t\t\t\t0.000001);\n\t\t}\n\t};\n}, new function() {\n\tfunction addLocation(locations, include, curve1, t1, point1, curve2, t2,\n\t\t\tpoint2) {\n\t\tvar loc = new CurveLocation(curve1, t1, point1, curve2, t2, point2);\n\t\tif (!include || include(loc))\n\t\t\tlocations.push(loc);\n\t}\n\n\tfunction addCurveIntersections(v1, v2, curve1, curve2, locations, include,\n\t\t\ttMin, tMax, uMin, uMax, oldTDiff, reverse, recursion) {\n\t\tif (recursion > 32)\n\t\t\treturn;\n\t\tvar q0x = v2[0], q0y = v2[1], q3x = v2[6], q3y = v2[7],\n\t\t\ttolerance = 0.000001,\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\td1 = getSignedDistance(q0x, q0y, q3x, q3y, v2[2], v2[3]) || 0,\n\t\t\td2 = getSignedDistance(q0x, q0y, q3x, q3y, v2[4], v2[5]) || 0,\n\t\t\tfactor = d1 * d2 > 0 ? 3 / 4 : 4 / 9,\n\t\t\tdMin = factor * Math.min(0, d1, d2),\n\t\t\tdMax = factor * Math.max(0, d1, d2),\n\t\t\tdp0 = getSignedDistance(q0x, q0y, q3x, q3y, v1[0], v1[1]),\n\t\t\tdp1 = getSignedDistance(q0x, q0y, q3x, q3y, v1[2], v1[3]),\n\t\t\tdp2 = getSignedDistance(q0x, q0y, q3x, q3y, v1[4], v1[5]),\n\t\t\tdp3 = getSignedDistance(q0x, q0y, q3x, q3y, v1[6], v1[7]),\n\t\t\ttMinNew, tMaxNew, tDiff;\n\t\tif (q0x === q3x && uMax - uMin <= tolerance && recursion > 3) {\n\t\t\ttMaxNew = tMinNew = (tMax + tMin) / 2;\n\t\t\ttDiff = 0;\n\t\t} else {\n\t\t\tvar hull = getConvexHull(dp0, dp1, dp2, dp3),\n\t\t\t\ttop = hull[0],\n\t\t\t\tbottom = hull[1],\n\t\t\t\ttMinClip, tMaxClip;\n\t\t\ttMinClip = clipConvexHull(top, bottom, dMin, dMax);\n\t\t\ttop.reverse();\n\t\t\tbottom.reverse();\n\t\t\ttMaxClip = clipConvexHull(top, bottom, dMin, dMax);\n\t\t\tif (tMinClip == null || tMaxClip == null)\n\t\t\t\treturn;\n\t\t\tv1 = Curve.getPart(v1, tMinClip, tMaxClip);\n\t\t\ttDiff = tMaxClip - tMinClip;\n\t\t\ttMinNew = tMax * tMinClip + tMin * (1 - tMinClip);\n\t\t\ttMaxNew = tMax * tMaxClip + tMin * (1 - tMaxClip);\n\t\t}\n\t\tif (oldTDiff > 0.5 && tDiff > 0.5) {\n\t\t\tif (tMaxNew - tMinNew > uMax - uMin) {\n\t\t\t\tvar parts = Curve.subdivide(v1, 0.5),\n\t\t\t\t\tt = tMinNew + (tMaxNew - tMinNew) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[0], curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, tMinNew, t, tDiff, !reverse, ++recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[1], curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, t, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t} else {\n\t\t\t\tvar parts = Curve.subdivide(v2, 0.5),\n\t\t\t\t\tt = uMin + (uMax - uMin) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[0], v1, curve2, curve1, locations, include,\n\t\t\t\t\tuMin, t, tMinNew, tMaxNew, tDiff, !reverse, ++recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[1], v1, curve2, curve1, locations, include,\n\t\t\t\t\tt, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t}\n\t\t} else if (Math.max(uMax - uMin, tMaxNew - tMinNew) < tolerance) {\n\t\t\tvar t1 = tMinNew + (tMaxNew - tMinNew) / 2,\n\t\t\t\tt2 = uMin + (uMax - uMin) / 2;\n\t\t\tif (reverse) {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0),\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0));\n\t\t\t} else {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0),\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0));\n\t\t\t}\n\t\t} else if (tDiff > 0) {\n\t\t\taddCurveIntersections(v2, v1, curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, tMinNew, tMaxNew, tDiff, !reverse, ++recursion);\n\t\t}\n\t}\n\n\tfunction getConvexHull(dq0, dq1, dq2, dq3) {\n\t\tvar p0 = [ 0, dq0 ],\n\t\t\tp1 = [ 1 / 3, dq1 ],\n\t\t\tp2 = [ 2 / 3, dq2 ],\n\t\t\tp3 = [ 1, dq3 ],\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\tdist1 = getSignedDistance(0, dq0, 1, dq3, 1 / 3, dq1),\n\t\t\tdist2 = getSignedDistance(0, dq0, 1, dq3, 2 / 3, dq2),\n\t\t\tflip = false,\n\t\t\thull;\n\t\tif (dist1 * dist2 < 0) {\n\t\t\thull = [[p0, p1, p3], [p0, p2, p3]];\n\t\t\tflip = dist1 < 0;\n\t\t} else {\n\t\t\tvar pmax, cross = 0,\n\t\t\t\tdistZero = dist1 === 0 || dist2 === 0;\n\t\t\tif (Math.abs(dist1) > Math.abs(dist2)) {\n\t\t\t\tpmax = p1;\n\t\t\t\tcross = (dq3 - dq2 - (dq3 - dq0) / 3)\n\t\t\t\t\t\t* (2 * (dq3 - dq2) - dq3 + dq1) / 3;\n\t\t\t} else {\n\t\t\t\tpmax = p2;\n\t\t\t\tcross = (dq1 - dq0 + (dq0 - dq3) / 3)\n\t\t\t\t\t\t* (-2 * (dq0 - dq1) + dq0 - dq2) / 3;\n\t\t\t}\n\t\t\thull = cross < 0 || distZero\n\t\t\t\t\t? [[p0, pmax, p3], [p0, p3]]\n\t\t\t\t\t: [[p0, p1, p2, p3], [p0, p3]];\n\t\t\tflip = dist1 ? dist1 < 0 : dist2 < 0;\n\t\t}\n\t\treturn flip ? hull.reverse() : hull;\n\t}\n\n\tfunction clipConvexHull(hullTop, hullBottom, dMin, dMax) {\n\t\tif (hullTop[0][1] < dMin) {\n\t\t\treturn clipConvexHullPart(hullTop, true, dMin);\n\t\t} else if (hullBottom[0][1] > dMax) {\n\t\t\treturn clipConvexHullPart(hullBottom, false, dMax);\n\t\t} else {\n\t\t\treturn hullTop[0][0];\n\t\t}\n\t}\n\n\tfunction clipConvexHullPart(part, top, threshold) {\n\t\tvar px = part[0][0],\n\t\t\tpy = part[0][1];\n\t\tfor (var i = 1, l = part.length; i < l; i++) {\n\t\t\tvar qx = part[i][0],\n\t\t\t\tqy = part[i][1];\n\t\t\tif (top ? qy >= threshold : qy <= threshold)\n\t\t\t\treturn px + (threshold - py) * (qx - px) / (qy - py);\n\t\t\tpx = qx;\n\t\t\tpy = qy;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction addCurveLineIntersections(v1, v2, curve1, curve2, locations,\n\t\t\tinclude) {\n\t\tvar flip = Curve.isLinear(v1),\n\t\t\tvc = flip ? v2 : v1,\n\t\t\tvl = flip ? v1 : v2,\n\t\t\tlx1 = vl[0], ly1 = vl[1],\n\t\t\tlx2 = vl[6], ly2 = vl[7],\n\t\t\tldx = lx2 - lx1,\n\t\t\tldy = ly2 - ly1,\n\t\t\tangle = Math.atan2(-ldy, ldx),\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle),\n\t\t\trlx2 = ldx * cos - ldy * sin,\n\t\t\trvl = [0, 0, 0, 0, rlx2, 0, rlx2, 0],\n\t\t\trvc = [];\n\t\tfor(var i = 0; i < 8; i += 2) {\n\t\t\tvar x = vc[i] - lx1,\n\t\t\t\ty = vc[i + 1] - ly1;\n\t\t\trvc.push(\n\t\t\t\tx * cos - y * sin,\n\t\t\t\ty * cos + x * sin);\n\t\t}\n\t\tvar roots = [],\n\t\t\tcount = Curve.solveCubic(rvc, 1, 0, roots, 0, 1);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar tc = roots[i],\n\t\t\t\tx = Curve.evaluate(rvc, tc, 0).x;\n\t\t\tif (x >= 0 && x <= rlx2) {\n\t\t\t\tvar tl = Curve.getParameterOf(rvl, x, 0),\n\t\t\t\t\tt1 = flip ? tl : tc,\n\t\t\t\t\tt2 = flip ? tc : tl;\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve1, t1, Curve.evaluate(v1, t1, 0),\n\t\t\t\t\t\tcurve2, t2, Curve.evaluate(v2, t2, 0));\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addLineIntersection(v1, v2, curve1, curve2, locations, include) {\n\t\tvar point = Line.intersect(\n\t\t\t\tv1[0], v1[1], v1[6], v1[7],\n\t\t\t\tv2[0], v2[1], v2[6], v2[7]);\n\t\tif (point) {\n\t\t\tvar x = point.x,\n\t\t\t\ty = point.y;\n\t\t\taddLocation(locations, include,\n\t\t\t\t\tcurve1, Curve.getParameterOf(v1, x, y), point,\n\t\t\t\t\tcurve2, Curve.getParameterOf(v2, x, y), point);\n\t\t}\n\t}\n\n\treturn { statics: {\n\t\tgetIntersections: function(v1, v2, c1, c2, locations, include) {\n\t\t\tvar linear1 = Curve.isLinear(v1),\n\t\t\t\tlinear2 = Curve.isLinear(v2),\n\t\t\t\tc1p1 = c1.getPoint1(),\n\t\t\t\tc1p2 = c1.getPoint2(),\n\t\t\t\tc2p1 = c2.getPoint1(),\n\t\t\t\tc2p2 = c2.getPoint2(),\n\t\t\t\ttolerance = 0.000001;\n\t\t\tif (c1p1.isClose(c2p1, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 0, c1p1, c2, 0, c1p1);\n\t\t\tif (c1p1.isClose(c2p2, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 0, c1p1, c2, 1, c1p1);\n\t\t\t(linear1 && linear2\n\t\t\t\t? addLineIntersection\n\t\t\t\t: linear1 || linear2\n\t\t\t\t\t? addCurveLineIntersections\n\t\t\t\t\t: addCurveIntersections)(\n\t\t\t\t\t\tv1, v2, c1, c2, locations, include,\n\t\t\t\t\t\t0, 1, 0, 1, 0, false, 0);\n\t\t\tif (c1p2.isClose(c2p1, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 1, c1p2, c2, 0, c1p2);\n\t\t\tif (c1p2.isClose(c2p2, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 1, c1p2, c2, 1, c1p2);\n\t\t\treturn locations;\n\t\t},\n\n\t\tfilterIntersections: function(locations, _expand) {\n\t\t\tvar last = locations.length - 1,\n\t\t\t\ttMax = 1 - 0.000001;\n\t\t\tfor (var i = last; i >= 0; i--) {\n\t\t\t\tvar loc = locations[i],\n\t\t\t\t\tnext = loc._curve.getNext(),\n\t\t\t\t\tnext2 = loc._curve2.getNext();\n\t\t\t\tif (next && loc._parameter >= tMax) {\n\t\t\t\t\tloc._parameter = 0;\n\t\t\t\t\tloc._curve = next;\n\t\t\t\t}\n\t\t\t\tif (next2 && loc._parameter2 >= tMax) {\n\t\t\t\t\tloc._parameter2 = 0;\n\t\t\t\t\tloc._curve2 = next2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction compare(loc1, loc2) {\n\t\t\t\tvar path1 = loc1.getPath(),\n\t\t\t\t\tpath2 = loc2.getPath();\n\t\t\t\treturn path1 === path2\n\t\t\t\t\t\t? (loc1.getIndex() + loc1.getParameter())\n\t\t\t\t\t\t\t\t- (loc2.getIndex() + loc2.getParameter())\n\t\t\t\t\t\t: path1._id - path2._id;\n\t\t\t}\n\n\t\t\tif (last > 0) {\n\t\t\t\tlocations.sort(compare);\n\t\t\t\tfor (var i = last; i > 0; i--) {\n\t\t\t\t\tif (locations[i].equals(locations[i - 1])) {\n\t\t\t\t\t\tlocations.splice(i, 1);\n\t\t\t\t\t\tlast--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_expand) {\n\t\t\t\tfor (var i = last; i >= 0; i--)\n\t\t\t\t\tlocations.push(locations[i].getIntersection());\n\t\t\t\tlocations.sort(compare);\n\t\t\t}\n\t\t\treturn locations;\n\t\t}\n\t}};\n});\n\nvar CurveLocation = Base.extend({\n\t_class: 'CurveLocation',\n\tbeans: true,\n\n\tinitialize: function CurveLocation(curve, parameter, point, _curve2,\n\t\t\t_parameter2, _point2, _distance) {\n\t\tthis._id = CurveLocation._id = (CurveLocation._id || 0) + 1;\n\t\tthis._curve = curve;\n\t\tthis._segment1 = curve._segment1;\n\t\tthis._segment2 = curve._segment2;\n\t\tthis._parameter = parameter;\n\t\tthis._point = point;\n\t\tthis._curve2 = _curve2;\n\t\tthis._parameter2 = _parameter2;\n\t\tthis._point2 = _point2;\n\t\tthis._distance = _distance;\n\t},\n\n\tgetSegment: function(_preferFirst) {\n\t\tif (!this._segment) {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\tparameter = this.getParameter();\n\t\t\tif (parameter === 1) {\n\t\t\t\tthis._segment = curve._segment2;\n\t\t\t} else if (parameter === 0 || _preferFirst) {\n\t\t\t\tthis._segment = curve._segment1;\n\t\t\t} else if (parameter == null) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthis._segment = curve.getPartLength(0, parameter)\n\t\t\t\t\t< curve.getPartLength(parameter, 1)\n\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t}\n\t\treturn this._segment;\n\t},\n\n\tgetCurve: function(_uncached) {\n\t\tif (!this._curve || _uncached) {\n\t\t\tthis._curve = this._segment1.getCurve();\n\t\t\tif (this._curve.getParameterOf(this._point) == null)\n\t\t\t\tthis._curve = this._segment2.getPrevious().getCurve();\n\t\t}\n\t\treturn this._curve;\n\t},\n\n\tgetIntersection: function() {\n\t\tvar intersection = this._intersection;\n\t\tif (!intersection && this._curve2) {\n\t\t\tvar param = this._parameter2;\n\t\t\tthis._intersection = intersection = new CurveLocation(\n\t\t\t\t\tthis._curve2, param, this._point2 || this._point, this);\n\t\t\tintersection._intersection = this;\n\t\t}\n\t\treturn intersection;\n\t},\n\n\tgetPath: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve._path;\n\t},\n\n\tgetIndex: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve.getIndex();\n\t},\n\n\tgetOffset: function() {\n\t\tvar path = this.getPath();\n\t\treturn path ? path._getOffset(this) : this.getCurveOffset();\n\t},\n\n\tgetCurveOffset: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tparameter = this.getParameter();\n\t\treturn parameter != null && curve && curve.getPartLength(0, parameter);\n\t},\n\n\tgetParameter: function(_uncached) {\n\t\tif ((this._parameter == null || _uncached) && this._point) {\n\t\t\tvar curve = this.getCurve(_uncached);\n\t\t\tthis._parameter = curve && curve.getParameterOf(this._point);\n\t\t}\n\t\treturn this._parameter;\n\t},\n\n\tgetPoint: function(_uncached) {\n\t\tif ((!this._point || _uncached) && this._parameter != null) {\n\t\t\tvar curve = this.getCurve(_uncached);\n\t\t\tthis._point = curve && curve.getPointAt(this._parameter, true);\n\t\t}\n\t\treturn this._point;\n\t},\n\n\tgetDistance: function() {\n\t\treturn this._distance;\n\t},\n\n\tdivide: function() {\n\t\tvar curve = this.getCurve(true);\n\t\treturn curve && curve.divide(this.getParameter(true), true);\n\t},\n\n\tsplit: function() {\n\t\tvar curve = this.getCurve(true);\n\t\treturn curve && curve.split(this.getParameter(true), true);\n\t},\n\n\tequals: function(loc) {\n\t\tvar abs = Math.abs,\n\t\t\ttolerance = 0.000001;\n\t\treturn this === loc\n\t\t\t\t|| loc\n\t\t\t\t\t&& this._curve === loc._curve\n\t\t\t\t\t&& this._curve2 === loc._curve2\n\t\t\t\t\t&& abs(this._parameter - loc._parameter) <= tolerance\n\t\t\t\t\t&& abs(this._parameter2 - loc._parameter2) <= tolerance\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [],\n\t\t\tpoint = this.getPoint(),\n\t\t\tf = Formatter.instance;\n\t\tif (point)\n\t\t\tparts.push('point: ' + point);\n\t\tvar index = this.getIndex();\n\t\tif (index != null)\n\t\t\tparts.push('index: ' + index);\n\t\tvar parameter = this.getParameter();\n\t\tif (parameter != null)\n\t\t\tparts.push('parameter: ' + f.number(parameter));\n\t\tif (this._distance != null)\n\t\t\tparts.push('distance: ' + f.number(this._distance));\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t}\n}, Base.each(['getTangent', 'getNormal', 'getCurvature'], function(name) {\n\tvar get = name + 'At';\n\tthis[name] = function() {\n\t\tvar parameter = this.getParameter(),\n\t\t\tcurve = this.getCurve();\n\t\treturn parameter != null && curve && curve[get](parameter, true);\n\t};\n}, {}));\n\nvar PathItem = Item.extend({\n\t_class: 'PathItem',\n\n\tinitialize: function PathItem() {\n\t},\n\n\tgetIntersections: function(path, _matrix, _expand) {\n\t\tif (this === path)\n\t\t\tpath = null;\n\t\tvar locations = [],\n\t\t\tcurves1 = this.getCurves(),\n\t\t\tcurves2 = path ? path.getCurves() : curves1,\n\t\t\tmatrix1 = this._matrix.orNullIfIdentity(),\n\t\t\tmatrix2 = path ? (_matrix || path._matrix).orNullIfIdentity()\n\t\t\t\t: matrix1,\n\t\t\tlength1 = curves1.length,\n\t\t\tlength2 = path ? curves2.length : length1,\n\t\t\tvalues2 = [],\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tif (path && !this.getBounds(matrix1).touches(path.getBounds(matrix2)))\n\t\t\treturn [];\n\t\tfor (var i = 0; i < length2; i++)\n\t\t\tvalues2[i] = curves2[i].getValues(matrix2);\n\t\tfor (var i = 0; i < length1; i++) {\n\t\t\tvar curve1 = curves1[i],\n\t\t\t\tvalues1 = path ? curve1.getValues(matrix1) : values2[i];\n\t\t\tif (!path) {\n\t\t\t\tvar seg1 = curve1.getSegment1(),\n\t\t\t\t\tseg2 = curve1.getSegment2(),\n\t\t\t\t\th1 = seg1._handleOut,\n\t\t\t\t\th2 = seg2._handleIn;\n\t\t\t\tif (new Line(seg1._point.subtract(h1), h1.multiply(2), true)\n\t\t\t\t\t\t.intersect(new Line(seg2._point.subtract(h2),\n\t\t\t\t\t\th2.multiply(2), true), false)) {\n\t\t\t\t\tvar parts = Curve.subdivide(values1);\n\t\t\t\t\tCurve.getIntersections(\n\t\t\t\t\t\tparts[0], parts[1], curve1, curve1, locations,\n\t\t\t\t\t\tfunction(loc) {\n\t\t\t\t\t\t\tif (loc._parameter <= tMax) {\n\t\t\t\t\t\t\t\tloc._parameter /= 2;\n\t\t\t\t\t\t\t\tloc._parameter2 = 0.5 + loc._parameter2 / 2;\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var j = path ? 0 : i + 1; j < length2; j++) {\n\t\t\t\tCurve.getIntersections(\n\t\t\t\t\tvalues1, values2[j], curve1, curves2[j], locations,\n\t\t\t\t\t!path && (j === i + 1 || j === length2 - 1 && i === 0)\n\t\t\t\t\t\t&& function(loc) {\n\t\t\t\t\t\t\tvar t = loc._parameter;\n\t\t\t\t\t\t\treturn t >= tMin && t <= tMax;\n\t\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn Curve.filterIntersections(locations, _expand);\n\t},\n\n\t_asPathItem: function() {\n\t\treturn this;\n\t},\n\n\tsetPathData: function(data) {\n\n\t\tvar parts = data.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/ig),\n\t\t\tcoords,\n\t\t\trelative = false,\n\t\t\tprevious,\n\t\t\tcontrol,\n\t\t\tcurrent = new Point(),\n\t\t\tstart = new Point();\n\n\t\tfunction getCoord(index, coord) {\n\t\t\tvar val = +coords[index];\n\t\t\tif (relative)\n\t\t\t\tval += current[coord];\n\t\t\treturn val;\n\t\t}\n\n\t\tfunction getPoint(index) {\n\t\t\treturn new Point(\n\t\t\t\tgetCoord(index, 'x'),\n\t\t\t\tgetCoord(index + 1, 'y')\n\t\t\t);\n\t\t}\n\n\t\tthis.clear();\n\n\t\tfor (var i = 0, l = parts && parts.length; i < l; i++) {\n\t\t\tvar part = parts[i],\n\t\t\t\tcommand = part[0],\n\t\t\t\tlower = command.toLowerCase();\n\t\t\tcoords = part.match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g);\n\t\t\tvar length = coords && coords.length;\n\t\t\trelative = command === lower;\n\t\t\tif (previous === 'z' && !/[mz]/.test(lower))\n\t\t\t\tthis.moveTo(current = start);\n\t\t\tswitch (lower) {\n\t\t\tcase 'm':\n\t\t\tcase 'l':\n\t\t\t\tvar move = lower === 'm';\n\t\t\t\tif (move && previous && previous !== 'z')\n\t\t\t\t\tthis.closePath(true);\n\t\t\t\tfor (var j = 0; j < length; j += 2)\n\t\t\t\t\tthis[j === 0 && move ? 'moveTo' : 'lineTo'](\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\tcontrol = current;\n\t\t\t\tif (move)\n\t\t\t\t\tstart = current;\n\t\t\t\tbreak;\n\t\t\tcase 'h':\n\t\t\tcase 'v':\n\t\t\t\tvar coord = lower === 'h' ? 'x' : 'y';\n\t\t\t\tfor (var j = 0; j < length; j++) {\n\t\t\t\t\tcurrent[coord] = getCoord(j, coord);\n\t\t\t\t\tthis.lineTo(current);\n\t\t\t\t}\n\t\t\t\tcontrol = current;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tfor (var j = 0; j < length; j += 6) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\tgetPoint(j),\n\t\t\t\t\t\t\tcontrol = getPoint(j + 2),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 4));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\t/[cs]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current,\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'q':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 't':\n\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = (/[qt]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current),\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'a':\n\t\t\t\tfor (var j = 0; j < length; j += 7) {\n\t\t\t\t\tthis.arcTo(current = getPoint(j + 5),\n\t\t\t\t\t\t\tnew Size(+coords[j], +coords[j + 1]),\n\t\t\t\t\t\t\t+coords[j + 2], +coords[j + 4], +coords[j + 3]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'z':\n\t\t\t\tthis.closePath(true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprevious = lower;\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_contains: function(point) {\n\t\tvar winding = this._getWinding(point, false, true);\n\t\treturn !!(this.getWindingRule() === 'evenodd' ? winding & 1 : winding);\n\t}\n\n});\n\nvar Path = PathItem.extend({\n\t_class: 'Path',\n\t_serializeFields: {\n\t\tsegments: [],\n\t\tclosed: false\n\t},\n\n\tinitialize: function Path(arg) {\n\t\tthis._closed = false;\n\t\tthis._segments = [];\n\t\tvar segments = Array.isArray(arg)\n\t\t\t? typeof arg[0] === 'object'\n\t\t\t\t? arg\n\t\t\t\t: arguments\n\t\t\t: arg && (arg.size === undefined && (arg.x !== undefined\n\t\t\t\t\t|| arg.point !== undefined))\n\t\t\t\t? arguments\n\t\t\t\t: null;\n\t\tif (segments && segments.length > 0) {\n\t\t\tthis.setSegments(segments);\n\t\t} else {\n\t\t\tthis._curves = undefined;\n\t\t\tthis._selectedSegmentState = 0;\n\t\t\tif (!segments && typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t\targ = null;\n\t\t\t}\n\t\t}\n\t\tthis._initialize(!segments && arg);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._closed === item._closed\n\t\t\t\t&& Base.equals(this._segments, item._segments);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Path(Item.NO_INSERT);\n\t\tcopy.setSegments(this._segments);\n\t\tcopy._closed = this._closed;\n\t\tif (this._clockwise !== undefined)\n\t\t\tcopy._clockwise = this._clockwise;\n\t\treturn this._clone(copy, insert);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 8) {\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tparent._currentPath = undefined;\n\t\t\tthis._length = this._clockwise = undefined;\n\t\t\tif (this._curves && !(flags & 16)) {\n\t\t\t\tfor (var i = 0, l = this._curves.length; i < l; i++)\n\t\t\t\t\tthis._curves[i]._changed();\n\t\t\t}\n\t\t\tthis._monoCurves = undefined;\n\t\t} else if (flags & 32) {\n\t\t\tthis._bounds = undefined;\n\t\t}\n\t},\n\n\tgetStyle: function() {\n\t\tvar parent = this._parent;\n\t\treturn (parent instanceof CompoundPath ? parent : this)._style;\n\t},\n\n\tgetSegments: function() {\n\t\treturn this._segments;\n\t},\n\n\tsetSegments: function(segments) {\n\t\tvar fullySelected = this.isFullySelected();\n\t\tthis._segments.length = 0;\n\t\tthis._selectedSegmentState = 0;\n\t\tthis._curves = undefined;\n\t\tif (segments && segments.length > 0)\n\t\t\tthis._add(Segment.readAll(segments));\n\t\tif (fullySelected)\n\t\t\tthis.setFullySelected(true);\n\t},\n\n\tgetFirstSegment: function() {\n\t\treturn this._segments[0];\n\t},\n\n\tgetLastSegment: function() {\n\t\treturn this._segments[this._segments.length - 1];\n\t},\n\n\tgetCurves: function() {\n\t\tvar curves = this._curves,\n\t\t\tsegments = this._segments;\n\t\tif (!curves) {\n\t\t\tvar length = this._countCurves();\n\t\t\tcurves = this._curves = new Array(length);\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\tcurves[i] = new Curve(this, segments[i],\n\t\t\t\t\tsegments[i + 1] || segments[0]);\n\t\t}\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\treturn this.getCurves()[0];\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar curves = this.getCurves();\n\t\treturn curves[curves.length - 1];\n\t},\n\n\tisClosed: function() {\n\t\treturn this._closed;\n\t},\n\n\tsetClosed: function(closed) {\n\t\tif (this._closed != (closed = !!closed)) {\n\t\t\tthis._closed = closed;\n\t\t\tif (this._curves) {\n\t\t\t\tvar length = this._curves.length = this._countCurves();\n\t\t\t\tif (closed)\n\t\t\t\t\tthis._curves[length - 1] = new Curve(this,\n\t\t\t\t\t\tthis._segments[length - 1], this._segments[0]);\n\t\t\t}\n\t\t\tthis._changed(25);\n\t\t}\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar segments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tf = new Formatter(_precision),\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY,\n\t\t\tparts = [];\n\n\t\tfunction addSegment(segment, skipLine) {\n\t\t\tsegment._transformCoordinates(_matrix, coords, false);\n\t\t\tcurX = coords[0];\n\t\t\tcurY = coords[1];\n\t\t\tif (first) {\n\t\t\t\tparts.push('M' + f.pair(curX, curY));\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tinX = coords[2];\n\t\t\t\tinY = coords[3];\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tif (!skipLine)\n\t\t\t\t\t\tparts.push('l' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t} else {\n\t\t\t\t\tparts.push('c' + f.pair(outX - prevX, outY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(inX - prevX, inY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\toutX = coords[4];\n\t\t\toutY = coords[5];\n\t\t}\n\n\t\tif (length === 0)\n\t\t\treturn '';\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\taddSegment(segments[i]);\n\t\tif (this._closed && length > 0) {\n\t\t\taddSegment(segments[0], true);\n\t\t\tparts.push('z');\n\t\t}\n\t\treturn parts.join('');\n\t}\n}, {\n\n\tisEmpty: function() {\n\t\treturn this._segments.length === 0;\n\t},\n\n\tisPolygon: function() {\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tif (!this._segments[i].isLinear())\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t_transformContent: function(matrix) {\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++)\n\t\t\tthis._segments[i]._transformCoordinates(matrix, coords, true);\n\t\treturn true;\n\t},\n\n\t_add: function(segs, index) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tamount = segs.length,\n\t\t\tappend = index == null,\n\t\t\tindex = append ? segments.length : index;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = segs[i];\n\t\t\tif (segment._path)\n\t\t\t\tsegment = segs[i] = segment.clone();\n\t\t\tsegment._path = this;\n\t\t\tsegment._index = index + i;\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, 0, segment._selectionState);\n\t\t}\n\t\tif (append) {\n\t\t\tsegments.push.apply(segments, segs);\n\t\t} else {\n\t\t\tsegments.splice.apply(segments, [index, 0].concat(segs));\n\t\t\tfor (var i = index + amount, l = segments.length; i < l; i++)\n\t\t\t\tsegments[i]._index = i;\n\t\t}\n\t\tif (curves || segs._curves) {\n\t\t\tif (!curves)\n\t\t\t\tcurves = this._curves = [];\n\t\t\tvar from = index > 0 ? index - 1 : index,\n\t\t\t\tstart = from,\n\t\t\t\tto = Math.min(from + amount, this._countCurves());\n\t\t\tif (segs._curves) {\n\t\t\t\tcurves.splice.apply(curves, [from, 0].concat(segs._curves));\n\t\t\t\tstart += segs._curves.length;\n\t\t\t}\n\t\t\tfor (var i = start; i < to; i++)\n\t\t\t\tcurves.splice(i, 0, new Curve(this, null, null));\n\t\t\tthis._adjustCurves(from, to);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn segs;\n\t},\n\n\t_adjustCurves: function(from, to) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcurve;\n\t\tfor (var i = from; i < to; i++) {\n\t\t\tcurve = curves[i];\n\t\t\tcurve._path = this;\n\t\t\tcurve._segment1 = segments[i];\n\t\t\tcurve._segment2 = segments[i + 1] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[this._closed && from === 0 ? segments.length - 1\n\t\t\t\t: from - 1]) {\n\t\t\tcurve._segment2 = segments[from] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[to]) {\n\t\t\tcurve._segment1 = segments[to];\n\t\t\tcurve._changed();\n\t\t}\n\t},\n\n\t_countCurves: function() {\n\t\tvar length = this._segments.length;\n\t\treturn !this._closed && length > 0 ? length - 1 : length;\n\t},\n\n\tadd: function(segment1 ) {\n\t\treturn arguments.length > 1 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments))\n\t\t\t: this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsert: function(index, segment1 ) {\n\t\treturn arguments.length > 2 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments, 1), index)\n\t\t\t: this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegment: function() {\n\t\treturn this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsertSegment: function(index ) {\n\t\treturn this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegments: function(segments) {\n\t\treturn this._add(Segment.readAll(segments));\n\t},\n\n\tinsertSegments: function(index, segments) {\n\t\treturn this._add(Segment.readAll(segments), index);\n\t},\n\n\tremoveSegment: function(index) {\n\t\treturn this.removeSegments(index, index + 1)[0] || null;\n\t},\n\n\tremoveSegments: function(from, to, _includeCurves) {\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._segments.length);\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcount = segments.length,\n\t\t\tremoved = segments.splice(from, to - from),\n\t\t\tamount = removed.length;\n\t\tif (!amount)\n\t\t\treturn removed;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = removed[i];\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, segment._selectionState, 0);\n\t\t\tsegment._index = segment._path = null;\n\t\t}\n\t\tfor (var i = from, l = segments.length; i < l; i++)\n\t\t\tsegments[i]._index = i;\n\t\tif (curves) {\n\t\t\tvar index = from > 0 && to === count + (this._closed ? 1 : 0)\n\t\t\t\t\t? from - 1\n\t\t\t\t\t: from,\n\t\t\t\tcurves = curves.splice(index, amount);\n\t\t\tif (_includeCurves)\n\t\t\t\tremoved._curves = curves.slice(1);\n\t\t\tthis._adjustCurves(index, index);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeSegments',\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tvar curves = this.getCurves();\n\t\t\tthis._length = 0;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\tthis._length += curves[i].getLength();\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\tvar curves = this.getCurves();\n\t\tvar area = 0;\n\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\tarea += curves[i].getArea();\n\t\treturn area;\n\t},\n\n\tisFullySelected: function() {\n\t\tvar length = this._segments.length;\n\t\treturn this._selected && length > 0 && this._selectedSegmentState\n\t\t\t\t=== length * 7;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tif (selected)\n\t\t\tthis._selectSegments(true);\n\t\tthis.setSelected(selected);\n\t},\n\n\tsetSelected: function setSelected(selected) {\n\t\tif (!selected)\n\t\t\tthis._selectSegments(false);\n\t\tsetSelected.base.call(this, selected);\n\t},\n\n\t_selectSegments: function(selected) {\n\t\tvar length = this._segments.length;\n\t\tthis._selectedSegmentState = selected\n\t\t\t\t? length * 7 : 0;\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tthis._segments[i]._selectionState = selected\n\t\t\t\t\t? 7 : 0;\n\t},\n\n\t_updateSelection: function(segment, oldState, newState) {\n\t\tsegment._selectionState = newState;\n\t\tvar total = this._selectedSegmentState += newState - oldState;\n\t\tif (total > 0)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tflatten: function(maxDistance) {\n\t\tvar iterator = new PathIterator(this, 64, 0.1),\n\t\t\tpos = 0,\n\t\t\tstep = iterator.length / Math.ceil(iterator.length / maxDistance),\n\t\t\tend = iterator.length + (this._closed ? -step : step) / 2;\n\t\tvar segments = [];\n\t\twhile (pos <= end) {\n\t\t\tsegments.push(new Segment(iterator.evaluate(pos, 0)));\n\t\t\tpos += step;\n\t\t}\n\t\tthis.setSegments(segments);\n\t},\n\n\treduce: function() {\n\t\tvar curves = this.getCurves();\n\t\tfor (var i = curves.length - 1; i >= 0; i--) {\n\t\t\tvar curve = curves[i];\n\t\t\tif (curve.isLinear() && curve.getLength() === 0)\n\t\t\t\tcurve.remove();\n\t\t}\n\t\treturn this;\n\t},\n\n\tsimplify: function(tolerance) {\n\t\tif (this._segments.length > 2) {\n\t\t\tvar fitter = new PathFitter(this, tolerance || 2.5);\n\t\t\tthis.setSegments(fitter.fit());\n\t\t}\n\t},\n\n\tsplit: function(index, parameter) {\n\t\tif (parameter === null)\n\t\t\treturn null;\n\t\tif (arguments.length === 1) {\n\t\t\tvar arg = index;\n\t\t\tif (typeof arg === 'number')\n\t\t\t\targ = this.getLocationAt(arg);\n\t\t\tif (!arg)\n\t\t\t\treturn null\n\t\t\tindex = arg.index;\n\t\t\tparameter = arg.parameter;\n\t\t}\n\t\tvar tolerance = 0.000001;\n\t\tif (parameter >= 1 - tolerance) {\n\t\t\tindex++;\n\t\t\tparameter--;\n\t\t}\n\t\tvar curves = this.getCurves();\n\t\tif (index >= 0 && index < curves.length) {\n\t\t\tif (parameter > tolerance) {\n\t\t\t\tcurves[index++].divide(parameter, true);\n\t\t\t}\n\t\t\tvar segs = this.removeSegments(index, this._segments.length, true),\n\t\t\t\tpath;\n\t\t\tif (this._closed) {\n\t\t\t\tthis.setClosed(false);\n\t\t\t\tpath = this;\n\t\t\t} else {\n\t\t\t\tpath = this._clone(new Path().insertAbove(this, true));\n\t\t\t}\n\t\t\tpath._add(segs, 0);\n\t\t\tthis.addSegment(segs[0]);\n\t\t\treturn path;\n\t\t}\n\t\treturn null;\n\t},\n\n\tisClockwise: function() {\n\t\tif (this._clockwise !== undefined)\n\t\t\treturn this._clockwise;\n\t\treturn Path.isClockwise(this._segments);\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() != (clockwise = !!clockwise))\n\t\t\tthis.reverse();\n\t\tthis._clockwise = clockwise;\n\t},\n\n\treverse: function() {\n\t\tthis._segments.reverse();\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tvar segment = this._segments[i];\n\t\t\tvar handleIn = segment._handleIn;\n\t\t\tsegment._handleIn = segment._handleOut;\n\t\t\tsegment._handleOut = handleIn;\n\t\t\tsegment._index = i;\n\t\t}\n\t\tthis._curves = null;\n\t\tif (this._clockwise !== undefined)\n\t\t\tthis._clockwise = !this._clockwise;\n\t\tthis._changed(9);\n\t},\n\n\tjoin: function(path) {\n\t\tif (path) {\n\t\t\tvar segments = path._segments,\n\t\t\t\tlast1 = this.getLastSegment(),\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\tif (!last2)\n\t\t\t\treturn this;\n\t\t\tif (last1 && last1._point.equals(last2._point))\n\t\t\t\tpath.reverse();\n\t\t\tvar first2 = path.getFirstSegment();\n\t\t\tif (last1 && last1._point.equals(first2._point)) {\n\t\t\t\tlast1.setHandleOut(first2._handleOut);\n\t\t\t\tthis._add(segments.slice(1));\n\t\t\t} else {\n\t\t\t\tvar first1 = this.getFirstSegment();\n\t\t\t\tif (first1 && first1._point.equals(first2._point))\n\t\t\t\t\tpath.reverse();\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\t\tif (first1 && first1._point.equals(last2._point)) {\n\t\t\t\t\tfirst1.setHandleIn(last2._handleIn);\n\t\t\t\t\tthis._add(segments.slice(0, segments.length - 1), 0);\n\t\t\t\t} else {\n\t\t\t\t\tthis._add(segments.slice());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (path.closed)\n\t\t\t\tthis._add([segments[0]]);\n\t\t\tpath.remove();\n\t\t}\n\t\tvar first = this.getFirstSegment(),\n\t\t\tlast = this.getLastSegment();\n\t\tif (first !== last && first._point.equals(last._point)) {\n\t\t\tfirst.setHandleIn(last._handleIn);\n\t\t\tlast.remove();\n\t\t\tthis.setClosed(true);\n\t\t}\n\t\treturn this;\n\t},\n\n\tinterpolate: function(path0, path1, coef) {\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tif ( !path0._segments[i] || !path1._segments[i] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis._segments[i].interpolate(\n\t\t\t\tpath0._segments[i],\n\t\t\t\tpath1._segments[i],\n\t\t\t\tcoef\n\t\t\t);\n\t\t}\n\n\t\tthis._changed(9);\n\t},\n\n\ttoShape: function(insert) {\n\t\tif (!this._closed)\n\t\t\treturn null;\n\n\t\tvar segments = this._segments,\n\t\t\ttype,\n\t\t\tsize,\n\t\t\tradius,\n\t\t\ttopCenter;\n\n\t\tfunction isColinear(i, j) {\n\t\t\treturn segments[i].isColinear(segments[j]);\n\t\t}\n\n\t\tfunction isOrthogonal(i) {\n\t\t\treturn segments[i].isOrthogonal();\n\t\t}\n\n\t\tfunction isArc(i) {\n\t\t\treturn segments[i].isArc();\n\t\t}\n\n\t\tfunction getDistance(i, j) {\n\t\t\treturn segments[i]._point.getDistance(segments[j]._point);\n\t\t}\n\n\t\tif (this.isPolygon() && segments.length === 4\n\t\t\t\t&& isColinear(0, 2) && isColinear(1, 3) && isOrthogonal(1)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(0, 3), getDistance(0, 1));\n\t\t\ttopCenter = segments[1]._point.add(segments[2]._point).divide(2);\n\t\t} else if (segments.length === 8 && isArc(0) && isArc(2) && isArc(4)\n\t\t\t\t&& isArc(6) && isColinear(1, 5) && isColinear(3, 7)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(1, 6), getDistance(0, 3));\n\t\t\tradius = size.subtract(new Size(getDistance(0, 7),\n\t\t\t\t\tgetDistance(1, 2))).divide(2);\n\t\t\ttopCenter = segments[3]._point.add(segments[4]._point).divide(2);\n\t\t} else if (segments.length === 4\n\t\t\t\t&& isArc(0) && isArc(1) && isArc(2) && isArc(3)) {\n\t\t\tif (Numerical.isZero(getDistance(0, 2) - getDistance(1, 3))) {\n\t\t\t\ttype = Shape.Circle;\n\t\t\t\tradius = getDistance(0, 2) / 2;\n\t\t\t} else {\n\t\t\t\ttype = Shape.Ellipse;\n\t\t\t\tradius = new Size(getDistance(2, 0) / 2, getDistance(3, 1) / 2);\n\t\t\t}\n\t\t\ttopCenter = segments[1]._point;\n\t\t}\n\n\t\tif (type) {\n\t\t\tvar center = this.getPosition(true),\n\t\t\t\tshape = new type({\n\t\t\t\t\tcenter: center,\n\t\t\t\t\tsize: size,\n\t\t\t\t\tradius: radius,\n\t\t\t\t\tinsert: false\n\t\t\t\t});\n\t\t\tshape.rotate(topCenter.subtract(center).getAngle() + 90);\n\t\t\tshape.setStyle(this._style);\n\t\t\tif (insert || insert === undefined)\n\t\t\t\tshape.insertAbove(this);\n\t\t\treturn shape;\n\t\t}\n\t\treturn null;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar that = this,\n\t\t\tstyle = this.getStyle(),\n\t\t\tsegments = this._segments,\n\t\t\tnumSegments = segments.length,\n\t\t\tclosed = this._closed,\n\t\t\ttolerancePadding = options._tolerancePadding,\n\t\t\tstrokePadding = tolerancePadding,\n\t\t\tjoin, cap, miterLimit,\n\t\t\tarea, loc, res,\n\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\thitFill = options.fill && style.hasFill(),\n\t\t\thitCurves = options.curves,\n\t\t\tradius = hitStroke\n\t\t\t\t\t? style.getStrokeWidth() / 2\n\t\t\t\t\t: hitFill && options.tolerance > 0 || hitCurves\n\t\t\t\t\t\t? 0 : null;\n\t\tif (radius !== null) {\n\t\t\tif (radius > 0) {\n\t\t\t\tjoin = style.getStrokeJoin();\n\t\t\t\tcap = style.getStrokeCap();\n\t\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\t\t\tstrokePadding = tolerancePadding.add(new Point(radius, radius));\n\t\t\t} else {\n\t\t\t\tjoin = cap = 'round';\n\t\t\t}\n\t\t}\n\n\t\tfunction isCloseEnough(pt, padding) {\n\t\t\treturn point.subtract(pt).divide(padding).length <= 1;\n\t\t}\n\n\t\tfunction checkSegmentPoint(seg, pt, name) {\n\t\t\tif (!options.selected || pt.isSelected()) {\n\t\t\t\tvar anchor = seg._point;\n\t\t\t\tif (pt !== anchor)\n\t\t\t\t\tpt = pt.add(anchor);\n\t\t\t\tif (isCloseEnough(pt, strokePadding)) {\n\t\t\t\t\treturn new HitResult(name, that, {\n\t\t\t\t\t\tsegment: seg,\n\t\t\t\t\t\tpoint: pt\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction checkSegmentPoints(seg, ends) {\n\t\t\treturn (ends || options.segments)\n\t\t\t\t&& checkSegmentPoint(seg, seg._point, 'segment')\n\t\t\t\t|| (!ends && options.handles) && (\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleIn, 'handle-in') ||\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleOut, 'handle-out'));\n\t\t}\n\n\t\tfunction addToArea(point) {\n\t\t\tarea.add(point);\n\t\t}\n\n\t\tfunction checkSegmentStroke(segment) {\n\t\t\tif (join !== 'round' || cap !== 'round') {\n\t\t\t\tarea = new Path({ internal: true, closed: true });\n\t\t\t\tif (closed || segment._index > 0\n\t\t\t\t\t\t&& segment._index < numSegments - 1) {\n\t\t\t\t\tif (join !== 'round' && (segment._handleIn.isZero()\n\t\t\t\t\t\t\t|| segment._handleOut.isZero()))\n\t\t\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit,\n\t\t\t\t\t\t\t\taddToArea, true);\n\t\t\t\t} else if (cap !== 'round') {\n\t\t\t\t\tPath._addSquareCap(segment, cap, radius, addToArea, true);\n\t\t\t\t}\n\t\t\t\tif (!area.isEmpty()) {\n\t\t\t\t\tvar loc;\n\t\t\t\t\treturn area.contains(point)\n\t\t\t\t\t\t|| (loc = area.getNearestLocation(point))\n\t\t\t\t\t\t\t&& isCloseEnough(loc.getPoint(), tolerancePadding);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn isCloseEnough(segment._point, strokePadding);\n\t\t}\n\n\t\tif (options.ends && !options.segments && !closed) {\n\t\t\tif (res = checkSegmentPoints(segments[0], true)\n\t\t\t\t\t|| checkSegmentPoints(segments[numSegments - 1], true))\n\t\t\t\treturn res;\n\t\t} else if (options.segments || options.handles) {\n\t\t\tfor (var i = 0; i < numSegments; i++)\n\t\t\t\tif (res = checkSegmentPoints(segments[i]))\n\t\t\t\t\treturn res;\n\t\t}\n\t\tif (radius !== null) {\n\t\t\tloc = this.getNearestLocation(point);\n\t\t\tif (loc) {\n\t\t\t\tvar parameter = loc.getParameter();\n\t\t\t\tif (parameter === 0 || parameter === 1 && numSegments > 1) {\n\t\t\t\t\tif (!checkSegmentStroke(loc.getSegment()))\n\t\t\t\t\t\tloc = null;\n\t\t\t\t} else if (!isCloseEnough(loc.getPoint(), strokePadding)) {\n\t\t\t\t\tloc = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!loc && join === 'miter' && numSegments > 1) {\n\t\t\t\tfor (var i = 0; i < numSegments; i++) {\n\t\t\t\t\tvar segment = segments[i];\n\t\t\t\t\tif (point.getDistance(segment._point) <= miterLimit\n\t\t\t\t\t\t\t&& checkSegmentStroke(segment)) {\n\t\t\t\t\t\tloc = segment.getLocation();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn !loc && hitFill && this._contains(point)\n\t\t\t\t|| loc && !hitStroke && !hitCurves\n\t\t\t\t\t? new HitResult('fill', this)\n\t\t\t\t\t: loc\n\t\t\t\t\t\t? new HitResult(hitStroke ? 'stroke' : 'curve', this, {\n\t\t\t\t\t\t\tlocation: loc,\n\t\t\t\t\t\t\tpoint: loc.getPoint()\n\t\t\t\t\t\t})\n\t\t\t\t\t\t: null;\n\t}\n\n}, Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar loc = this.getLocationAt(offset, isParameter);\n\t\t\treturn loc && loc[name]();\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\t_getOffset: function(location) {\n\t\tvar index = location && location.getIndex();\n\t\tif (index != null) {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\toffset = 0;\n\t\t\tfor (var i = 0; i < index; i++)\n\t\t\t\toffset += curves[i].getLength();\n\t\t\tvar curve = curves[index],\n\t\t\t\tparameter = location.getParameter();\n\t\t\tif (parameter > 0)\n\t\t\t\toffset += curve.getPartLength(0, parameter);\n\t\t\treturn offset;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocationOf: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves();\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getLocationOf(point);\n\t\t\tif (loc)\n\t\t\t\treturn loc;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tvar curves = this.getCurves(),\n\t\t\tlength = 0;\n\t\tif (isParameter) {\n\t\t\tvar index = ~~offset;\n\t\t\treturn curves[index].getLocationAt(offset - index, true);\n\t\t}\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar start = length,\n\t\t\t\tcurve = curves[i];\n\t\t\tlength += curve.getLength();\n\t\t\tif (length > offset) {\n\t\t\t\treturn curve.getLocationAt(offset - start);\n\t\t\t}\n\t\t}\n\t\tif (offset <= this.getLength())\n\t\t\treturn new CurveLocation(curves[curves.length - 1], 1);\n\t\treturn null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves(),\n\t\t\tminDist = Infinity,\n\t\t\tminLoc = null;\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getNearestLocation(point);\n\t\t\tif (loc._distance < minDist) {\n\t\t\t\tminDist = loc._distance;\n\t\t\t\tminLoc = loc;\n\t\t\t}\n\t\t}\n\t\treturn minLoc;\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n}), new function() {\n\n\tfunction drawHandles(ctx, segments, matrix, size) {\n\t\tvar half = size / 2;\n\n\t\tfunction drawHandle(index) {\n\t\t\tvar hX = coords[index],\n\t\t\t\thY = coords[index + 1];\n\t\t\tif (pX != hX || pY != hY) {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(pX, pY);\n\t\t\t\tctx.lineTo(hX, hY);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t}\n\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tvar state = segment._selectionState,\n\t\t\t\tpX = coords[0],\n\t\t\t\tpY = coords[1];\n\t\t\tif (state & 1)\n\t\t\t\tdrawHandle(2);\n\t\t\tif (state & 2)\n\t\t\t\tdrawHandle(4);\n\t\t\tctx.fillRect(pX - half, pY - half, size, size);\n\t\t\tif (!(state & 4)) {\n\t\t\t\tvar fillStyle = ctx.fillStyle;\n\t\t\t\tctx.fillStyle = '#ffffff';\n\t\t\t\tctx.fillRect(pX - half + 1, pY - half + 1, size - 2, size - 2);\n\t\t\t\tctx.fillStyle = fillStyle;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawSegments(ctx, path, matrix) {\n\t\tvar segments = path._segments,\n\t\t\tlength = segments.length,\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY;\n\n\t\tfunction drawSegment(segment) {\n\t\t\tif (matrix) {\n\t\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\t\tcurX = coords[0];\n\t\t\t\tcurY = coords[1];\n\t\t\t} else {\n\t\t\t\tvar point = segment._point;\n\t\t\t\tcurX = point._x;\n\t\t\t\tcurY = point._y;\n\t\t\t}\n\t\t\tif (first) {\n\t\t\t\tctx.moveTo(curX, curY);\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tif (matrix) {\n\t\t\t\t\tinX = coords[2];\n\t\t\t\t\tinY = coords[3];\n\t\t\t\t} else {\n\t\t\t\t\tvar handle = segment._handleIn;\n\t\t\t\t\tinX = curX + handle._x;\n\t\t\t\t\tinY = curY + handle._y;\n\t\t\t\t}\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tctx.lineTo(curX, curY);\n\t\t\t\t} else {\n\t\t\t\t\tctx.bezierCurveTo(outX, outY, inX, inY, curX, curY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\tif (matrix) {\n\t\t\t\toutX = coords[4];\n\t\t\t\toutY = coords[5];\n\t\t\t} else {\n\t\t\t\tvar handle = segment._handleOut;\n\t\t\t\toutX = prevX + handle._x;\n\t\t\t\toutY = prevY + handle._y;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tdrawSegment(segments[i]);\n\t\tif (path._closed && length > 0)\n\t\t\tdrawSegment(segments[0]);\n\t}\n\n\treturn {\n\t\t_draw: function(ctx, param, strokeMatrix) {\n\t\t\tvar dontStart = param.dontStart,\n\t\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\t\tstyle = this.getStyle(),\n\t\t\t\thasFill = style.hasFill(),\n\t\t\t\thasStroke = style.hasStroke(),\n\t\t\t\tdashArray = style.getDashArray(),\n\t\t\t\tdashLength = !paper.support.nativeDash && hasStroke\n\t\t\t\t\t\t&& dashArray && dashArray.length;\n\n\t\t\tif (!dontStart)\n\t\t\t\tctx.beginPath();\n\n\t\t\tif (!dontStart && this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t} else if (hasFill || hasStroke && !dashLength || dontPaint) {\n\t\t\t\tdrawSegments(ctx, this, strokeMatrix);\n\t\t\t\tif (this._closed)\n\t\t\t\t\tctx.closePath();\n\t\t\t\tif (!dontStart)\n\t\t\t\t\tthis._currentPath = ctx.currentPath;\n\t\t\t}\n\n\t\t\tfunction getOffset(i) {\n\t\t\t\treturn dashArray[((i % dashLength) + dashLength) % dashLength];\n\t\t\t}\n\n\t\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\t\tthis._setStyles(ctx);\n\t\t\t\tif (hasFill) {\n\t\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (hasStroke) {\n\t\t\t\t\tif (dashLength) {\n\t\t\t\t\t\tif (!dontStart)\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tvar iterator = new PathIterator(this, 32, 0.25,\n\t\t\t\t\t\t\t\tstrokeMatrix),\n\t\t\t\t\t\t\tlength = iterator.length,\n\t\t\t\t\t\t\tfrom = -style.getDashOffset(), to,\n\t\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\tfrom = from % length;\n\t\t\t\t\t\twhile (from > 0) {\n\t\t\t\t\t\t\tfrom -= getOffset(i--) + getOffset(i--);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (from < length) {\n\t\t\t\t\t\t\tto = from + getOffset(i++);\n\t\t\t\t\t\t\tif (from > 0 || to > 0)\n\t\t\t\t\t\t\t\titerator.drawPart(ctx,\n\t\t\t\t\t\t\t\t\t\tMath.max(from, 0), Math.max(to, 0));\n\t\t\t\t\t\t\tfrom = to + getOffset(i++);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_drawSelected: function(ctx, matrix) {\n\t\t\tctx.beginPath();\n\t\t\tdrawSegments(ctx, this, matrix);\n\t\t\tctx.stroke();\n\t\t\tdrawHandles(ctx, this._segments, matrix, paper.settings.handleSize);\n\t\t}\n\t};\n}, new function() {\n\n\tfunction getFirstControlPoints(rhs) {\n\t\tvar n = rhs.length,\n\t\t\tx = [],\n\t\t\ttmp = [],\n\t\t\tb = 2;\n\t\tx[0] = rhs[0] / b;\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\ttmp[i] = 1 / b;\n\t\t\tb = (i < n - 1 ? 4 : 2) - tmp[i];\n\t\t\tx[i] = (rhs[i] - x[i - 1]) / b;\n\t\t}\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\tx[n - i - 1] -= tmp[n - i] * x[n - i];\n\t\t}\n\t\treturn x;\n\t}\n\n\treturn {\n\t\tsmooth: function() {\n\t\t\tvar segments = this._segments,\n\t\t\t\tsize = segments.length,\n\t\t\t\tclosed = this._closed,\n\t\t\t\tn = size,\n\t\t\t\toverlap = 0;\n\t\t\tif (size <= 2)\n\t\t\t\treturn;\n\t\t\tif (closed) {\n\t\t\t\toverlap = Math.min(size, 4);\n\t\t\t\tn += Math.min(size, overlap) * 2;\n\t\t\t}\n\t\t\tvar knots = [];\n\t\t\tfor (var i = 0; i < size; i++)\n\t\t\t\tknots[i + overlap] = segments[i]._point;\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0; i < overlap; i++) {\n\t\t\t\t\tknots[i] = segments[i + size - overlap]._point;\n\t\t\t\t\tknots[i + size + overlap] = segments[i]._point;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar rhs = [];\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._x + 2 * knots[i + 1]._x;\n\t\t\trhs[0] = knots[0]._x + 2 * knots[1]._x;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._x;\n\t\t\tvar x = getFirstControlPoints(rhs);\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._y + 2 * knots[i + 1]._y;\n\t\t\trhs[0] = knots[0]._y + 2 * knots[1]._y;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._y;\n\t\t\tvar y = getFirstControlPoints(rhs);\n\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0, j = size; i < overlap; i++, j++) {\n\t\t\t\t\tvar f1 = i / overlap,\n\t\t\t\t\t\tf2 = 1 - f1,\n\t\t\t\t\t\tie = i + overlap,\n\t\t\t\t\t\tje = j + overlap;\n\t\t\t\t\tx[j] = x[i] * f1 + x[j] * f2;\n\t\t\t\t\ty[j] = y[i] * f1 + y[j] * f2;\n\t\t\t\t\tx[je] = x[ie] * f2 + x[je] * f1;\n\t\t\t\t\ty[je] = y[ie] * f2 + y[je] * f1;\n\t\t\t\t}\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar handleIn = null;\n\t\t\tfor (var i = overlap; i <= n - overlap; i++) {\n\t\t\t\tvar segment = segments[i - overlap];\n\t\t\t\tif (handleIn)\n\t\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t\tif (i < n) {\n\t\t\t\t\tsegment.setHandleOut(\n\t\t\t\t\t\t\tnew Point(x[i], y[i]).subtract(segment._point));\n\t\t\t\t\thandleIn = i < n - 1\n\t\t\t\t\t\t\t? new Point(\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._x - x[i + 1],\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._y - y[i + 1])\n\t\t\t\t\t\t\t: new Point(\n\t\t\t\t\t\t\t\t(knots[n]._x + x[n - 1]) / 2,\n\t\t\t\t\t\t\t\t(knots[n]._y + y[n - 1]) / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (closed && handleIn) {\n\t\t\t\tvar segment = this._segments[0];\n\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t}\n\t\t}\n\t};\n}, new function() {\n\tfunction getCurrentSegment(that) {\n\t\tvar segments = that._segments;\n\t\tif (segments.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn segments[segments.length - 1];\n\t}\n\n\treturn {\n\t\tmoveTo: function() {\n\t\t\tvar segments = this._segments;\n\t\t\tif (segments.length === 1)\n\t\t\t\tthis.removeSegment(0);\n\t\t\tif (!segments.length)\n\t\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tthrow new Error('moveBy() is unsupported on Path items.');\n\t\t},\n\n\t\tlineTo: function() {\n\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tcubicCurveTo: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this);\n\t\t\tcurrent.setHandleOut(handle1.subtract(current._point));\n\t\t\tthis._add([ new Segment(to, handle2.subtract(to)) ]);\n\t\t},\n\n\t\tquadraticCurveTo: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(\n\t\t\t\thandle.add(current.subtract(handle).multiply(1 / 3)),\n\t\t\t\thandle.add(to.subtract(handle).multiply(1 / 3)),\n\t\t\t\tto\n\t\t\t);\n\t\t},\n\n\t\tcurveTo: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tt = Base.pick(Base.read(arguments), 0.5),\n\t\t\t\tt1 = 1 - t,\n\t\t\t\tcurrent = getCurrentSegment(this)._point,\n\t\t\t\thandle = through.subtract(current.multiply(t1 * t1))\n\t\t\t\t\t.subtract(to.multiply(t * t)).divide(2 * t * t1);\n\t\t\tif (handle.isNaN())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Cannot put a curve through points with parameter = ' + t);\n\t\t\tthis.quadraticCurveTo(handle, to);\n\t\t},\n\n\t\tarcTo: function() {\n\t\t\tvar current = getCurrentSegment(this),\n\t\t\t\tfrom = current._point,\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tthrough,\n\t\t\t\tpeek = Base.peek(arguments),\n\t\t\t\tclockwise = Base.pick(peek, true),\n\t\t\t\tcenter, extent, vector, matrix;\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tvar middle = from.add(to).divide(2),\n\t\t\t\tthrough = middle.add(middle.subtract(from).rotate(\n\t\t\t\t\t\tclockwise ? -90 : 90));\n\t\t\t} else if (Base.remain(arguments) <= 2) {\n\t\t\t\tthrough = to;\n\t\t\t\tto = Point.read(arguments);\n\t\t\t} else {\n\t\t\t\tvar radius = Size.read(arguments);\n\t\t\t\tif (radius.isZero())\n\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\tvar rotation = Base.read(arguments),\n\t\t\t\t\tclockwise = !!Base.read(arguments),\n\t\t\t\t\tlarge = !!Base.read(arguments),\n\t\t\t\t\tmiddle = from.add(to).divide(2),\n\t\t\t\t\tpt = from.subtract(middle).rotate(-rotation),\n\t\t\t\t\tx = pt.x,\n\t\t\t\t\ty = pt.y,\n\t\t\t\t\tabs = Math.abs,\n\t\t\t\t\tepsilon = 1e-12,\n\t\t\t\t\trx = abs(radius.width),\n\t\t\t\t\try = abs(radius.height),\n\t\t\t\t\trxSq = rx * rx,\n\t\t\t\t\trySq = ry * ry,\n\t\t\t\t\txSq =  x * x,\n\t\t\t\t\tySq =  y * y;\n\t\t\t\tvar factor = Math.sqrt(xSq / rxSq + ySq / rySq);\n\t\t\t\tif (factor > 1) {\n\t\t\t\t\trx *= factor;\n\t\t\t\t\try *= factor;\n\t\t\t\t\trxSq = rx * rx;\n\t\t\t\t\trySq = ry * ry;\n\t\t\t\t}\n\t\t\t\tfactor = (rxSq * rySq - rxSq * ySq - rySq * xSq) /\n\t\t\t\t\t\t(rxSq * ySq + rySq * xSq);\n\t\t\t\tif (abs(factor) < epsilon)\n\t\t\t\t\tfactor = 0;\n\t\t\t\tif (factor < 0)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\tcenter = new Point(rx * y / ry, -ry * x / rx)\n\t\t\t\t\t\t.multiply((large === clockwise ? -1 : 1)\n\t\t\t\t\t\t\t* Math.sqrt(factor))\n\t\t\t\t\t\t.rotate(rotation).add(middle);\n\t\t\t\tmatrix = new Matrix().translate(center).rotate(rotation)\n\t\t\t\t\t\t.scale(rx, ry);\n\t\t\t\tvector = matrix._inverseTransform(from);\n\t\t\t\textent = vector.getDirectedAngle(matrix._inverseTransform(to));\n\t\t\t\tif (!clockwise && extent > 0)\n\t\t\t\t\textent -= 360;\n\t\t\t\telse if (clockwise && extent < 0)\n\t\t\t\t\textent += 360;\n\t\t\t}\n\t\t\tif (through) {\n\t\t\t\tvar l1 = new Line(from.add(through).divide(2),\n\t\t\t\t\t\t\tthrough.subtract(from).rotate(90), true),\n\t\t\t\t\tl2 = new Line(through.add(to).divide(2),\n\t\t\t\t\t\t\tto.subtract(through).rotate(90), true),\n\t\t\t\t\tline = new Line(from, to),\n\t\t\t\t\tthroughSide = line.getSide(through);\n\t\t\t\tcenter = l1.intersect(l2, true);\n\t\t\t\tif (!center) {\n\t\t\t\t\tif (!throughSide)\n\t\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\t}\n\t\t\t\tvector = from.subtract(center);\n\t\t\t\textent = vector.getDirectedAngle(to.subtract(center));\n\t\t\t\tvar centerSide = line.getSide(center);\n\t\t\t\tif (centerSide === 0) {\n\t\t\t\t\textent = throughSide * Math.abs(extent);\n\t\t\t\t} else if (throughSide === centerSide) {\n\t\t\t\t\textent += extent < 0 ? 360 : -360;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar ext = Math.abs(extent),\n\t\t\t\tcount = ext >= 360 ? 4 : Math.ceil(ext / 90),\n\t\t\t\tinc = extent / count,\n\t\t\t\thalf = inc * Math.PI / 360,\n\t\t\t\tz = 4 / 3 * Math.sin(half) / (1 + Math.cos(half)),\n\t\t\t\tsegments = [];\n\t\t\tfor (var i = 0; i <= count; i++) {\n\t\t\t\tvar pt = to,\n\t\t\t\t\tout = null;\n\t\t\t\tif (i < count) {\n\t\t\t\t\tout = vector.rotate(90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\tpt = matrix._transformPoint(vector);\n\t\t\t\t\t\tout = matrix._transformPoint(vector.add(out))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt = center.add(vector);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tcurrent.setHandleOut(out);\n\t\t\t\t} else {\n\t\t\t\t\tvar _in = vector.rotate(-90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t_in = matrix._transformPoint(vector.add(_in))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t}\n\t\t\t\t\tsegments.push(new Segment(pt, _in, out));\n\t\t\t\t}\n\t\t\t\tvector = vector.rotate(inc);\n\t\t\t}\n\t\t\tthis._add(segments);\n\t\t},\n\n\t\tlineBy: function() {\n\t\t\tvar to = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.lineTo(current.add(to));\n\t\t},\n\n\t\tcurveBy: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tparameter = Base.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.curveTo(current.add(through), current.add(to), parameter);\n\t\t},\n\n\t\tcubicCurveBy: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(current.add(handle1), current.add(handle2),\n\t\t\t\t\tcurrent.add(to));\n\t\t},\n\n\t\tquadraticCurveBy: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.quadraticCurveTo(current.add(handle), current.add(to));\n\t\t},\n\n\t\tarcBy: function() {\n\t\t\tvar current = getCurrentSegment(this)._point,\n\t\t\t\tpoint = current.add(Point.read(arguments)),\n\t\t\t\tclockwise = Base.pick(Base.peek(arguments), true);\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tthis.arcTo(point, clockwise);\n\t\t\t} else {\n\t\t\t\tthis.arcTo(point, current.add(Point.read(arguments)));\n\t\t\t}\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tthis.setClosed(true);\n\t\t\tif (join)\n\t\t\t\tthis.join();\n\t\t}\n\t};\n}, {\n\n\t_getBounds: function(getter, matrix) {\n\t\treturn Path[getter](this._segments, this._closed, this.getStyle(),\n\t\t\t\tmatrix);\n\t},\n\nstatics: {\n\tisClockwise: function(segments) {\n\t\tvar sum = 0;\n\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\tsum += Curve.getEdgeSum(Curve.getValues(\n\t\t\t\t\tsegments[i], segments[i + 1 < l ? i + 1 : 0]));\n\t\treturn sum > 0;\n\t},\n\n\tgetBounds: function(segments, closed, style, matrix, strokePadding) {\n\t\tvar first = segments[0];\n\t\tif (!first)\n\t\t\treturn new Rectangle();\n\t\tvar coords = new Array(6),\n\t\t\tprevCoords = first._transformCoordinates(matrix, new Array(6), false),\n\t\t\tmin = prevCoords.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = new Array(2);\n\n\t\tfunction processSegment(segment) {\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tCurve._addBounds(\n\t\t\t\t\tprevCoords[i],\n\t\t\t\t\tprevCoords[i + 4],\n\t\t\t\t\tcoords[i + 2],\n\t\t\t\t\tcoords[i],\n\t\t\t\t\ti, strokePadding ? strokePadding[i] : 0, min, max, roots);\n\t\t\t}\n\t\t\tvar tmp = prevCoords;\n\t\t\tprevCoords = coords;\n\t\t\tcoords = tmp;\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++)\n\t\t\tprocessSegment(segments[i]);\n\t\tif (closed)\n\t\t\tprocessSegment(first);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\tgetStrokeBounds: function(segments, closed, style, matrix) {\n\t\tif (!style.hasStroke())\n\t\t\treturn Path.getBounds(segments, closed, style, matrix);\n\t\tvar length = segments.length - (closed ? 0 : 1),\n\t\t\tradius = style.getStrokeWidth() / 2,\n\t\t\tpadding = Path._getPenPadding(radius, matrix),\n\t\t\tbounds = Path.getBounds(segments, closed, style, matrix, padding),\n\t\t\tjoin = style.getStrokeJoin(),\n\t\t\tcap = style.getStrokeCap(),\n\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\tvar joinBounds = new Rectangle(new Size(padding).multiply(2));\n\n\t\tfunction add(point) {\n\t\t\tbounds = bounds.include(matrix\n\t\t\t\t? matrix._transformPoint(point, point) : point);\n\t\t}\n\n\t\tfunction addRound(segment) {\n\t\t\tbounds = bounds.unite(joinBounds.setCenter(matrix\n\t\t\t\t? matrix._transformPoint(segment._point) : segment._point));\n\t\t}\n\n\t\tfunction addJoin(segment, join) {\n\t\t\tvar handleIn = segment._handleIn,\n\t\t\t\thandleOut = segment._handleOut;\n\t\t\tif (join === 'round' || !handleIn.isZero() && !handleOut.isZero()\n\t\t\t\t\t&& handleIn.isColinear(handleOut)) {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit, add);\n\t\t\t}\n\t\t}\n\n\t\tfunction addCap(segment, cap) {\n\t\t\tif (cap === 'round') {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addSquareCap(segment, cap, radius, add);\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1; i < length; i++)\n\t\t\taddJoin(segments[i], join);\n\t\tif (closed) {\n\t\t\taddJoin(segments[0], join);\n\t\t} else if (length > 0) {\n\t\t\taddCap(segments[0], cap);\n\t\t\taddCap(segments[segments.length - 1], cap);\n\t\t}\n\t\treturn bounds;\n\t},\n\n\t_getPenPadding: function(radius, matrix) {\n\t\tif (!matrix)\n\t\t\treturn [radius, radius];\n\t\tvar mx = matrix.shiftless(),\n\t\t\thor = mx.transform(new Point(radius, 0)),\n\t\t\tver = mx.transform(new Point(0, radius)),\n\t\t\tphi = hor.getAngleInRadians(),\n\t\t\ta = hor.getLength(),\n\t\t\tb = ver.getLength();\n\t\tvar sin = Math.sin(phi),\n\t\t\tcos = Math.cos(phi),\n\t\t\ttan = Math.tan(phi),\n\t\t\ttx = -Math.atan(b * tan / a),\n\t\t\tty = Math.atan(b / (tan * a));\n\t\treturn [Math.abs(a * Math.cos(tx) * cos - b * Math.sin(tx) * sin),\n\t\t\t\tMath.abs(b * Math.sin(ty) * cos + a * Math.cos(ty) * sin)];\n\t},\n\n\t_addBevelJoin: function(segment, join, radius, miterLimit, addPoint, area) {\n\t\tvar curve2 = segment.getCurve(),\n\t\t\tcurve1 = curve2.getPrevious(),\n\t\t\tpoint = curve2.getPointAt(0, true),\n\t\t\tnormal1 = curve1.getNormalAt(1, true),\n\t\t\tnormal2 = curve2.getNormalAt(0, true),\n\t\t\tstep = normal1.getDirectedAngle(normal2) < 0 ? -radius : radius;\n\t\tnormal1.setLength(step);\n\t\tnormal2.setLength(step);\n\t\tif (area) {\n\t\t\taddPoint(point);\n\t\t\taddPoint(point.add(normal1));\n\t\t}\n\t\tif (join === 'miter') {\n\t\t\tvar corner = new Line(\n\t\t\t\t\tpoint.add(normal1),\n\t\t\t\t\tnew Point(-normal1.y, normal1.x), true\n\t\t\t\t).intersect(new Line(\n\t\t\t\t\tpoint.add(normal2),\n\t\t\t\t\tnew Point(-normal2.y, normal2.x), true\n\t\t\t\t), true);\n\t\t\tif (corner && point.getDistance(corner) <= miterLimit) {\n\t\t\t\taddPoint(corner);\n\t\t\t\tif (!area)\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (!area)\n\t\t\taddPoint(point.add(normal1));\n\t\taddPoint(point.add(normal2));\n\t},\n\n\t_addSquareCap: function(segment, cap, radius, addPoint, area) {\n\t\tvar point = segment._point,\n\t\t\tloc = segment.getLocation(),\n\t\t\tnormal = loc.getNormal().normalize(radius);\n\t\tif (area) {\n\t\t\taddPoint(point.subtract(normal));\n\t\t\taddPoint(point.add(normal));\n\t\t}\n\t\tif (cap === 'square')\n\t\t\tpoint = point.add(normal.rotate(loc.getParameter() === 0 ? -90 : 90));\n\t\taddPoint(point.add(normal));\n\t\taddPoint(point.subtract(normal));\n\t},\n\n\tgetHandleBounds: function(segments, closed, style, matrix, strokePadding,\n\t\t\tjoinPadding) {\n\t\tvar coords = new Array(6),\n\t\t\tx1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var j = 0; j < 6; j += 2) {\n\t\t\t\tvar padding = j === 0 ? joinPadding : strokePadding,\n\t\t\t\t\tpaddingX = padding ? padding[0] : 0,\n\t\t\t\t\tpaddingY = padding ? padding[1] : 0,\n\t\t\t\t\tx = coords[j],\n\t\t\t\t\ty = coords[j + 1],\n\t\t\t\t\txn = x - paddingX,\n\t\t\t\t\txx = x + paddingX,\n\t\t\t\t\tyn = y - paddingY,\n\t\t\t\t\tyx = y + paddingY;\n\t\t\t\tif (xn < x1) x1 = xn;\n\t\t\t\tif (xx > x2) x2 = xx;\n\t\t\t\tif (yn < y1) y1 = yn;\n\t\t\t\tif (yx > y2) y2 = yx;\n\t\t\t}\n\t\t}\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tgetRoughBounds: function(segments, closed, style, matrix) {\n\t\tvar strokeRadius = style.hasStroke() ? style.getStrokeWidth() / 2 : 0,\n\t\t\tjoinRadius = strokeRadius;\n\t\tif (strokeRadius > 0) {\n\t\t\tif (style.getStrokeJoin() === 'miter')\n\t\t\t\tjoinRadius = strokeRadius * style.getMiterLimit();\n\t\t\tif (style.getStrokeCap() === 'square')\n\t\t\t\tjoinRadius = Math.max(joinRadius, strokeRadius * Math.sqrt(2));\n\t\t}\n\t\treturn Path.getHandleBounds(segments, closed, style, matrix,\n\t\t\t\tPath._getPenPadding(strokeRadius, matrix),\n\t\t\t\tPath._getPenPadding(joinRadius, matrix));\n\t}\n}});\n\nPath.inject({ statics: new function() {\n\n\tvar kappa = 0.5522847498307936,\n\t\tellipseSegments = [\n\t\t\tnew Segment([-1, 0], [0, kappa ], [0, -kappa]),\n\t\t\tnew Segment([0, -1], [-kappa, 0], [kappa, 0 ]),\n\t\t\tnew Segment([1, 0], [0, -kappa], [0, kappa ]),\n\t\t\tnew Segment([0, 1], [kappa, 0 ], [-kappa, 0])\n\t\t];\n\n\tfunction createPath(segments, closed, args) {\n\t\tvar props = Base.getNamed(args),\n\t\t\tpath = new Path(props && props.insert === false && Item.NO_INSERT);\n\t\tpath._add(segments);\n\t\tpath._closed = closed;\n\t\treturn path.set(props);\n\t}\n\n\tfunction createEllipse(center, radius, args) {\n\t\tvar segments = new Array(4);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tvar segment = ellipseSegments[i];\n\t\t\tsegments[i] = new Segment(\n\t\t\t\tsegment._point.multiply(radius).add(center),\n\t\t\t\tsegment._handleIn.multiply(radius),\n\t\t\t\tsegment._handleOut.multiply(radius)\n\t\t\t);\n\t\t}\n\t\treturn createPath(segments, true, args);\n\t}\n\n\treturn {\n\t\tLine: function() {\n\t\t\treturn createPath([\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'from')),\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'to'))\n\t\t\t], false, arguments);\n\t\t},\n\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createEllipse(center, new Size(radius), arguments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.readNamed(arguments, 'radius', 0,\n\t\t\t\t\t\t{ readNull: true }),\n\t\t\t\tbl = rect.getBottomLeft(true),\n\t\t\t\ttl = rect.getTopLeft(true),\n\t\t\t\ttr = rect.getTopRight(true),\n\t\t\t\tbr = rect.getBottomRight(true),\n\t\t\t\tsegments;\n\t\t\tif (!radius || radius.isZero()) {\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl),\n\t\t\t\t\tnew Segment(tl),\n\t\t\t\t\tnew Segment(tr),\n\t\t\t\t\tnew Segment(br)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tradius = Size.min(radius, rect.getSize(true).divide(2));\n\t\t\t\tvar rx = radius.width,\n\t\t\t\t\try = radius.height,\n\t\t\t\t\thx = rx * kappa,\n\t\t\t\t\thy = ry * kappa;\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl.add(rx, 0), null, [-hx, 0]),\n\t\t\t\t\tnew Segment(bl.subtract(0, ry), [0, hy]),\n\t\t\t\t\tnew Segment(tl.add(0, ry), null, [0, -hy]),\n\t\t\t\t\tnew Segment(tl.add(rx, 0), [-hx, 0], null),\n\t\t\t\t\tnew Segment(tr.subtract(rx, 0), null, [hx, 0]),\n\t\t\t\t\tnew Segment(tr.add(0, ry), [0, -hy], null),\n\t\t\t\t\tnew Segment(br.subtract(0, ry), null, [0, hy]),\n\t\t\t\t\tnew Segment(br.subtract(rx, 0), [hx, 0])\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tRoundRectangle: '#Rectangle',\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments);\n\t\t\treturn createEllipse(ellipse.center, ellipse.radius, arguments);\n\t\t},\n\n\t\tOval: '#Ellipse',\n\n\t\tArc: function() {\n\t\t\tvar from = Point.readNamed(arguments, 'from'),\n\t\t\t\tthrough = Point.readNamed(arguments, 'through'),\n\t\t\t\tto = Point.readNamed(arguments, 'to'),\n\t\t\t\tprops = Base.getNamed(arguments),\n\t\t\t\tpath = new Path(props && props.insert === false\n\t\t\t\t\t\t&& Item.NO_INSERT);\n\t\t\tpath.moveTo(from);\n\t\t\tpath.arcTo(through, to);\n\t\t\treturn path.set(props);\n\t\t},\n\n\t\tRegularPolygon: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tsides = Base.readNamed(arguments, 'sides'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius'),\n\t\t\t\tstep = 360 / sides,\n\t\t\t\tthree = !(sides % 3),\n\t\t\t\tvector = new Point(0, three ? -radius : radius),\n\t\t\t\toffset = three ? -1 : 0.5,\n\t\t\t\tsegments = new Array(sides);\n\t\t\tfor (var i = 0; i < sides; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(\n\t\t\t\t\tvector.rotate((i + offset) * step)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tStar: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tpoints = Base.readNamed(arguments, 'points') * 2,\n\t\t\t\tradius1 = Base.readNamed(arguments, 'radius1'),\n\t\t\t\tradius2 = Base.readNamed(arguments, 'radius2'),\n\t\t\t\tstep = 360 / points,\n\t\t\t\tvector = new Point(0, -1),\n\t\t\t\tsegments = new Array(points);\n\t\t\tfor (var i = 0; i < points; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(vector.rotate(step * i)\n\t\t\t\t\t\t.multiply(i % 2 ? radius2 : radius1)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t}\n\t};\n}});\n\nvar CompoundPath = PathItem.extend({\n\t_class: 'CompoundPath',\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function CompoundPath(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg)) {\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t} else {\n\t\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t\t\t}\n\t\t}\n\t},\n\n\tinsertChildren: function insertChildren(index, items, _preserve) {\n\t\titems = insertChildren.base.call(this, index, items, _preserve, Path);\n\t\tfor (var i = 0, l = !_preserve && items && items.length; i < l; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (item._clockwise === undefined)\n\t\t\t\titem.setClockwise(item._index === 0);\n\t\t}\n\t\treturn items;\n\t},\n\n\treverse: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tchildren[i].reverse();\n\t},\n\n\tsmooth: function() {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\tthis._children[i].smooth();\n\t},\n\n\treduce: function reduce() {\n\t\tif (this._children.length === 0) {\n\t\t\tvar path = new Path(Item.NO_INSERT);\n\t\t\tpath.insertAbove(this);\n\t\t\tpath.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn path;\n\t\t} else {\n\t\t\treturn reduce.base.call(this);\n\t\t}\n\t},\n\n\tinterpolate: function(compoundpath0, compoundpath1, coef) {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\tif ( !compoundpath0._children[i] || !compoundpath1._children[i] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis._children[i].interpolate(\n\t\t\t\tcompoundpath0._children[i],\n\t\t\t\tcompoundpath1._children[i],\n\t\t\t\tcoef\n\t\t\t);\n\t\t}\n\t},\n\n\tisClockwise: function() {\n\t\tvar child = this.getFirstChild();\n\t\treturn child && child.isClockwise();\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() !== !!clockwise)\n\t\t\tthis.reverse();\n\t},\n\n\tgetFirstSegment: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstSegment();\n\t},\n\n\tgetLastSegment: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getLastSegment();\n\t},\n\n\tgetCurves: function() {\n\t\tvar children = this._children,\n\t\t\tcurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tcurves.push.apply(curves, children[i].getCurves());\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstCurve();\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getFirstCurve();\n\t},\n\n\tgetArea: function() {\n\t\tvar children = this._children,\n\t\t\tarea = 0;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tarea += children[i].getArea();\n\t\treturn area;\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar children = this._children,\n\t\t\tpaths = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tpaths.push(child.getPathData(_matrix && !mx.isIdentity()\n\t\t\t\t\t? _matrix.chain(mx) : mx, _precision));\n\t\t}\n\t\treturn paths.join(' ');\n\t}\n}, {\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options.class === Path || options.type === 'path'\n\t\t\t\t? options\n\t\t\t\t: new Base(options, { fill: false });\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar children = this._children;\n\t\tif (children.length === 0)\n\t\t\treturn;\n\n\t\tif (this._currentPath) {\n\t\t\tctx.currentPath = this._currentPath;\n\t\t} else {\n\t\t\tparam = param.extend({ dontStart: true, dontFinish: true });\n\t\t\tctx.beginPath();\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].draw(ctx, param, strokeMatrix);\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\n\t\tif (!param.clip) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tvar style = this._style;\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_drawSelected: function(ctx, matrix, selectedItems) {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tif (!selectedItems[child._id])\n\t\t\t\tchild._drawSelected(ctx, mx.isIdentity() ? matrix\n\t\t\t\t\t\t: matrix.chain(mx));\n\t\t}\n\t}\n}, new function() {\n\tfunction getCurrentPath(that, check) {\n\t\tvar children = that._children;\n\t\tif (check && children.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn children[children.length - 1];\n\t}\n\n\tvar fields = {\n\t\tmoveTo: function() {\n\t\t\tvar current = getCurrentPath(this),\n\t\t\t\tpath = current && current.isEmpty() ? current : new Path();\n\t\t\tif (path !== current)\n\t\t\t\tthis.addChild(path);\n\t\t\tpath.moveTo.apply(path, arguments);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tvar current = getCurrentPath(this, true),\n\t\t\t\tlast = current && current.getLastSegment(),\n\t\t\t\tpoint = Point.read(arguments);\n\t\t\tthis.moveTo(last ? point.add(last._point) : point);\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tgetCurrentPath(this, true).closePath(join);\n\t\t}\n\t};\n\n\tBase.each(['lineTo', 'cubicCurveTo', 'quadraticCurveTo', 'curveTo', 'arcTo',\n\t\t\t'lineBy', 'cubicCurveBy', 'quadraticCurveBy', 'curveBy', 'arcBy'],\n\t\t\tfunction(key) {\n\t\t\t\tfields[key] = function() {\n\t\t\t\t\tvar path = getCurrentPath(this, true);\n\t\t\t\t\tpath[key].apply(path, arguments);\n\t\t\t\t};\n\t\t\t}\n\t);\n\n\treturn fields;\n});\n\nPathItem.inject(new function() {\n\tvar operators = {\n\t\tunite: function(w) {\n\t\t\treturn w === 1 || w === 0;\n\t\t},\n\n\t\tintersect: function(w) {\n\t\t\treturn w === 2;\n\t\t},\n\n\t\tsubtract: function(w) {\n\t\t\treturn w === 1;\n\t\t},\n\n\t\texclude: function(w) {\n\t\t\treturn w === 1;\n\t\t}\n\t};\n\n\tfunction computeBoolean(path1, path2, operation) {\n\t\tvar operator = operators[operation];\n\t\tfunction preparePath(path) {\n\t\t\treturn path.clone(false).reduce().reorient().transform(null, true,\n\t\t\t\t\ttrue);\n\t\t}\n\n\t\tvar _path1 = preparePath(path1),\n\t\t\t_path2 = path2 && path1 !== path2 && preparePath(path2);\n\t\tif (_path2 && /^(subtract|exclude)$/.test(operation)\n\t\t\t\t^ (_path2.isClockwise() !== _path1.isClockwise()))\n\t\t\t_path2.reverse();\n\t\tsplitPath(_path1.getIntersections(_path2, null, true));\n\n\t\tvar chain = [],\n\t\t\tsegments = [],\n\t\t\tmonoCurves = [],\n\t\t\ttolerance = 0.000001;\n\n\t\tfunction collect(paths) {\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tvar path = paths[i];\n\t\t\t\tsegments.push.apply(segments, path._segments);\n\t\t\t\tmonoCurves.push.apply(monoCurves, path._getMonoCurves());\n\t\t\t}\n\t\t}\n\n\t\tcollect(_path1._children || [_path1]);\n\t\tif (_path2)\n\t\t\tcollect(_path2._children || [_path2]);\n\t\tsegments.sort(function(a, b) {\n\t\t\tvar _a = a._intersection,\n\t\t\t\t_b = b._intersection;\n\t\t\treturn !_a && !_b || _a && _b ? 0 : _a ? -1 : 1;\n\t\t});\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tif (segment._winding != null)\n\t\t\t\tcontinue;\n\t\t\tchain.length = 0;\n\t\t\tvar startSeg = segment,\n\t\t\t\ttotalLength = 0,\n\t\t\t\twindingSum = 0;\n\t\t\tdo {\n\t\t\t\tvar length = segment.getCurve().getLength();\n\t\t\t\tchain.push({ segment: segment, length: length });\n\t\t\t\ttotalLength += length;\n\t\t\t\tsegment = segment.getNext();\n\t\t\t} while (segment && !segment._intersection && segment !== startSeg);\n\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\tvar length = totalLength * (j + 1) / 4;\n\t\t\t\tfor (k = 0, m = chain.length; k < m; k++) {\n\t\t\t\t\tvar node = chain[k],\n\t\t\t\t\t\tcurveLength = node.length;\n\t\t\t\t\tif (length <= curveLength) {\n\t\t\t\t\t\tif (length <= tolerance\n\t\t\t\t\t\t\t\t|| curveLength - length <= tolerance)\n\t\t\t\t\t\t\tlength = curveLength / 2;\n\t\t\t\t\t\tvar curve = node.segment.getCurve(),\n\t\t\t\t\t\t\tpt = curve.getPointAt(length),\n\t\t\t\t\t\t\thor = curve.isLinear() && Math.abs(curve\n\t\t\t\t\t\t\t\t\t.getTangentAt(0.5, true).y) <= tolerance,\n\t\t\t\t\t\t\tpath = curve._path;\n\t\t\t\t\t\tif (path._parent instanceof CompoundPath)\n\t\t\t\t\t\t\tpath = path._parent;\n\t\t\t\t\t\twindingSum += operation === 'subtract' && _path2\n\t\t\t\t\t\t\t&& (path === _path1 && _path2._getWinding(pt, hor)\n\t\t\t\t\t\t\t|| path === _path2 && !_path1._getWinding(pt, hor))\n\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t: getWinding(pt, monoCurves, hor);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tlength -= curveLength;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar winding = Math.round(windingSum / 3);\n\t\t\tfor (var j = chain.length - 1; j >= 0; j--)\n\t\t\t\tchain[j].segment._winding = winding;\n\t\t}\n\t\tvar result = new CompoundPath(Item.NO_INSERT);\n\t\tresult.insertAbove(path1);\n\t\tresult.addChildren(tracePaths(segments, operator), true);\n\t\tresult = result.reduce();\n\t\tresult.setStyle(path1._style);\n\t\treturn result;\n\t}\n\n\tfunction splitPath(intersections) {\n\t\tvar tMin = 0.000001,\n\t\t\ttMax = 1 - tMin,\n\t\t\tlinearHandles;\n\n\t\tfunction resetLinear() {\n\t\t\tfor (var i = 0, l = linearHandles.length; i < l; i++)\n\t\t\t\tlinearHandles[i].set(0, 0);\n\t\t}\n\n\t\tfor (var i = intersections.length - 1, curve, prev; i >= 0; i--) {\n\t\t\tvar loc = intersections[i],\n\t\t\t\tt = loc._parameter;\n\t\t\tif (prev && prev._curve === loc._curve && prev._parameter > 0) {\n\t\t\t\tt /= prev._parameter;\n\t\t\t} else {\n\t\t\t\tcurve = loc._curve;\n\t\t\t\tif (linearHandles)\n\t\t\t\t\tresetLinear();\n\t\t\t\tlinearHandles = curve.isLinear() ? [\n\t\t\t\t\t\tcurve._segment1._handleOut,\n\t\t\t\t\t\tcurve._segment2._handleIn\n\t\t\t\t\t] : null;\n\t\t\t}\n\t\t\tvar newCurve,\n\t\t\t\tsegment;\n\t\t\tif (newCurve = curve.divide(t, true, true)) {\n\t\t\t\tsegment = newCurve._segment1;\n\t\t\t\tcurve = newCurve.getPrevious();\n\t\t\t\tif (linearHandles)\n\t\t\t\t\tlinearHandles.push(segment._handleOut, segment._handleIn);\n\t\t\t} else {\n\t\t\t\tsegment = t < tMin\n\t\t\t\t\t? curve._segment1\n\t\t\t\t\t: t > tMax\n\t\t\t\t\t\t? curve._segment2\n\t\t\t\t\t\t: curve.getPartLength(0, t) < curve.getPartLength(t, 1)\n\t\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t\tsegment._intersection = loc.getIntersection();\n\t\t\tloc._segment = segment;\n\t\t\tprev = loc;\n\t\t}\n\t\tif (linearHandles)\n\t\t\tresetLinear();\n\t}\n\n\tfunction getWinding(point, curves, horizontal, testContains) {\n\t\tvar tolerance = 0.000001,\n\t\t\ttMin = tolerance,\n\t\t\ttMax = 1 - tMin,\n\t\t\tpx = point.x,\n\t\t\tpy = point.y,\n\t\t\twindLeft = 0,\n\t\t\twindRight = 0,\n\t\t\troots = [],\n\t\t\tabs = Math.abs;\n\t\tif (horizontal) {\n\t\t\tvar yTop = -Infinity,\n\t\t\t\tyBottom = Infinity,\n\t\t\t\tyBefore = py - tolerance,\n\t\t\t\tyAfter = py + tolerance;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif (Curve.solveCubic(values, 0, px, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--) {\n\t\t\t\t\t\tvar y = Curve.evaluate(values, roots[j], 0).y;\n\t\t\t\t\t\tif (y < yBefore && y > yTop) {\n\t\t\t\t\t\t\tyTop = y;\n\t\t\t\t\t\t} else if (y > yAfter && y < yBottom) {\n\t\t\t\t\t\t\tyBottom = y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tyTop = (yTop + py) / 2;\n\t\t\tyBottom = (yBottom + py) / 2;\n\t\t\tif (yTop > -Infinity)\n\t\t\t\twindLeft = getWinding(new Point(px, yTop), curves);\n\t\t\tif (yBottom < Infinity)\n\t\t\t\twindRight = getWinding(new Point(px, yBottom), curves);\n\t\t} else {\n\t\t\tvar xBefore = px - tolerance,\n\t\t\t\txAfter = px + tolerance;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar curve = curves[i],\n\t\t\t\t\tvalues = curve.values,\n\t\t\t\t\twinding = curve.winding,\n\t\t\t\t\tprevT,\n\t\t\t\t\tprevX;\n\t\t\t\tif (winding && (winding === 1\n\t\t\t\t\t\t&& py >= values[1] && py <= values[7]\n\t\t\t\t\t\t|| py >= values[7] && py <= values[1])\n\t\t\t\t\t&& Curve.solveCubic(values, 1, py, roots, 0, 1) === 1) {\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tx = Curve.evaluate(values, t, 0).x,\n\t\t\t\t\t\tslope = Curve.evaluate(values, t, 1).y;\n\t\t\t\t\tif (!(t > tMax\n\t\t\t\t\t\t\t&& (i === l - 1 || curve.next !== curves[i + 1])\n\t\t\t\t\t\t\t&& abs(Curve.evaluate(curve.next.values, 0, 0).x -x)\n\t\t\t\t\t\t\t\t<= tolerance\n\t\t\t\t\t\t|| i > 0 && curve.previous === curves[i - 1]\n\t\t\t\t\t\t\t&& abs(prevX - x) < tolerance\n\t\t\t\t\t\t\t&& prevT > tMax && t < tMin)) {\n\t\t\t\t\t\tif (Numerical.isZero(slope) && !Curve.isLinear(values)\n\t\t\t\t\t\t\t\t|| t < tMin && slope * Curve.evaluate(\n\t\t\t\t\t\t\t\t\tcurve.previous.values, 1, 1).y < 0\n\t\t\t\t\t\t\t\t|| t > tMax && slope * Curve.evaluate(\n\t\t\t\t\t\t\t\t\tcurve.next.values, 0, 1).y < 0) {\n\t\t\t\t\t\t\tif (testContains && x >= xBefore && x <= xAfter) {\n\t\t\t\t\t\t\t\t++windLeft;\n\t\t\t\t\t\t\t\t++windRight;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (x <= xBefore) {\n\t\t\t\t\t\t\twindLeft += winding;\n\t\t\t\t\t\t} else if (x >= xAfter) {\n\t\t\t\t\t\t\twindRight += winding;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tprevT = t;\n\t\t\t\t\tprevX = x;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Math.max(abs(windLeft), abs(windRight));\n\t}\n\n\tfunction tracePaths(segments, operator, selfOp) {\n\t\tvar paths = [],\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tfor (var i = 0, seg, startSeg, l = segments.length; i < l; i++) {\n\t\t\tseg = startSeg = segments[i];\n\t\t\tif (seg._visited || !operator(seg._winding))\n\t\t\t\tcontinue;\n\t\t\tvar path = new Path(Item.NO_INSERT),\n\t\t\t\tinter = seg._intersection,\n\t\t\t\tstartInterSeg = inter && inter._segment,\n\t\t\t\tadded = false,\n\t\t\t\tdir = 1;\n\t\t\tdo {\n\t\t\t\tvar handleIn = dir > 0 ? seg._handleIn : seg._handleOut,\n\t\t\t\t\thandleOut = dir > 0 ? seg._handleOut : seg._handleIn,\n\t\t\t\t\tinterSeg;\n\t\t\t\tif (added && (!operator(seg._winding) || selfOp)\n\t\t\t\t\t\t&& (inter = seg._intersection)\n\t\t\t\t\t\t&& (interSeg = inter._segment)\n\t\t\t\t\t\t&& interSeg !== startSeg) {\n\t\t\t\t\tif (selfOp) {\n\t\t\t\t\t\tseg._visited = interSeg._visited;\n\t\t\t\t\t\tseg = interSeg;\n\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar c1 = seg.getCurve();\n\t\t\t\t\t\tif (dir > 0)\n\t\t\t\t\t\t\tc1 = c1.getPrevious();\n\t\t\t\t\t\tvar t1 = c1.getTangentAt(dir < 1 ? tMin : tMax, true),\n\t\t\t\t\t\t\tc4 = interSeg.getCurve(),\n\t\t\t\t\t\t\tc3 = c4.getPrevious(),\n\t\t\t\t\t\t\tt3 = c3.getTangentAt(tMax, true),\n\t\t\t\t\t\t\tt4 = c4.getTangentAt(tMin, true),\n\t\t\t\t\t\t\tw3 = t1.cross(t3),\n\t\t\t\t\t\t\tw4 = t1.cross(t4);\n\t\t\t\t\t\tif (w3 * w4 !== 0) {\n\t\t\t\t\t\t\tvar curve = w3 < w4 ? c3 : c4,\n\t\t\t\t\t\t\t\tnextCurve = operator(curve._segment1._winding)\n\t\t\t\t\t\t\t\t\t? curve\n\t\t\t\t\t\t\t\t\t: w3 < w4 ? c4 : c3,\n\t\t\t\t\t\t\t\tnextSeg = nextCurve._segment1;\n\t\t\t\t\t\t\tdir = nextCurve === c3 ? -1 : 1;\n\t\t\t\t\t\t\tif (nextSeg._visited && seg._path !== nextSeg._path\n\t\t\t\t\t\t\t\t\t\t|| !operator(nextSeg._winding)) {\n\t\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tseg._visited = interSeg._visited;\n\t\t\t\t\t\t\t\tseg = interSeg;\n\t\t\t\t\t\t\t\tif (nextSeg._visited)\n\t\t\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\thandleOut = dir > 0 ? seg._handleOut : seg._handleIn;\n\t\t\t\t}\n\t\t\t\tpath.add(new Segment(seg._point, added && handleIn, handleOut));\n\t\t\t\tadded = true;\n\t\t\t\tseg._visited = true;\n\t\t\t\tseg = dir > 0 ? seg.getNext() : seg. getPrevious();\n\t\t\t} while (seg && !seg._visited\n\t\t\t\t\t&& seg !== startSeg && seg !== startInterSeg\n\t\t\t\t\t&& (seg._intersection || operator(seg._winding)));\n\t\t\tif (seg && (seg === startSeg || seg === startInterSeg)) {\n\t\t\t\tpath.firstSegment.setHandleIn((seg === startInterSeg\n\t\t\t\t\t\t? startInterSeg : seg)._handleIn);\n\t\t\t\tpath.setClosed(true);\n\t\t\t} else {\n\t\t\t\tpath.lastSegment._handleOut.set(0, 0);\n\t\t\t}\n\t\t\tif (path._segments.length >\n\t\t\t\t\t(path._closed ? path.isPolygon() ? 2 : 0 : 1))\n\t\t\t\tpaths.push(path);\n\t\t}\n\t\treturn paths;\n\t}\n\n\treturn {\n\t\t_getWinding: function(point, horizontal, testContains) {\n\t\t\treturn getWinding(point, this._getMonoCurves(),\n\t\t\t\t\thorizontal, testContains);\n\t\t},\n\n\t\tunite: function(path) {\n\t\t\treturn computeBoolean(this, path, 'unite');\n\t\t},\n\n\t\tintersect: function(path) {\n\t\t\treturn computeBoolean(this, path, 'intersect');\n\t\t},\n\n\t\tsubtract: function(path) {\n\t\t\treturn computeBoolean(this, path, 'subtract');\n\t\t},\n\n\t\texclude: function(path) {\n\t\t\treturn computeBoolean(this, path, 'exclude');\n\t\t},\n\n\t\tdivide: function(path) {\n\t\t\treturn new Group([this.subtract(path), this.intersect(path)]);\n\t\t}\n\t};\n});\n\nPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar monoCurves = this._monoCurves,\n\t\t\tprevCurve;\n\n\t\tfunction insertCurve(v) {\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[7],\n\t\t\t\tcurve = {\n\t\t\t\t\tvalues: v,\n\t\t\t\t\twinding: y0 === y1\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: y0 > y1\n\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t: 1,\n\t\t\t\t\tprevious: prevCurve,\n\t\t\t\t\tnext: null\n\t\t\t\t};\n\t\t\tif (prevCurve)\n\t\t\t\tprevCurve.next = curve;\n\t\t\tmonoCurves.push(curve);\n\t\t\tprevCurve = curve;\n\t\t}\n\n\t\tfunction handleCurve(v) {\n\t\t\tif (Curve.getLength(v) === 0)\n\t\t\t\treturn;\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[3],\n\t\t\t\ty2 = v[5],\n\t\t\t\ty3 = v[7];\n\t\t\tif (Curve.isLinear(v)) {\n\t\t\t\tinsertCurve(v);\n\t\t\t} else {\n\t\t\t\tvar a = 3 * (y1 - y2) - y0 + y3,\n\t\t\t\t\tb = 2 * (y0 + y2) - 4 * y1,\n\t\t\t\t\tc = y1 - y0,\n\t\t\t\t\ttolerance = 0.000001,\n\t\t\t\t\troots = [];\n\t\t\t\tvar count = Numerical.solveQuadratic(a, b, c, roots, tolerance,\n\t\t\t\t\t\t1 - tolerance);\n\t\t\t\tif (count === 0) {\n\t\t\t\t\tinsertCurve(v);\n\t\t\t\t} else {\n\t\t\t\t\troots.sort();\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tparts = Curve.subdivide(v, t);\n\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\tif (count > 1) {\n\t\t\t\t\t\tt = (roots[1] - t) / (1 - t);\n\t\t\t\t\t\tparts = Curve.subdivide(parts[1], t);\n\t\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\t}\n\t\t\t\t\tinsertCurve(parts[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!monoCurves) {\n\t\t\tmonoCurves = this._monoCurves = [];\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tsegments = this._segments;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\thandleCurve(curves[i].getValues());\n\t\t\tif (!this._closed && segments.length > 1) {\n\t\t\t\tvar p1 = segments[segments.length - 1]._point,\n\t\t\t\t\tp2 = segments[0]._point,\n\t\t\t\t\tp1x = p1._x, p1y = p1._y,\n\t\t\t\t\tp2x = p2._x, p2y = p2._y;\n\t\t\t\thandleCurve([p1x, p1y, p1x, p1y, p2x, p2y, p2x, p2y]);\n\t\t\t}\n\t\t\tif (monoCurves.length > 0) {\n\t\t\t\tvar first = monoCurves[0],\n\t\t\t\t\tlast = monoCurves[monoCurves.length - 1];\n\t\t\t\tfirst.previous = last;\n\t\t\t\tlast.next = first;\n\t\t\t}\n\t\t}\n\t\treturn monoCurves;\n\t},\n\n\tgetInteriorPoint: function() {\n\t\tvar bounds = this.getBounds(),\n\t\t\tpoint = bounds.getCenter(true);\n\t\tif (!this.contains(point)) {\n\t\t\tvar curves = this._getMonoCurves(),\n\t\t\t\troots = [],\n\t\t\t\ty = point.y,\n\t\t\t\txIntercepts = [];\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif ((curves[i].winding === 1\n\t\t\t\t\t\t&& y >= values[1] && y <= values[7]\n\t\t\t\t\t\t|| y >= values[7] && y <= values[1])\n\t\t\t\t\t\t&& Curve.solveCubic(values, 1, y, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--)\n\t\t\t\t\t\txIntercepts.push(Curve.evaluate(values, roots[j], 0).x);\n\t\t\t\t}\n\t\t\t\tif (xIntercepts.length > 1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpoint.x = (xIntercepts[0] + xIntercepts[1]) / 2;\n\t\t}\n\t\treturn point;\n\t},\n\n\treorient: function() {\n\t\tthis.setClockwise(true);\n\t\treturn this;\n\t}\n});\n\nCompoundPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar children = this._children,\n\t\t\tmonoCurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tmonoCurves.push.apply(monoCurves, children[i]._getMonoCurves());\n\t\treturn monoCurves;\n\t},\n\n\treorient: function() {\n\t\tvar children = this.removeChildren().sort(function(a, b) {\n\t\t\treturn b.getBounds().getArea() - a.getBounds().getArea();\n\t\t});\n\t\tif (children.length > 0) {\n\t\t\tthis.addChildren(children);\n\t\t\tvar clockwise = children[0].isClockwise();\n\t\t\tfor (var i = 1, l = children.length; i < l; i++) {\n\t\t\t\tvar point = children[i].getInteriorPoint(),\n\t\t\t\t\tcounters = 0;\n\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\t\t\tif (children[j].contains(point))\n\t\t\t\t\t\tcounters++;\n\t\t\t\t}\n\t\t\t\tchildren[i].setClockwise(counters % 2 === 0 && clockwise);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n});\n\nvar PathIterator = Base.extend({\n\t_class: 'PathIterator',\n\n\tinitialize: function(path, maxRecursion, tolerance, matrix) {\n\t\tvar curves = [],\n\t\t\tparts = [],\n\t\t\tlength = 0,\n\t\t\tminDifference = 1 / (maxRecursion || 32),\n\t\t\tsegments = path._segments,\n\t\t\tsegment1 = segments[0],\n\t\t\tsegment2;\n\n\t\tfunction addCurve(segment1, segment2) {\n\t\t\tvar curve = Curve.getValues(segment1, segment2, matrix);\n\t\t\tcurves.push(curve);\n\t\t\tcomputeParts(curve, segment1._index, 0, 1);\n\t\t}\n\n\t\tfunction computeParts(curve, index, minT, maxT) {\n\t\t\tif ((maxT - minT) > minDifference\n\t\t\t\t\t&& !Curve.isFlatEnough(curve, tolerance || 0.25)) {\n\t\t\t\tvar split = Curve.subdivide(curve),\n\t\t\t\t\thalfT = (minT + maxT) / 2;\n\t\t\t\tcomputeParts(split[0], index, minT, halfT);\n\t\t\t\tcomputeParts(split[1], index, halfT, maxT);\n\t\t\t} else {\n\t\t\t\tvar x = curve[6] - curve[0],\n\t\t\t\t\ty = curve[7] - curve[1],\n\t\t\t\t\tdist = Math.sqrt(x * x + y * y);\n\t\t\t\tif (dist > 0.000001) {\n\t\t\t\t\tlength += dist;\n\t\t\t\t\tparts.push({\n\t\t\t\t\t\toffset: length,\n\t\t\t\t\t\tvalue: maxT,\n\t\t\t\t\t\tindex: index\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++) {\n\t\t\tsegment2 = segments[i];\n\t\t\taddCurve(segment1, segment2);\n\t\t\tsegment1 = segment2;\n\t\t}\n\t\tif (path._closed)\n\t\t\taddCurve(segment2, segments[0]);\n\n\t\tthis.curves = curves;\n\t\tthis.parts = parts;\n\t\tthis.length = length;\n\t\tthis.index = 0;\n\t},\n\n\tgetParameterAt: function(offset) {\n\t\tvar i, j = this.index;\n\t\tfor (;;) {\n\t\t\ti = j;\n\t\t\tif (j == 0 || this.parts[--j].offset < offset)\n\t\t\t\tbreak;\n\t\t}\n\t\tfor (var l = this.parts.length; i < l; i++) {\n\t\t\tvar part = this.parts[i];\n\t\t\tif (part.offset >= offset) {\n\t\t\t\tthis.index = i;\n\t\t\t\tvar prev = this.parts[i - 1];\n\t\t\t\tvar prevVal = prev && prev.index == part.index ? prev.value : 0,\n\t\t\t\t\tprevLen = prev ? prev.offset : 0;\n\t\t\t\treturn {\n\t\t\t\t\tvalue: prevVal + (part.value - prevVal)\n\t\t\t\t\t\t* (offset - prevLen) / (part.offset - prevLen),\n\t\t\t\t\tindex: part.index\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tvar part = this.parts[this.parts.length - 1];\n\t\treturn {\n\t\t\tvalue: 1,\n\t\t\tindex: part.index\n\t\t};\n\t},\n\n\tevaluate: function(offset, type) {\n\t\tvar param = this.getParameterAt(offset);\n\t\treturn Curve.evaluate(this.curves[param.index], param.value, type);\n\t},\n\n\tdrawPart: function(ctx, from, to) {\n\t\tfrom = this.getParameterAt(from);\n\t\tto = this.getParameterAt(to);\n\t\tfor (var i = from.index; i <= to.index; i++) {\n\t\t\tvar curve = Curve.getPart(this.curves[i],\n\t\t\t\t\ti == from.index ? from.value : 0,\n\t\t\t\t\ti == to.index ? to.value : 1);\n\t\t\tif (i == from.index)\n\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\tctx.bezierCurveTo.apply(ctx, curve.slice(2));\n\t\t}\n\t}\n}, Base.each(['getPoint', 'getTangent', 'getNormal', 'getCurvature'],\n\tfunction(name, index) {\n\t\tthis[name + 'At'] = function(offset) {\n\t\t\treturn this.evaluate(offset, index);\n\t\t};\n\t}, {})\n);\n\nvar PathFitter = Base.extend({\n\tinitialize: function(path, error) {\n\t\tvar points = this.points = [],\n\t\t\tsegments = path._segments,\n\t\t\tprev;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar point = segments[i].point.clone();\n\t\t\tif (!prev || !prev.equals(point)) {\n\t\t\t\tpoints.push(point);\n\t\t\t\tprev = point;\n\t\t\t}\n\t\t}\n\n\t\tif (path._closed) {\n\t\t\tthis.closed = true;\n\t\t\tpoints.unshift(points[points.length - 1]);\n\t\t\tpoints.push(points[1]);\n\t\t}\n\n\t\tthis.error = error;\n\t},\n\n\tfit: function() {\n\t\tvar points = this.points,\n\t\t\tlength = points.length,\n\t\t\tsegments = this.segments = length > 0\n\t\t\t\t\t? [new Segment(points[0])] : [];\n\t\tif (length > 1)\n\t\t\tthis.fitCubic(0, length - 1,\n\t\t\t\tpoints[1].subtract(points[0]).normalize(),\n\t\t\t\tpoints[length - 2].subtract(points[length - 1]).normalize());\n\n\t\tif (this.closed) {\n\t\t\tsegments.shift();\n\t\t\tsegments.pop();\n\t\t}\n\n\t\treturn segments;\n\t},\n\n\tfitCubic: function(first, last, tan1, tan2) {\n\t\tif (last - first == 1) {\n\t\t\tvar pt1 = this.points[first],\n\t\t\t\tpt2 = this.points[last],\n\t\t\t\tdist = pt1.getDistance(pt2) / 3;\n\t\t\tthis.addCurve([pt1, pt1.add(tan1.normalize(dist)),\n\t\t\t\t\tpt2.add(tan2.normalize(dist)), pt2]);\n\t\t\treturn;\n\t\t}\n\t\tvar uPrime = this.chordLengthParameterize(first, last),\n\t\t\tmaxError = Math.max(this.error, this.error * this.error),\n\t\t\tsplit;\n\t\tfor (var i = 0; i <= 4; i++) {\n\t\t\tvar curve = this.generateBezier(first, last, uPrime, tan1, tan2);\n\t\t\tvar max = this.findMaxError(first, last, curve, uPrime);\n\t\t\tif (max.error < this.error) {\n\t\t\t\tthis.addCurve(curve);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsplit = max.index;\n\t\t\tif (max.error >= maxError)\n\t\t\t\tbreak;\n\t\t\tthis.reparameterize(first, last, uPrime, curve);\n\t\t\tmaxError = max.error;\n\t\t}\n\t\tvar V1 = this.points[split - 1].subtract(this.points[split]),\n\t\t\tV2 = this.points[split].subtract(this.points[split + 1]),\n\t\t\ttanCenter = V1.add(V2).divide(2).normalize();\n\t\tthis.fitCubic(first, split, tan1, tanCenter);\n\t\tthis.fitCubic(split, last, tanCenter.negate(), tan2);\n\t},\n\n\taddCurve: function(curve) {\n\t\tvar prev = this.segments[this.segments.length - 1];\n\t\tprev.setHandleOut(curve[1].subtract(curve[0]));\n\t\tthis.segments.push(\n\t\t\t\tnew Segment(curve[3], curve[2].subtract(curve[3])));\n\t},\n\n\tgenerateBezier: function(first, last, uPrime, tan1, tan2) {\n\t\tvar epsilon = 1e-12,\n\t\t\tpt1 = this.points[first],\n\t\t\tpt2 = this.points[last],\n\t\t\tC = [[0, 0], [0, 0]],\n\t\t\tX = [0, 0];\n\n\t\tfor (var i = 0, l = last - first + 1; i < l; i++) {\n\t\t\tvar u = uPrime[i],\n\t\t\t\tt = 1 - u,\n\t\t\t\tb = 3 * u * t,\n\t\t\t\tb0 = t * t * t,\n\t\t\t\tb1 = b * t,\n\t\t\t\tb2 = b * u,\n\t\t\t\tb3 = u * u * u,\n\t\t\t\ta1 = tan1.normalize(b1),\n\t\t\t\ta2 = tan2.normalize(b2),\n\t\t\t\ttmp = this.points[first + i]\n\t\t\t\t\t.subtract(pt1.multiply(b0 + b1))\n\t\t\t\t\t.subtract(pt2.multiply(b2 + b3));\n\t\t\tC[0][0] += a1.dot(a1);\n\t\t\tC[0][1] += a1.dot(a2);\n\t\t\tC[1][0] = C[0][1];\n\t\t\tC[1][1] += a2.dot(a2);\n\t\t\tX[0] += a1.dot(tmp);\n\t\t\tX[1] += a2.dot(tmp);\n\t\t}\n\n\t\tvar detC0C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1],\n\t\t\talpha1, alpha2;\n\t\tif (Math.abs(detC0C1) > epsilon) {\n\t\t\tvar detC0X\t= C[0][0] * X[1]\t- C[1][0] * X[0],\n\t\t\t\tdetXC1\t= X[0]\t  * C[1][1] - X[1]\t  * C[0][1];\n\t\t\talpha1 = detXC1 / detC0C1;\n\t\t\talpha2 = detC0X / detC0C1;\n\t\t} else {\n\t\t\tvar c0 = C[0][0] + C[0][1],\n\t\t\t\tc1 = C[1][0] + C[1][1];\n\t\t\tif (Math.abs(c0) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[0] / c0;\n\t\t\t} else if (Math.abs(c1) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[1] / c1;\n\t\t\t} else {\n\t\t\t\talpha1 = alpha2 = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar segLength = pt2.getDistance(pt1);\n\t\tepsilon *= segLength;\n\t\tif (alpha1 < epsilon || alpha2 < epsilon) {\n\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t}\n\n\t\treturn [pt1, pt1.add(tan1.normalize(alpha1)),\n\t\t\t\tpt2.add(tan2.normalize(alpha2)), pt2];\n\t},\n\n\treparameterize: function(first, last, u, curve) {\n\t\tfor (var i = first; i <= last; i++) {\n\t\t\tu[i - first] = this.findRoot(curve, this.points[i], u[i - first]);\n\t\t}\n\t},\n\n\tfindRoot: function(curve, point, u) {\n\t\tvar curve1 = [],\n\t\t\tcurve2 = [];\n\t\tfor (var i = 0; i <= 2; i++) {\n\t\t\tcurve1[i] = curve[i + 1].subtract(curve[i]).multiply(3);\n\t\t}\n\t\tfor (var i = 0; i <= 1; i++) {\n\t\t\tcurve2[i] = curve1[i + 1].subtract(curve1[i]).multiply(2);\n\t\t}\n\t\tvar pt = this.evaluate(3, curve, u),\n\t\t\tpt1 = this.evaluate(2, curve1, u),\n\t\t\tpt2 = this.evaluate(1, curve2, u),\n\t\t\tdiff = pt.subtract(point),\n\t\t\tdf = pt1.dot(pt1) + diff.dot(pt2);\n\t\tif (Math.abs(df) < 0.000001)\n\t\t\treturn u;\n\t\treturn u - diff.dot(pt1) / df;\n\t},\n\n\tevaluate: function(degree, curve, t) {\n\t\tvar tmp = curve.slice();\n\t\tfor (var i = 1; i <= degree; i++) {\n\t\t\tfor (var j = 0; j <= degree - i; j++) {\n\t\t\t\ttmp[j] = tmp[j].multiply(1 - t).add(tmp[j + 1].multiply(t));\n\t\t\t}\n\t\t}\n\t\treturn tmp[0];\n\t},\n\n\tchordLengthParameterize: function(first, last) {\n\t\tvar u = [0];\n\t\tfor (var i = first + 1; i <= last; i++) {\n\t\t\tu[i - first] = u[i - first - 1]\n\t\t\t\t\t+ this.points[i].getDistance(this.points[i - 1]);\n\t\t}\n\t\tfor (var i = 1, m = last - first; i <= m; i++) {\n\t\t\tu[i] /= u[m];\n\t\t}\n\t\treturn u;\n\t},\n\n\tfindMaxError: function(first, last, curve, u) {\n\t\tvar index = Math.floor((last - first + 1) / 2),\n\t\t\tmaxDist = 0;\n\t\tfor (var i = first + 1; i < last; i++) {\n\t\t\tvar P = this.evaluate(3, curve, u[i - first]);\n\t\t\tvar v = P.subtract(this.points[i]);\n\t\t\tvar dist = v.x * v.x + v.y * v.y;\n\t\t\tif (dist >= maxDist) {\n\t\t\t\tmaxDist = dist;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\terror: maxDist,\n\t\t\tindex: index\n\t\t};\n\t}\n});\n\nvar TextItem = Item.extend({\n\t_class: 'TextItem',\n\t_boundsSelected: true,\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_serializeFields: {\n\t\tcontent: null\n\t},\n\t_boundsGetter: 'getBounds',\n\n\tinitialize: function TextItem(arg) {\n\t\tthis._content = '';\n\t\tthis._lines = [];\n\t\tvar hasProps = arg && Base.isPlainObject(arg)\n\t\t\t\t&& arg.x === undefined && arg.y === undefined;\n\t\tthis._initialize(hasProps && arg, !hasProps && Point.read(arguments));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._content === item._content;\n\t},\n\n\t_clone: function _clone(copy, insert) {\n\t\tcopy.setContent(this._content);\n\t\treturn _clone.base.call(this, copy, insert);\n\t},\n\n\tgetContent: function() {\n\t\treturn this._content;\n\t},\n\n\tsetContent: function(content) {\n\t\tthis._content = '' + content;\n\t\tthis._lines = this._content.split(/\\r\\n|\\n|\\r/mg);\n\t\tthis._changed(265);\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._content;\n\t},\n\n\tgetCharacterStyle: '#getStyle',\n\tsetCharacterStyle: '#setStyle',\n\n\tgetParagraphStyle: '#getStyle',\n\tsetParagraphStyle: '#setStyle'\n});\n\nvar PointText = TextItem.extend({\n\t_class: 'PointText',\n\n\tinitialize: function PointText() {\n\t\tTextItem.apply(this, arguments);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new PointText(Item.NO_INSERT), insert);\n\t},\n\n\tgetPoint: function() {\n\t\tvar point = this._matrix.getTranslation();\n\t\treturn new LinkedPoint(point.x, point.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.translate(point.subtract(this._matrix.getTranslation()));\n\t},\n\n\t_draw: function(ctx) {\n\t\tif (!this._content)\n\t\t\treturn;\n\t\tthis._setStyles(ctx);\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tleading = style.getLeading(),\n\t\t\tshadowColor = ctx.shadowColor;\n\t\tctx.font = style.getFontStyle();\n\t\tctx.textAlign = style.getJustification();\n\t\tfor (var i = 0, l = lines.length; i < l; i++) {\n\t\t\tctx.shadowColor = shadowColor;\n\t\t\tvar line = lines[i];\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fillText(line, 0, 0);\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.strokeText(line, 0, 0);\n\t\t\tctx.translate(0, leading);\n\t\t}\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tnumLines = lines.length,\n\t\t\tjustification = style.getJustification(),\n\t\t\tleading = style.getLeading(),\n\t\t\twidth = this.getView().getTextWidth(style.getFontStyle(), lines),\n\t\t\tx = 0;\n\t\tif (justification !== 'left')\n\t\t\tx -= width / (justification === 'center' ? 2: 1);\n\t\tvar bounds = new Rectangle(x,\n\t\t\t\t\tnumLines ? - 0.75 * leading : 0,\n\t\t\t\t\twidth, numLines * leading);\n\t\treturn matrix ? matrix._transformBounds(bounds, bounds) : bounds;\n\t}\n});\n\nvar Color = Base.extend(new function() {\n\tvar types = {\n\t\tgray: ['gray'],\n\t\trgb: ['red', 'green', 'blue'],\n\t\thsb: ['hue', 'saturation', 'brightness'],\n\t\thsl: ['hue', 'saturation', 'lightness'],\n\t\tgradient: ['gradient', 'origin', 'destination', 'highlight']\n\t};\n\n\tvar componentParsers = {},\n\t\tcolorCache = {},\n\t\tcolorCtx;\n\n\tfunction fromCSS(string) {\n\t\tvar match = string.match(/^#(\\w{1,2})(\\w{1,2})(\\w{1,2})$/),\n\t\t\tcomponents;\n\t\tif (match) {\n\t\t\tcomponents = [0, 0, 0];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar value = match[i + 1];\n\t\t\t\tcomponents[i] = parseInt(value.length == 1\n\t\t\t\t\t\t? value + value : value, 16) / 255;\n\t\t\t}\n\t\t} else if (match = string.match(/^rgba?\\((.*)\\)$/)) {\n\t\t\tcomponents = match[1].split(',');\n\t\t\tfor (var i = 0, l = components.length; i < l; i++) {\n\t\t\t\tvar value = +components[i];\n\t\t\t\tcomponents[i] = i < 3 ? value / 255 : value;\n\t\t\t}\n\t\t} else {\n\t\t\tvar cached = colorCache[string];\n\t\t\tif (!cached) {\n\t\t\t\tif (!colorCtx) {\n\t\t\t\t\tcolorCtx = CanvasProvider.getContext(1, 1);\n\t\t\t\t\tcolorCtx.globalCompositeOperation = 'copy';\n\t\t\t\t}\n\t\t\t\tcolorCtx.fillStyle = 'rgba(0,0,0,0)';\n\t\t\t\tcolorCtx.fillStyle = string;\n\t\t\t\tcolorCtx.fillRect(0, 0, 1, 1);\n\t\t\t\tvar data = colorCtx.getImageData(0, 0, 1, 1).data;\n\t\t\t\tcached = colorCache[string] = [\n\t\t\t\t\tdata[0] / 255,\n\t\t\t\t\tdata[1] / 255,\n\t\t\t\t\tdata[2] / 255\n\t\t\t\t];\n\t\t\t}\n\t\t\tcomponents = cached.slice();\n\t\t}\n\t\treturn components;\n\t}\n\n\tvar hsbIndices = [\n\t\t[0, 3, 1],\n\t\t[2, 0, 1],\n\t\t[1, 0, 3],\n\t\t[1, 2, 0],\n\t\t[3, 1, 0],\n\t\t[0, 1, 2]\n\t];\n\n\tvar converters = {\n\t\t'rgb-hsb': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\th = delta === 0 ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60;\n\t\t\treturn [h, max === 0 ? 0 : delta / max, max];\n\t\t},\n\n\t\t'hsb-rgb': function(h, s, b) {\n\t\t\th = (((h / 60) % 6) + 6) % 6;\n\t\t\tvar i = Math.floor(h),\n\t\t\t\tf = h - i,\n\t\t\t\ti = hsbIndices[i],\n\t\t\t\tv = [\n\t\t\t\t\tb,\n\t\t\t\t\tb * (1 - s),\n\t\t\t\t\tb * (1 - s * f),\n\t\t\t\t\tb * (1 - s * (1 - f))\n\t\t\t\t];\n\t\t\treturn [v[i[0]], v[i[1]], v[i[2]]];\n\t\t},\n\n\t\t'rgb-hsl': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\tachromatic = delta === 0,\n\t\t\t\th = achromatic ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60,\n\t\t\t\tl = (max + min) / 2,\n\t\t\t\ts = achromatic ? 0 : l < 0.5\n\t\t\t\t\t\t? delta / (max + min)\n\t\t\t\t\t\t: delta / (2 - max - min);\n\t\t\treturn [h, s, l];\n\t\t},\n\n\t\t'hsl-rgb': function(h, s, l) {\n\t\t\th = (((h / 360) % 1) + 1) % 1;\n\t\t\tif (s === 0)\n\t\t\t\treturn [l, l, l];\n\t\t\tvar t3s = [ h + 1 / 3, h, h - 1 / 3 ],\n\t\t\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s,\n\t\t\t\tt1 = 2 * l - t2,\n\t\t\t\tc = [];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar t3 = t3s[i];\n\t\t\t\tif (t3 < 0) t3 += 1;\n\t\t\t\tif (t3 > 1) t3 -= 1;\n\t\t\t\tc[i] = 6 * t3 < 1\n\t\t\t\t\t? t1 + (t2 - t1) * 6 * t3\n\t\t\t\t\t: 2 * t3 < 1\n\t\t\t\t\t\t? t2\n\t\t\t\t\t\t: 3 * t3 < 2\n\t\t\t\t\t\t\t? t1 + (t2 - t1) * ((2 / 3) - t3) * 6\n\t\t\t\t\t\t\t: t1;\n\t\t\t}\n\t\t\treturn c;\n\t\t},\n\n\t\t'rgb-gray': function(r, g, b) {\n\t\t\treturn [r * 0.2989 + g * 0.587 + b * 0.114];\n\t\t},\n\n\t\t'gray-rgb': function(g) {\n\t\t\treturn [g, g, g];\n\t\t},\n\n\t\t'gray-hsb': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gray-hsl': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gradient-rgb': function() {\n\t\t\treturn [];\n\t\t},\n\n\t\t'rgb-gradient': function() {\n\t\t\treturn [];\n\t\t}\n\n\t};\n\n\treturn Base.each(types, function(properties, type) {\n\t\tcomponentParsers[type] = [];\n\t\tBase.each(properties, function(name, index) {\n\t\t\tvar part = Base.capitalize(name),\n\t\t\t\thasOverlap = /^(hue|saturation)$/.test(name),\n\t\t\t\tparser = componentParsers[type][index] = name === 'gradient'\n\t\t\t\t\t? function(value) {\n\t\t\t\t\t\tvar current = this._components[0];\n\t\t\t\t\t\tvalue = Gradient.read(Array.isArray(value) ? value\n\t\t\t\t\t\t\t\t: arguments, 0, { readNull: true });\n\t\t\t\t\t\tif (current !== value) {\n\t\t\t\t\t\t\tif (current)\n\t\t\t\t\t\t\t\tcurrent._removeOwner(this);\n\t\t\t\t\t\t\tif (value)\n\t\t\t\t\t\t\t\tvalue._addOwner(this);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\t: type === 'gradient'\n\t\t\t\t\t\t? function() {\n\t\t\t\t\t\t\treturn Point.read(arguments, 0, {\n\t\t\t\t\t\t\t\t\treadNull: name === 'highlight',\n\t\t\t\t\t\t\t\t\tclone: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: function(value) {\n\t\t\t\t\t\t\treturn value == null || isNaN(value) ? 0 : value;\n\t\t\t\t\t\t};\n\n\t\t\tthis['get' + part] = function() {\n\t\t\t\treturn this._type === type\n\t\t\t\t\t|| hasOverlap && /^hs[bl]$/.test(this._type)\n\t\t\t\t\t\t? this._components[index]\n\t\t\t\t\t\t: this._convert(type)[index];\n\t\t\t};\n\n\t\t\tthis['set' + part] = function(value) {\n\t\t\t\tif (this._type !== type\n\t\t\t\t\t\t&& !(hasOverlap && /^hs[bl]$/.test(this._type))) {\n\t\t\t\t\tthis._components = this._convert(type);\n\t\t\t\t\tthis._properties = types[type];\n\t\t\t\t\tthis._type = type;\n\t\t\t\t}\n\t\t\t\tvalue = parser.call(this, value);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tthis._components[index] = value;\n\t\t\t\t\tthis._changed();\n\t\t\t\t}\n\t\t\t};\n\t\t}, this);\n\t}, {\n\t\t_class: 'Color',\n\t\t_readIndex: true,\n\n\t\tinitialize: function Color(arg) {\n\t\t\tvar slice = Array.prototype.slice,\n\t\t\t\targs = arguments,\n\t\t\t\tread = 0,\n\t\t\t\ttype,\n\t\t\t\tcomponents,\n\t\t\t\talpha,\n\t\t\t\tvalues;\n\t\t\tif (Array.isArray(arg)) {\n\t\t\t\targs = arg;\n\t\t\t\targ = args[0];\n\t\t\t}\n\t\t\tvar argType = arg != null && typeof arg;\n\t\t\tif (argType === 'string' && arg in types) {\n\t\t\t\ttype = arg;\n\t\t\t\targ = args[1];\n\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\tcomponents = arg;\n\t\t\t\t\talpha = args[2];\n\t\t\t\t} else {\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread = 1;\n\t\t\t\t\targs = slice.call(args, 1);\n\t\t\t\t\targType = typeof arg;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!components) {\n\t\t\t\tvalues = argType === 'number'\n\t\t\t\t\t\t? args\n\t\t\t\t\t\t: argType === 'object' && arg.length != null\n\t\t\t\t\t\t\t? arg\n\t\t\t\t\t\t\t: null;\n\t\t\t\tif (values) {\n\t\t\t\t\tif (!type)\n\t\t\t\t\t\ttype = values.length >= 3\n\t\t\t\t\t\t\t\t? 'rgb'\n\t\t\t\t\t\t\t\t: 'gray';\n\t\t\t\t\tvar length = types[type].length;\n\t\t\t\t\talpha = values[length];\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread += values === arguments\n\t\t\t\t\t\t\t? length + (alpha != null ? 1 : 0)\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t\tif (values.length > length)\n\t\t\t\t\t\tvalues = slice.call(values, 0, length);\n\t\t\t\t} else if (argType === 'string') {\n\t\t\t\t\ttype = 'rgb';\n\t\t\t\t\tcomponents = fromCSS(arg);\n\t\t\t\t\tif (components.length === 4) {\n\t\t\t\t\t\talpha = components[3];\n\t\t\t\t\t\tcomponents.length--;\n\t\t\t\t\t}\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tif (arg.constructor === Color) {\n\t\t\t\t\t\ttype = arg._type;\n\t\t\t\t\t\tcomponents = arg._components.slice();\n\t\t\t\t\t\talpha = arg._alpha;\n\t\t\t\t\t\tif (type === 'gradient') {\n\t\t\t\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\t\t\t\tvar point = components[i];\n\t\t\t\t\t\t\t\tif (point)\n\t\t\t\t\t\t\t\t\tcomponents[i] = point.clone();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (arg.constructor === Gradient) {\n\t\t\t\t\t\ttype = 'gradient';\n\t\t\t\t\t\tvalues = args;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'hue' in arg\n\t\t\t\t\t\t\t? 'lightness' in arg\n\t\t\t\t\t\t\t\t? 'hsl'\n\t\t\t\t\t\t\t\t: 'hsb'\n\t\t\t\t\t\t\t: 'gradient' in arg || 'stops' in arg\n\t\t\t\t\t\t\t\t\t|| 'radial' in arg\n\t\t\t\t\t\t\t\t? 'gradient'\n\t\t\t\t\t\t\t\t: 'gray' in arg\n\t\t\t\t\t\t\t\t\t? 'gray'\n\t\t\t\t\t\t\t\t\t: 'rgb';\n\t\t\t\t\t\tvar properties = types[type];\n\t\t\t\t\t\t\tparsers = componentParsers[type];\n\t\t\t\t\t\tthis._components = components = [];\n\t\t\t\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\t\t\t\tvar value = arg[properties[i]];\n\t\t\t\t\t\t\tif (value == null && i === 0 && type === 'gradient'\n\t\t\t\t\t\t\t\t\t&& 'stops' in arg) {\n\t\t\t\t\t\t\t\tvalue = {\n\t\t\t\t\t\t\t\t\tstops: arg.stops,\n\t\t\t\t\t\t\t\t\tradial: arg.radial\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue = parsers[i].call(this, value);\n\t\t\t\t\t\t\tif (value != null)\n\t\t\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\talpha = arg.alpha;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.__read && type)\n\t\t\t\t\tread = 1;\n\t\t\t}\n\t\t\tthis._type = type || 'rgb';\n\t\t\tif (type === 'gradient')\n\t\t\t\tthis._id = Color._id = (Color._id || 0) + 1;\n\t\t\tif (!components) {\n\t\t\t\tthis._components = components = [];\n\t\t\t\tvar parsers = componentParsers[this._type];\n\t\t\t\tfor (var i = 0, l = parsers.length; i < l; i++) {\n\t\t\t\t\tvar value = parsers[i].call(this, values && values[i]);\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._components = components;\n\t\t\tthis._properties = types[this._type];\n\t\t\tthis._alpha = alpha;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = read;\n\t\t},\n\n\t\t_serialize: function(options, dictionary) {\n\t\t\tvar components = this.getComponents();\n\t\t\treturn Base.serialize(\n\t\t\t\t\t/^(gray|rgb)$/.test(this._type)\n\t\t\t\t\t\t? components\n\t\t\t\t\t\t: [this._type].concat(components),\n\t\t\t\t\toptions, true, dictionary);\n\t\t},\n\n\t\t_changed: function() {\n\t\t\tthis._canvasStyle = null;\n\t\t\tif (this._owner)\n\t\t\t\tthis._owner._changed(65);\n\t\t},\n\n\t\t_convert: function(type) {\n\t\t\tvar converter;\n\t\t\treturn this._type === type\n\t\t\t\t\t? this._components.slice()\n\t\t\t\t\t: (converter = converters[this._type + '-' + type])\n\t\t\t\t\t\t? converter.apply(this, this._components)\n\t\t\t\t\t\t: converters['rgb-' + type].apply(this,\n\t\t\t\t\t\t\tconverters[this._type + '-rgb'].apply(this,\n\t\t\t\t\t\t\t\tthis._components));\n\t\t},\n\n\t\tconvert: function(type) {\n\t\t\treturn new Color(type, this._convert(type), this._alpha);\n\t\t},\n\n\t\tgetType: function() {\n\t\t\treturn this._type;\n\t\t},\n\n\t\tsetType: function(type) {\n\t\t\tthis._components = this._convert(type);\n\t\t\tthis._properties = types[type];\n\t\t\tthis._type = type;\n\t\t},\n\n\t\tgetComponents: function() {\n\t\t\tvar components = this._components.slice();\n\t\t\tif (this._alpha != null)\n\t\t\t\tcomponents.push(this._alpha);\n\t\t\treturn components;\n\t\t},\n\n\t\tgetAlpha: function() {\n\t\t\treturn this._alpha != null ? this._alpha : 1;\n\t\t},\n\n\t\tsetAlpha: function(alpha) {\n\t\t\tthis._alpha = alpha == null ? null : Math.min(Math.max(alpha, 0), 1);\n\t\t\tthis._changed();\n\t\t},\n\n\t\thasAlpha: function() {\n\t\t\treturn this._alpha != null;\n\t\t},\n\n\t\tequals: function(color) {\n\t\t\tvar col = Base.isPlainValue(color, true)\n\t\t\t\t\t? Color.read(arguments)\n\t\t\t\t\t: color;\n\t\t\treturn col === this || col && this._class === col._class\n\t\t\t\t\t&& this._type === col._type\n\t\t\t\t\t&& this._alpha === col._alpha\n\t\t\t\t\t&& Base.equals(this._components, col._components)\n\t\t\t\t\t|| false;\n\t\t},\n\n\t\ttoString: function() {\n\t\t\tvar properties = this._properties,\n\t\t\t\tparts = [],\n\t\t\t\tisGradient = this._type === 'gradient',\n\t\t\t\tf = Formatter.instance;\n\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\tvar value = this._components[i];\n\t\t\t\tif (value != null)\n\t\t\t\t\tparts.push(properties[i] + ': '\n\t\t\t\t\t\t\t+ (isGradient ? value : f.number(value)));\n\t\t\t}\n\t\t\tif (this._alpha != null)\n\t\t\t\tparts.push('alpha: ' + f.number(this._alpha));\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\n\t\ttoCSS: function(hex) {\n\t\t\tvar components = this._convert('rgb'),\n\t\t\t\talpha = hex || this._alpha == null ? 1 : this._alpha;\n\t\t\tfunction convert(val) {\n\t\t\t\treturn Math.round((val < 0 ? 0 : val > 1 ? 1 : val) * 255);\n\t\t\t}\n\t\t\tcomponents = [\n\t\t\t\tconvert(components[0]),\n\t\t\t\tconvert(components[1]),\n\t\t\t\tconvert(components[2])\n\t\t\t];\n\t\t\tif (alpha < 1)\n\t\t\t\tcomponents.push(alpha < 0 ? 0 : alpha);\n\t\t\treturn hex\n\t\t\t\t\t? '#' + ((1 << 24) + (components[0] << 16)\n\t\t\t\t\t\t+ (components[1] << 8)\n\t\t\t\t\t\t+ components[2]).toString(16).slice(1)\n\t\t\t\t\t: (components.length == 4 ? 'rgba(' : 'rgb(')\n\t\t\t\t\t\t+ components.join(',') + ')';\n\t\t},\n\n\t\ttoCanvasStyle: function(ctx) {\n\t\t\tif (this._canvasStyle)\n\t\t\t\treturn this._canvasStyle;\n\t\t\tif (this._type !== 'gradient')\n\t\t\t\treturn this._canvasStyle = this.toCSS();\n\t\t\tvar components = this._components,\n\t\t\t\tgradient = components[0],\n\t\t\t\tstops = gradient._stops,\n\t\t\t\torigin = components[1],\n\t\t\t\tdestination = components[2],\n\t\t\t\tcanvasGradient;\n\t\t\tif (gradient._radial) {\n\t\t\t\tvar radius = destination.getDistance(origin),\n\t\t\t\t\thighlight = components[3];\n\t\t\t\tif (highlight) {\n\t\t\t\t\tvar vector = highlight.subtract(origin);\n\t\t\t\t\tif (vector.getLength() > radius)\n\t\t\t\t\t\thighlight = origin.add(vector.normalize(radius - 0.1));\n\t\t\t\t}\n\t\t\t\tvar start = highlight || origin;\n\t\t\t\tcanvasGradient = ctx.createRadialGradient(start.x, start.y,\n\t\t\t\t\t\t0, origin.x, origin.y, radius);\n\t\t\t} else {\n\t\t\t\tcanvasGradient = ctx.createLinearGradient(origin.x, origin.y,\n\t\t\t\t\t\tdestination.x, destination.y);\n\t\t\t}\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i];\n\t\t\t\tcanvasGradient.addColorStop(stop._rampPoint,\n\t\t\t\t\t\tstop._color.toCanvasStyle());\n\t\t\t}\n\t\t\treturn this._canvasStyle = canvasGradient;\n\t\t},\n\n\t\ttransform: function(matrix) {\n\t\t\tif (this._type === 'gradient') {\n\t\t\t\tvar components = this._components;\n\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\tvar point = components[i];\n\t\t\t\t\tmatrix._transformPoint(point, point, true);\n\t\t\t\t}\n\t\t\t\tthis._changed();\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\t_types: types,\n\n\t\t\trandom: function() {\n\t\t\t\tvar random = Math.random;\n\t\t\t\treturn new Color(random(), random(), random());\n\t\t\t}\n\t\t}\n\t});\n}, new function() {\n\tvar operators = {\n\t\tadd: function(a, b) {\n\t\t\treturn a + b;\n\t\t},\n\n\t\tsubtract: function(a, b) {\n\t\t\treturn a - b;\n\t\t},\n\n\t\tmultiply: function(a, b) {\n\t\t\treturn a * b;\n\t\t},\n\n\t\tdivide: function(a, b) {\n\t\t\treturn a / b;\n\t\t}\n\t};\n\n\treturn Base.each(operators, function(operator, name) {\n\t\tthis[name] = function(color) {\n\t\t\tcolor = Color.read(arguments);\n\t\t\tvar type = this._type,\n\t\t\t\tcomponents1 = this._components,\n\t\t\t\tcomponents2 = color._convert(type);\n\t\t\tfor (var i = 0, l = components1.length; i < l; i++)\n\t\t\t\tcomponents2[i] = operator(components1[i], components2[i]);\n\t\t\treturn new Color(type, components2,\n\t\t\t\t\tthis._alpha != null\n\t\t\t\t\t\t\t? operator(this._alpha, color.getAlpha())\n\t\t\t\t\t\t\t: null);\n\t\t};\n\t}, {\n\t});\n});\n\nBase.each(Color._types, function(properties, type) {\n\tvar ctor = this[Base.capitalize(type) + 'Color'] = function(arg) {\n\t\t\tvar argType = arg != null && typeof arg,\n\t\t\t\tcomponents = argType === 'object' && arg.length != null\n\t\t\t\t\t? arg\n\t\t\t\t\t: argType === 'string'\n\t\t\t\t\t\t? null\n\t\t\t\t\t\t: arguments;\n\t\t\treturn components\n\t\t\t\t\t? new Color(type, components)\n\t\t\t\t\t: new Color(arg);\n\t\t};\n\tif (type.length == 3) {\n\t\tvar acronym = type.toUpperCase();\n\t\tColor[acronym] = this[acronym + 'Color'] = ctor;\n\t}\n}, Base.exports);\n\nvar Gradient = Base.extend({\n\t_class: 'Gradient',\n\n\tinitialize: function Gradient(stops, radial) {\n\t\tthis._id = Gradient._id = (Gradient._id || 0) + 1;\n\t\tif (stops && this._set(stops))\n\t\t\tstops = radial = null;\n\t\tif (!this._stops)\n\t\t\tthis.setStops(stops || ['white', 'black']);\n\t\tif (this._radial == null)\n\t\t\tthis.setRadial(typeof radial === 'string' && radial === 'radial'\n\t\t\t\t\t|| radial || false);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._stops, this._radial],\n\t\t\t\t\toptions, true, dictionary);\n\t\t});\n\t},\n\n\t_changed: function() {\n\t\tfor (var i = 0, l = this._owners && this._owners.length; i < l; i++)\n\t\t\tthis._owners[i]._changed();\n\t},\n\n\t_addOwner: function(color) {\n\t\tif (!this._owners)\n\t\t\tthis._owners = [];\n\t\tthis._owners.push(color);\n\t},\n\n\t_removeOwner: function(color) {\n\t\tvar index = this._owners ? this._owners.indexOf(color) : -1;\n\t\tif (index != -1) {\n\t\t\tthis._owners.splice(index, 1);\n\t\t\tif (this._owners.length === 0)\n\t\t\t\tthis._owners = undefined;\n\t\t}\n\t},\n\n\tclone: function() {\n\t\tvar stops = [];\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\tstops[i] = this._stops[i].clone();\n\t\treturn new Gradient(stops);\n\t},\n\n\tgetStops: function() {\n\t\treturn this._stops;\n\t},\n\n\tsetStops: function(stops) {\n\t\tif (this.stops) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\t\tthis._stops[i]._owner = undefined;\n\t\t}\n\t\tif (stops.length < 2)\n\t\t\tthrow new Error(\n\t\t\t\t\t'Gradient stop list needs to contain at least two stops.');\n\t\tthis._stops = GradientStop.readAll(stops, 0, { clone: true });\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\tvar stop = this._stops[i];\n\t\t\tstop._owner = this;\n\t\t\tif (stop._defaultRamp)\n\t\t\t\tstop.setRampPoint(i / (l - 1));\n\t\t}\n\t\tthis._changed();\n\t},\n\n\tgetRadial: function() {\n\t\treturn this._radial;\n\t},\n\n\tsetRadial: function(radial) {\n\t\tthis._radial = radial;\n\t\tthis._changed();\n\t},\n\n\tequals: function(gradient) {\n\t\tif (gradient === this)\n\t\t\treturn true;\n\t\tif (gradient && this._class === gradient._class\n\t\t\t\t&& this._stops.length === gradient._stops.length) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\t\tif (!this._stops[i].equals(gradient._stops[i]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n});\n\nvar GradientStop = Base.extend({\n\t_class: 'GradientStop',\n\n\tinitialize: function GradientStop(arg0, arg1) {\n\t\tif (arg0) {\n\t\t\tvar color, rampPoint;\n\t\t\tif (arg1 === undefined && Array.isArray(arg0)) {\n\t\t\t\tcolor = arg0[0];\n\t\t\t\trampPoint = arg0[1];\n\t\t\t} else if (arg0.color) {\n\t\t\t\tcolor = arg0.color;\n\t\t\t\trampPoint = arg0.rampPoint;\n\t\t\t} else {\n\t\t\t\tcolor = arg0;\n\t\t\t\trampPoint = arg1;\n\t\t\t}\n\t\t\tthis.setColor(color);\n\t\t\tthis.setRampPoint(rampPoint);\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new GradientStop(this._color.clone(), this._rampPoint);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize([this._color, this._rampPoint], options, true,\n\t\t\t\tdictionary);\n\t},\n\n\t_changed: function() {\n\t\tif (this._owner)\n\t\t\tthis._owner._changed(65);\n\t},\n\n\tgetRampPoint: function() {\n\t\treturn this._rampPoint;\n\t},\n\n\tsetRampPoint: function(rampPoint) {\n\t\tthis._defaultRamp = rampPoint == null;\n\t\tthis._rampPoint = rampPoint || 0;\n\t\tthis._changed();\n\t},\n\n\tgetColor: function() {\n\t\treturn this._color;\n\t},\n\n\tsetColor: function(color) {\n\t\tthis._color = Color.read(arguments);\n\t\tif (this._color === color)\n\t\t\tthis._color = color.clone();\n\t\tthis._color._owner = this;\n\t\tthis._changed();\n\t},\n\n\tequals: function(stop) {\n\t\treturn stop === this || stop && this._class === stop._class\n\t\t\t\t&& this._color.equals(stop._color)\n\t\t\t\t&& this._rampPoint == stop._rampPoint\n\t\t\t\t|| false;\n\t}\n});\n\nvar Style = Base.extend(new function() {\n\tvar defaults = {\n\t\tfillColor: undefined,\n\t\tstrokeColor: undefined,\n\t\tstrokeWidth: 1,\n\t\tstrokeCap: 'butt',\n\t\tstrokeJoin: 'miter',\n\t\tstrokeScaling: true,\n\t\tmiterLimit: 10,\n\t\tdashOffset: 0,\n\t\tdashArray: [],\n\t\twindingRule: 'nonzero',\n\t\tshadowColor: undefined,\n\t\tshadowBlur: 0,\n\t\tshadowOffset: new Point(),\n\t\tselectedColor: undefined,\n\t\tfontFamily: 'sans-serif',\n\t\tfontWeight: 'normal',\n\t\tfontSize: 12,\n\t\tfont: 'sans-serif',\n\t\tleading: null,\n\t\tjustification: 'left'\n\t};\n\n\tvar flags = {\n\t\tstrokeWidth: 97,\n\t\tstrokeCap: 97,\n\t\tstrokeJoin: 97,\n\t\tstrokeScaling: 105,\n\t\tmiterLimit: 97,\n\t\tfontFamily: 9,\n\t\tfontWeight: 9,\n\t\tfontSize: 9,\n\t\tfont: 9,\n\t\tleading: 9,\n\t\tjustification: 9\n\t};\n\n\tvar item = { beans: true },\n\t\tfields = {\n\t\t\t_defaults: defaults,\n\t\t\t_textDefaults: new Base(defaults, {\n\t\t\t\tfillColor: new Color()\n\t\t\t}),\n\t\t\tbeans: true\n\t\t};\n\n\tBase.each(defaults, function(value, key) {\n\t\tvar isColor = /Color$/.test(key),\n\t\t\tisPoint = key === 'shadowOffset',\n\t\t\tpart = Base.capitalize(key),\n\t\t\tflag = flags[key],\n\t\t\tset = 'set' + part,\n\t\t\tget = 'get' + part;\n\n\t\tfields[set] = function(value) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children;\n\t\t\tif (children && children.length > 0\n\t\t\t\t\t&& !(owner instanceof CompoundPath)) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i]._style[set](value);\n\t\t\t} else {\n\t\t\t\tvar old = this._values[key];\n\t\t\t\tif (old !== value) {\n\t\t\t\t\tif (isColor) {\n\t\t\t\t\t\tif (old)\n\t\t\t\t\t\t\told._owner = undefined;\n\t\t\t\t\t\tif (value && value.constructor === Color) {\n\t\t\t\t\t\t\tif (value._owner)\n\t\t\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[key] = value;\n\t\t\t\t\tif (owner)\n\t\t\t\t\t\towner._changed(flag || 65);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfields[get] = function(_dontMerge) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children,\n\t\t\t\tvalue;\n\t\t\tif (!children || children.length === 0 || _dontMerge\n\t\t\t\t\t|| owner instanceof CompoundPath) {\n\t\t\t\tvar value = this._values[key];\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tvalue = this._defaults[key];\n\t\t\t\t\tif (value && value.clone)\n\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t} else {\n\t\t\t\t\tvar ctor = isColor ? Color : isPoint ? Point : null;\n\t\t\t\t\tif (ctor && !(value && value.constructor === ctor)) {\n\t\t\t\t\t\tthis._values[key] = value = ctor.read([value], 0,\n\t\t\t\t\t\t\t\t{ readNull: true, clone: true });\n\t\t\t\t\t\tif (value && isColor)\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tvar childValue = children[i]._style[get]();\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tvalue = childValue;\n\t\t\t\t} else if (!Base.equals(value, childValue)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t\titem[get] = function(_dontMerge) {\n\t\t\treturn this._style[get](_dontMerge);\n\t\t};\n\n\t\titem[set] = function(value) {\n\t\t\tthis._style[set](value);\n\t\t};\n\t});\n\n\tItem.inject(item);\n\treturn fields;\n}, {\n\t_class: 'Style',\n\n\tinitialize: function Style(style, _owner, _project) {\n\t\tthis._values = {};\n\t\tthis._owner = _owner;\n\t\tthis._project = _owner && _owner._project || _project || paper.project;\n\t\tif (_owner instanceof TextItem)\n\t\t\tthis._defaults = this._textDefaults;\n\t\tif (style)\n\t\t\tthis.set(style);\n\t},\n\n\tset: function(style) {\n\t\tvar isStyle = style instanceof Style,\n\t\t\tvalues = isStyle ? style._values : style;\n\t\tif (values) {\n\t\t\tfor (var key in values) {\n\t\t\t\tif (key in this._defaults) {\n\t\t\t\t\tvar value = values[key];\n\t\t\t\t\tthis[key] = value && isStyle && value.clone\n\t\t\t\t\t\t\t? value.clone() : value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tequals: function(style) {\n\t\treturn style === this || style && this._class === style._class\n\t\t\t\t&& Base.equals(this._values, style._values)\n\t\t\t\t|| false;\n\t},\n\n\thasFill: function() {\n\t\treturn !!this.getFillColor();\n\t},\n\n\thasStroke: function() {\n\t\treturn !!this.getStrokeColor() && this.getStrokeWidth() > 0;\n\t},\n\n\thasShadow: function() {\n\t\treturn !!this.getShadowColor() && this.getShadowBlur() > 0;\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\tgetFontStyle: function() {\n\t\tvar fontSize = this.getFontSize();\n\t\treturn this.getFontWeight()\n\t\t\t\t+ ' ' + fontSize + (/[a-z]/i.test(fontSize + '') ? ' ' : 'px ')\n\t\t\t\t+ this.getFontFamily();\n\t},\n\n\tgetFont: '#getFontFamily',\n\tsetFont: '#setFontFamily',\n\n\tgetLeading: function getLeading() {\n\t\tvar leading = getLeading.base.call(this),\n\t\t\tfontSize = this.getFontSize();\n\t\tif (/pt|em|%|px/.test(fontSize))\n\t\t\tfontSize = this.getView().getPixelSize(fontSize);\n\t\treturn leading != null ? leading : fontSize * 1.2;\n\t}\n\n});\n\nvar DomElement = new function() {\n\tfunction handlePrefix(el, name, set, value) {\n\t\tvar prefixes = ['', 'webkit', 'moz', 'Moz', 'ms', 'o'],\n\t\t\tsuffix = name[0].toUpperCase() + name.substring(1);\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tvar prefix = prefixes[i],\n\t\t\t\tkey = prefix ? prefix + suffix : name;\n\t\t\tif (key in el) {\n\t\t\t\tif (set) {\n\t\t\t\t\tel[key] = value;\n\t\t\t\t} else {\n\t\t\t\t\treturn el[key];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tgetStyles: function(el) {\n\t\t\tvar doc = el && el.nodeType !== 9 ? el.ownerDocument : el,\n\t\t\t\tview = doc && doc.defaultView;\n\t\t\treturn view && view.getComputedStyle(el, '');\n\t\t},\n\n\t\tgetBounds: function(el, viewport) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tbody = doc.body,\n\t\t\t\thtml = doc.documentElement,\n\t\t\t\trect;\n\t\t\ttry {\n\t\t\t\trect = el.getBoundingClientRect();\n\t\t\t} catch (e) {\n\t\t\t\trect = { left: 0, top: 0, width: 0, height: 0 };\n\t\t\t}\n\t\t\tvar x = rect.left - (html.clientLeft || body.clientLeft || 0),\n\t\t\t\ty = rect.top - (html.clientTop || body.clientTop || 0);\n\t\t\tif (!viewport) {\n\t\t\t\tvar view = doc.defaultView;\n\t\t\t\tx += view.pageXOffset || html.scrollLeft || body.scrollLeft;\n\t\t\t\ty += view.pageYOffset || html.scrollTop || body.scrollTop;\n\t\t\t}\n\t\t\treturn new Rectangle(x, y, rect.width, rect.height);\n\t\t},\n\n\t\tgetViewportBounds: function(el) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tview = doc.defaultView,\n\t\t\t\thtml = doc.documentElement;\n\t\t\treturn new Rectangle(0, 0,\n\t\t\t\tview.innerWidth || html.clientWidth,\n\t\t\t\tview.innerHeight || html.clientHeight\n\t\t\t);\n\t\t},\n\n\t\tgetOffset: function(el, viewport) {\n\t\t\treturn DomElement.getBounds(el, viewport).getPoint();\n\t\t},\n\n\t\tgetSize: function(el) {\n\t\t\treturn DomElement.getBounds(el, true).getSize();\n\t\t},\n\n\t\tisInvisible: function(el) {\n\t\t\treturn DomElement.getSize(el).equals(new Size(0, 0));\n\t\t},\n\n\t\tisInView: function(el) {\n\t\t\treturn !DomElement.isInvisible(el)\n\t\t\t\t\t&& DomElement.getViewportBounds(el).intersects(\n\t\t\t\t\t\tDomElement.getBounds(el, true));\n\t\t},\n\n\t\tgetPrefixed: function(el, name) {\n\t\t\treturn handlePrefix(el, name);\n\t\t},\n\n\t\tsetPrefixed: function(el, name, value) {\n\t\t\tif (typeof name === 'object') {\n\t\t\t\tfor (var key in name)\n\t\t\t\t\thandlePrefix(el, key, true, name[key]);\n\t\t\t} else {\n\t\t\t\thandlePrefix(el, name, true, value);\n\t\t\t}\n\t\t}\n\t};\n};\n\nvar DomEvent = {\n\tadd: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.addEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tremove: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.removeEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tgetPoint: function(event) {\n\t\tvar pos = event.targetTouches\n\t\t\t\t? event.targetTouches.length\n\t\t\t\t\t? event.targetTouches[0]\n\t\t\t\t\t: event.changedTouches[0]\n\t\t\t\t: event;\n\t\treturn new Point(\n\t\t\tpos.pageX || pos.clientX + document.documentElement.scrollLeft,\n\t\t\tpos.pageY || pos.clientY + document.documentElement.scrollTop\n\t\t);\n\t},\n\n\tgetTarget: function(event) {\n\t\treturn event.target || event.srcElement;\n\t},\n\n\tgetRelatedTarget: function(event) {\n\t\treturn event.relatedTarget || event.toElement;\n\t},\n\n\tgetOffset: function(event, target) {\n\t\treturn DomEvent.getPoint(event).subtract(DomElement.getOffset(\n\t\t\t\ttarget || DomEvent.getTarget(event)));\n\t},\n\n\tstop: function(event) {\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t}\n};\n\nDomEvent.requestAnimationFrame = new function() {\n\tvar nativeRequest = typeof window === 'object' &&\n\t\t\tDomElement.getPrefixed(window, 'requestAnimationFrame'),\n\t\trequested = false,\n\t\tcallbacks = [],\n\t\tfocused = true,\n\t\ttimer;\n\n\tif ( typeof window === 'object' ) {\n\t\tDomEvent.add(window, {\n\t\t\tfocus: function() {\n\t\t\t\tfocused = true;\n\t\t\t},\n\t\t\tblur: function() {\n\t\t\t\tfocused = false;\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction handleCallbacks() {\n\t\tfor (var i = callbacks.length - 1; i >= 0; i--) {\n\t\t\tvar entry = callbacks[i],\n\t\t\t\tfunc = entry[0],\n\t\t\t\tel = entry[1];\n\t\t\tif (!el || (PaperScope.getAttribute(el, 'keepalive') == 'true'\n\t\t\t\t\t|| focused) && DomElement.isInView(el)) {\n\t\t\t\tcallbacks.splice(i, 1);\n\t\t\t\tfunc();\n\t\t\t}\n\t\t}\n\t\tif (nativeRequest) {\n\t\t\tif (callbacks.length) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t} else {\n\t\t\t\trequested = false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn function(callback, element) {\n\t\tcallbacks.push([callback, element]);\n\t\tif (nativeRequest) {\n\t\t\tif (!requested) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t\trequested = true;\n\t\t\t}\n\t\t} else if (!timer) {\n\t\t\ttimer = setInterval(handleCallbacks, 1000 / 60);\n\t\t}\n\t};\n};\n\nvar View = Base.extend(Emitter, {\n\t_class: 'View',\n\n\tinitialize: function View(project, element) {\n\t\tthis._project = project;\n\t\tthis._scope = project._scope;\n\t\tthis._element = element;\n\t\tvar size;\n\t\tif ( !noCanvas ) {\n\t\t\tif (!this._pixelRatio)\n\t\t\t\tthis._pixelRatio = window.devicePixelRatio || 1;\n\t\t\tthis._id = element.getAttribute('id');\n\t\t\tif (this._id == null)\n\t\t\t\telement.setAttribute('id', this._id = 'view-' + View._id++);\n\t\t\tDomEvent.add(element, this._viewEvents);\n\t\t\tvar none = 'none';\n\t\t\tDomElement.setPrefixed(element.style, {\n\t\t\t\tuserSelect: none,\n\t\t\t\ttouchAction: none,\n\t\t\t\ttouchCallout: none,\n\t\t\t\tcontentZooming: none,\n\t\t\t\tuserDrag: none,\n\t\t\t\ttapHighlightColor: 'rgba(0,0,0,0)'\n\t\t\t});\n\n\t\t\tfunction getSize(name) {\n\t\t\t\treturn element[name] || parseInt(element.getAttribute(name), 10);\n\t\t\t}\n\n\t\t\tfunction getCanvasSize() {\n\t\t\t\tvar size = DomElement.getSize(element);\n\t\t\t\treturn size.isNaN() || size.isZero()\n\t\t\t\t\t\t? new Size(getSize('width'), getSize('height'))\n\t\t\t\t\t\t: size;\n\t\t\t}\n\n\t\t\tif (PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar that = this;\n\t\t\t\tDomEvent.add(window, this._windowEvents = {\n\t\t\t\t\tresize: function() {\n\t\t\t\t\t\tthat.setViewSize(getCanvasSize());\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._setViewSize(size = getCanvasSize());\n\t\t\tif (PaperScope.hasAttribute(element, 'stats')\n\t\t\t\t\t&& typeof Stats !== 'undefined') {\n\t\t\t\tthis._stats = new Stats();\n\t\t\t\tvar stats = this._stats.domElement,\n\t\t\t\t\tstyle = stats.style,\n\t\t\t\t\toffset = DomElement.getOffset(element);\n\t\t\t\tstyle.position = 'absolute';\n\t\t\t\tstyle.left = offset.x + 'px';\n\t\t\t\tstyle.top = offset.y + 'px';\n\t\t\t\tdocument.body.appendChild(stats);\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (!this._pixelRatio)\n\t\t\t\tthis._pixelRatio = 1;\n\t\t\tthis._id = 'view-' + View._id++;\n\t\t\tsize = new Size(element.width, element.height);\n\t\t}\n\t\tView._views.push(this);\n\t\tView._viewsById[this._id] = this;\n\t\tthis._viewSize = size;\n\t\t(this._matrix = new Matrix())._owner = this;\n\t\tthis._zoom = 1;\n\t\tif (!View._focused)\n\t\t\tView._focused = this;\n\t\tthis._frameItems = {};\n\t\tthis._frameItemCount = 0;\n\t},\n\n\tremove: function() {\n\t\tif (!this._project)\n\t\t\treturn false;\n\t\tif (View._focused === this)\n\t\t\tView._focused = null;\n\t\tView._views.splice(View._views.indexOf(this), 1);\n\t\tdelete View._viewsById[this._id];\n\t\tif (this._project._view === this)\n\t\t\tthis._project._view = null;\n\t\tDomEvent.remove(this._element, this._viewEvents);\n\t\tDomEvent.remove(window, this._windowEvents);\n\t\tthis._element = this._project = null;\n\t\tthis.off('frame');\n\t\tthis._animate = false;\n\t\tthis._frameItems = {};\n\t\treturn true;\n\t},\n\n\t_events: {\n\t\tonFrame: {\n\t\t\tinstall: function() {\n\t\t\t\tthis.play();\n\t\t\t},\n\n\t\t\tuninstall: function() {\n\t\t\t\tthis.pause();\n\t\t\t}\n\t\t},\n\n\t\tonResize: {}\n\t},\n\n\t_animate: false,\n\t_time: 0,\n\t_count: 0,\n\n\t_requestFrame: function() {\n\t\tvar that = this;\n\t\tDomEvent.requestAnimationFrame(function() {\n\t\t\tthat._requested = false;\n\t\t\tif (!that._animate)\n\t\t\t\treturn;\n\t\t\tthat._requestFrame();\n\t\t\tthat._handleFrame();\n\t\t}, this._element);\n\t\tthis._requested = true;\n\t},\n\n\t_handleFrame: function() {\n\t\tpaper = this._scope;\n\t\tvar now = Date.now() / 1000,\n\t\t\tdelta = this._before ? now - this._before : 0;\n\t\tthis._before = now;\n\t\tthis._handlingFrame = true;\n\t\tthis.emit('frame', new Base({\n\t\t\tdelta: delta,\n\t\t\ttime: this._time += delta,\n\t\t\tcount: this._count++\n\t\t}));\n\t\tif (this._stats)\n\t\t\tthis._stats.update();\n\t\tthis._handlingFrame = false;\n\t\tthis.update();\n\t},\n\n\t_animateItem: function(item, animate) {\n\t\tvar items = this._frameItems;\n\t\tif (animate) {\n\t\t\titems[item._id] = {\n\t\t\t\titem: item,\n\t\t\t\ttime: 0,\n\t\t\t\tcount: 0\n\t\t\t};\n\t\t\tif (++this._frameItemCount === 1)\n\t\t\t\tthis.on('frame', this._handleFrameItems);\n\t\t} else {\n\t\t\tdelete items[item._id];\n\t\t\tif (--this._frameItemCount === 0) {\n\t\t\t\tthis.off('frame', this._handleFrameItems);\n\t\t\t}\n\t\t}\n\t},\n\n\t_handleFrameItems: function(event) {\n\t\tfor (var i in this._frameItems) {\n\t\t\tvar entry = this._frameItems[i];\n\t\t\tentry.item.emit('frame', new Base(event, {\n\t\t\t\ttime: entry.time += event.delta,\n\t\t\t\tcount: entry.count++\n\t\t\t}));\n\t\t}\n\t},\n\n\t_update: function() {\n\t\tthis._project._needsUpdate = true;\n\t\tif (this._handlingFrame)\n\t\t\treturn;\n\t\tif (this._animate) {\n\t\t\tthis._handleFrame();\n\t\t} else {\n\t\t\tthis.update();\n\t\t}\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 1)\n\t\t\tthis._project._needsUpdate = true;\n\t},\n\n\t_transform: function(matrix) {\n\t\tthis._matrix.concatenate(matrix);\n\t\tthis._bounds = null;\n\t\tthis._update();\n\t},\n\n\tgetElement: function() {\n\t\treturn this._element;\n\t},\n\n\tgetPixelRatio: function() {\n\t\treturn this._pixelRatio;\n\t},\n\n\tgetResolution: function() {\n\t\treturn this._pixelRatio * 72;\n\t},\n\n\tgetViewSize: function() {\n\t\tvar size = this._viewSize;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setViewSize');\n\t},\n\n\tsetViewSize: function() {\n\t\tvar size = Size.read(arguments),\n\t\t\tdelta = size.subtract(this._viewSize);\n\t\tif (delta.isZero())\n\t\t\treturn;\n\t\tthis._viewSize.set(size.width, size.height);\n\t\tthis._setViewSize(size);\n\t\tthis._bounds = null;\n\t\tthis.emit('resize', {\n\t\t\tsize: size,\n\t\t\tdelta: delta\n\t\t});\n\t\tthis._update();\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element;\n\t\telement.width = size.width;\n\t\telement.height = size.height;\n\t},\n\n\tgetBounds: function() {\n\t\tif (!this._bounds)\n\t\t\tthis._bounds = this._matrix.inverted()._transformBounds(\n\t\t\t\t\tnew Rectangle(new Point(), this._viewSize));\n\t\treturn this._bounds;\n\t},\n\n\tgetSize: function() {\n\t\treturn this.getBounds().getSize();\n\t},\n\n\tgetCenter: function() {\n\t\treturn this.getBounds().getCenter();\n\t},\n\n\tsetCenter: function() {\n\t\tvar center = Point.read(arguments);\n\t\tthis.scrollBy(center.subtract(this.getCenter()));\n\t},\n\n\tgetZoom: function() {\n\t\treturn this._zoom;\n\t},\n\n\tsetZoom: function(zoom) {\n\t\tthis._transform(new Matrix().scale(zoom / this._zoom,\n\t\t\tthis.getCenter()));\n\t\tthis._zoom = zoom;\n\t},\n\n\tisVisible: function() {\n\t\treturn DomElement.isInView(this._element);\n\t},\n\n\tscrollBy: function() {\n\t\tthis._transform(new Matrix().translate(Point.read(arguments).negate()));\n\t},\n\n\tplay: function() {\n\t\tthis._animate = true;\n\t\tif (!this._requested)\n\t\t\tthis._requestFrame();\n\t},\n\n\tpause: function() {\n\t\tthis._animate = false;\n\t},\n\n\tdraw: function() {\n\t\tthis.update();\n\t},\n\n\tprojectToView: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tviewToProject: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t}\n\n}, {\n\tstatics: {\n\t\t_views: [],\n\t\t_viewsById: {},\n\t\t_id: 0,\n\n\t\tcreate: function(project, element) {\n\t\t\tif (typeof element === 'string')\n\t\t\t\telement = document.getElementById(element);\n\t\t\treturn new CanvasView(project, element);\n\t\t}\n\t}\n}, new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar tool,\n\t\tprevFocus,\n\t\ttempFocus,\n\t\tdragging = false;\n\n\tfunction getView(event) {\n\t\tvar target = DomEvent.getTarget(event);\n\t\treturn target.getAttribute && View._viewsById[target.getAttribute('id')];\n\t}\n\n\tfunction viewToProject(view, event) {\n\t\treturn view.viewToProject(DomEvent.getOffset(event, view._element));\n\t}\n\n\tfunction updateFocus() {\n\t\tif (!View._focused || !View._focused.isVisible()) {\n\t\t\tfor (var i = 0, l = View._views.length; i < l; i++) {\n\t\t\t\tvar view = View._views[i];\n\t\t\t\tif (view && view.isVisible()) {\n\t\t\t\t\tView._focused = tempFocus = view;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleMouseMove(view, point, event) {\n\t\tview._handleEvent('mousemove', point, event);\n\t\tvar tool = view._scope.tool;\n\t\tif (tool) {\n\t\t\ttool._handleEvent(dragging && tool.responds('mousedrag')\n\t\t\t\t\t? 'mousedrag' : 'mousemove', point, event);\n\t\t}\n\t\tview.update();\n\t\treturn tool;\n\t}\n\n\tvar navigator = window.navigator,\n\t\tmousedown, mousemove, mouseup;\n\tif (navigator.pointerEnabled || navigator.msPointerEnabled) {\n\t\tmousedown = 'pointerdown MSPointerDown';\n\t\tmousemove = 'pointermove MSPointerMove';\n\t\tmouseup = 'pointerup pointercancel MSPointerUp MSPointerCancel';\n\t} else {\n\t\tmousedown = 'touchstart';\n\t\tmousemove = 'touchmove';\n\t\tmouseup = 'touchend touchcancel';\n\t\tif (!('ontouchstart' in window && navigator.userAgent.match(\n\t\t\t\t/mobile|tablet|ip(ad|hone|od)|android|silk/i))) {\n\t\t\tmousedown += ' mousedown';\n\t\t\tmousemove += ' mousemove';\n\t\t\tmouseup += ' mouseup';\n\t\t}\n\t}\n\n\tvar viewEvents = {\n\t\t'selectstart dragstart': function(event) {\n\t\t\tif (dragging)\n\t\t\t\tevent.preventDefault();\n\t\t}\n\t};\n\n\tvar docEvents = {\n\t\tmouseout: function(event) {\n\t\t\tvar view = View._focused,\n\t\t\t\ttarget = DomEvent.getRelatedTarget(event);\n\t\t\tif (view && (!target || target.nodeName === 'HTML'))\n\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t},\n\n\t\tscroll: updateFocus\n\t};\n\n\tviewEvents[mousedown] = function(event) {\n\t\tvar view = View._focused = getView(event),\n\t\t\tpoint = viewToProject(view, event);\n\t\tdragging = true;\n\t\tview._handleEvent('mousedown', point, event);\n\t\tif (tool = view._scope.tool)\n\t\t\ttool._handleEvent('mousedown', point, event);\n\t\tview.update();\n\t};\n\n\tdocEvents[mousemove] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!dragging) {\n\t\t\tvar target = getView(event);\n\t\t\tif (target) {\n\t\t\t\tif (view !== target)\n\t\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t\t\tprevFocus = view;\n\t\t\t\tview = View._focused = tempFocus = target;\n\t\t\t} else if (tempFocus && tempFocus === view) {\n\t\t\t\tview = View._focused = prevFocus;\n\t\t\t\tupdateFocus();\n\t\t\t}\n\t\t}\n\t\tif (view) {\n\t\t\tvar point = viewToProject(view, event);\n\t\t\tif (dragging || view.getBounds().contains(point))\n\t\t\t\ttool = handleMouseMove(view, point, event);\n\t\t}\n\t};\n\n\tdocEvents[mouseup] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!view || !dragging)\n\t\t\treturn;\n\t\tvar point = viewToProject(view, event);\n\t\tdragging = false;\n\t\tview._handleEvent('mouseup', point, event);\n\t\tif (tool)\n\t\t\ttool._handleEvent('mouseup', point, event);\n\t\tview.update();\n\t};\n\n\tDomEvent.add(document, docEvents);\n\n\tDomEvent.add(window, {\n\t\tload: updateFocus\n\t});\n\n\treturn {\n\t\t_viewEvents: viewEvents,\n\n\t\t_handleEvent: function() {},\n\n\t\tstatics: {\n\t\t\tupdateFocus: updateFocus\n\t\t}\n\t};\n});\n\nvar CanvasView = View.extend({\n\t_class: 'CanvasView',\n\n\tinitialize: function CanvasView(project, canvas) {\n\t\tif ( !noCanvas ) {\n\t\t\tif (!(canvas instanceof HTMLCanvasElement)) {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tif (size.isZero())\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create CanvasView with the provided argument: '\n\t\t\t\t\t\t\t+ [].slice.call(arguments, 1));\n\t\t\t\tcanvas = CanvasProvider.getCanvas(size);\n\t\t\t}\n\t\t\tthis._context = canvas.getContext('2d');\n\t\t}\n\t\tthis._eventCounters = {};\n\t\tthis._pixelRatio = 1;\n\t\tif (!noCanvas && !/^off|false$/.test(PaperScope.getAttribute(canvas, 'hidpi'))) {\n\t\t\tvar deviceRatio = window.devicePixelRatio || 1,\n\t\t\t\tbackingStoreRatio = DomElement.getPrefixed(this._context,\n\t\t\t\t\t\t'backingStorePixelRatio') || 1;\n\t\t\tthis._pixelRatio = deviceRatio / backingStoreRatio;\n\t\t}\n\t\tView.call(this, project, canvas);\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element,\n\t\t\tpixelRatio = this._pixelRatio,\n\t\t\twidth = size.width,\n\t\t\theight = size.height;\n\t\telement.width = width * pixelRatio;\n\t\telement.height = height * pixelRatio;\n\t\tif (pixelRatio !== 1) {\n\t\t\tif (!PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar style = element.style;\n\t\t\t\tstyle.width = width + 'px';\n\t\t\t\tstyle.height = height + 'px';\n\t\t\t}\n\t\t\tthis._context.scale(pixelRatio, pixelRatio);\n\t\t}\n\t},\n\n\tgetPixelSize: function(size) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font;\n\t\tctx.font = size + ' serif';\n\t\tsize = parseFloat(ctx.font);\n\t\tctx.font = prevFont;\n\t\treturn size;\n\t},\n\n\tgetTextWidth: function(font, lines) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font,\n\t\t\twidth = 0;\n\t\tctx.font = font;\n\t\tfor (var i = 0, l = lines.length; i < l; i++)\n\t\t\twidth = Math.max(width, ctx.measureText(lines[i]).width);\n\t\tctx.font = prevFont;\n\t\treturn width;\n\t},\n\n\tupdate: function() {\n\t\tvar project = this._project;\n\t\tif (!project || !project._needsUpdate)\n\t\t\treturn false;\n\t\tvar ctx = this._context,\n\t\t\tsize = this._viewSize;\n\t\tctx.clearRect(0, 0, size.width + 1, size.height + 1);\n\t\tproject.draw(ctx, this._matrix, this._pixelRatio);\n\t\tproject._needsUpdate = false;\n\t\treturn true;\n\t}\n}, new function() {\n\n\tvar downPoint,\n\t\tlastPoint,\n\t\toverPoint,\n\t\tdownItem,\n\t\tlastItem,\n\t\toverItem,\n\t\tdragItem,\n\t\tdblClick,\n\t\tclickTime;\n\n\tfunction callEvent(view, type, event, point, target, lastPoint) {\n\t\tvar item = target,\n\t\t\tmouseEvent;\n\n\t\tfunction call(obj) {\n\t\t\tif (obj.responds(type)) {\n\t\t\t\tif (!mouseEvent) {\n\t\t\t\t\tmouseEvent = new MouseEvent(type, event, point, target,\n\t\t\t\t\t\t\tlastPoint ? point.subtract(lastPoint) : null);\n\t\t\t\t}\n\t\t\t\tif (obj.emit(type, mouseEvent) && mouseEvent.isStopped) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (item) {\n\t\t\tif (call(item))\n\t\t\t\treturn true;\n\t\t\titem = item.getParent();\n\t\t}\n\t\tif (call(view))\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\treturn {\n\t\t_handleEvent: function(type, point, event) {\n\t\t\tif (!this._eventCounters[type])\n\t\t\t\treturn;\n\t\t\tvar project = this._project,\n\t\t\t\thit = project.hitTest(point, {\n\t\t\t\t\ttolerance: 0,\n\t\t\t\t\tfill: true,\n\t\t\t\t\tstroke: true\n\t\t\t\t}),\n\t\t\t\titem = hit && hit.item,\n\t\t\t\tstopped = false;\n\t\t\tswitch (type) {\n\t\t\tcase 'mousedown':\n\t\t\t\tstopped = callEvent(this, type, event, point, item);\n\t\t\t\tdblClick = lastItem == item && (Date.now() - clickTime < 300);\n\t\t\t\tdownItem = lastItem = item;\n\t\t\t\tdownPoint = lastPoint = overPoint = point;\n\t\t\t\tdragItem = !stopped && item;\n\t\t\t\twhile (dragItem && !dragItem.responds('mousedrag'))\n\t\t\t\t\tdragItem = dragItem._parent;\n\t\t\t\tbreak;\n\t\t\tcase 'mouseup':\n\t\t\t\tstopped = callEvent(this, type, event, point, item, downPoint);\n\t\t\t\tif (dragItem) {\n\t\t\t\t\tif (lastPoint && !lastPoint.equals(point))\n\t\t\t\t\t\tcallEvent(this, 'mousedrag', event, point, dragItem,\n\t\t\t\t\t\t\t\tlastPoint);\n\t\t\t\t\tif (item !== dragItem) {\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\t\tcallEvent(this, 'mousemove', event, point, item,\n\t\t\t\t\t\t\t\toverPoint);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!stopped && item && item === downItem) {\n\t\t\t\t\tclickTime = Date.now();\n\t\t\t\t\tcallEvent(this, dblClick && downItem.responds('doubleclick')\n\t\t\t\t\t\t\t? 'doubleclick' : 'click', event, downPoint, item);\n\t\t\t\t\tdblClick = false;\n\t\t\t\t}\n\t\t\t\tdownItem = dragItem = null;\n\t\t\t\tbreak;\n\t\t\tcase 'mousemove':\n\t\t\t\tif (dragItem)\n\t\t\t\t\tstopped = callEvent(this, 'mousedrag', event, point,\n\t\t\t\t\t\t\tdragItem, lastPoint);\n\t\t\t\tif (!stopped) {\n\t\t\t\t\tif (item !== overItem)\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\tstopped = callEvent(this, type, event, point, item,\n\t\t\t\t\t\t\toverPoint);\n\t\t\t\t}\n\t\t\t\tlastPoint = overPoint = point;\n\t\t\t\tif (item !== overItem) {\n\t\t\t\t\tcallEvent(this, 'mouseleave', event, point, overItem);\n\t\t\t\t\toverItem = item;\n\t\t\t\t\tcallEvent(this, 'mouseenter', event, point, item);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn stopped;\n\t\t}\n\t};\n});\n\nvar Event = Base.extend({\n\t_class: 'Event',\n\n\tinitialize: function Event(event) {\n\t\tthis.event = event;\n\t},\n\n\tisPrevented: false,\n\tisStopped: false,\n\n\tpreventDefault: function() {\n\t\tthis.isPrevented = true;\n\t\tthis.event.preventDefault();\n\t},\n\n\tstopPropagation: function() {\n\t\tthis.isStopped = true;\n\t\tthis.event.stopPropagation();\n\t},\n\n\tstop: function() {\n\t\tthis.stopPropagation();\n\t\tthis.preventDefault();\n\t},\n\n\tgetModifiers: function() {\n\t\treturn Key.modifiers;\n\t}\n});\n\nvar KeyEvent = Event.extend({\n\t_class: 'KeyEvent',\n\n\tinitialize: function KeyEvent(down, key, character, event) {\n\t\tEvent.call(this, event);\n\t\tthis.type = down ? 'keydown' : 'keyup';\n\t\tthis.key = key;\n\t\tthis.character = character;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', key: '\" + this.key\n\t\t\t\t+ \"', character: '\" + this.character\n\t\t\t\t+ \"', modifiers: \" + this.getModifiers()\n\t\t\t\t+ \" }\";\n\t}\n});\n\nvar Key = new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar specialKeys = {\n\t\t8: 'backspace',\n\t\t9: 'tab',\n\t\t13: 'enter',\n\t\t16: 'shift',\n\t\t17: 'control',\n\t\t18: 'option',\n\t\t19: 'pause',\n\t\t20: 'caps-lock',\n\t\t27: 'escape',\n\t\t32: 'space',\n\t\t35: 'end',\n\t\t36: 'home',\n\t\t37: 'left',\n\t\t38: 'up',\n\t\t39: 'right',\n\t\t40: 'down',\n\t\t46: 'delete',\n\t\t91: 'command',\n\t\t93: 'command',\n\t\t224: 'command'\n\t},\n\n\tspecialChars = {\n\t\t9: true,\n\t\t13: true,\n\t\t32: true\n\t},\n\n\tmodifiers = new Base({\n\t\tshift: false,\n\t\tcontrol: false,\n\t\toption: false,\n\t\tcommand: false,\n\t\tcapsLock: false,\n\t\tspace: false\n\t}),\n\n\tcharCodeMap = {},\n\tkeyMap = {},\n\tdownCode;\n\n\tfunction handleKey(down, keyCode, charCode, event) {\n\t\tvar character = charCode ? String.fromCharCode(charCode) : '',\n\t\t\tspecialKey = specialKeys[keyCode],\n\t\t\tkey = specialKey || character.toLowerCase(),\n\t\t\ttype = down ? 'keydown' : 'keyup',\n\t\t\tview = View._focused,\n\t\t\tscope = view && view.isVisible() && view._scope,\n\t\t\ttool = scope && scope.tool,\n\t\t\tname;\n\t\tkeyMap[key] = down;\n\t\tif (specialKey && (name = Base.camelize(specialKey)) in modifiers)\n\t\t\tmodifiers[name] = down;\n\t\tif (down) {\n\t\t\tcharCodeMap[keyCode] = charCode;\n\t\t} else {\n\t\t\tdelete charCodeMap[keyCode];\n\t\t}\n\t\tif (tool && tool.responds(type)) {\n\t\t\tpaper = scope;\n\t\t\ttool.emit(type, new KeyEvent(down, key, character, event));\n\t\t\tif (view)\n\t\t\t\tview.update();\n\t\t}\n\t}\n\n\tDomEvent.add(document, {\n\t\tkeydown: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in specialKeys || modifiers.command) {\n\t\t\t\thandleKey(true, code,\n\t\t\t\t\t\tcode in specialChars || modifiers.command ? code : 0,\n\t\t\t\t\t\tevent);\n\t\t\t} else {\n\t\t\t\tdownCode = code;\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function(event) {\n\t\t\tif (downCode != null) {\n\t\t\t\thandleKey(true, downCode, event.which || event.keyCode, event);\n\t\t\t\tdownCode = null;\n\t\t\t}\n\t\t},\n\n\t\tkeyup: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\tDomEvent.add(window, {\n\t\tblur: function(event) {\n\t\t\tfor (var code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\treturn {\n\t\tmodifiers: modifiers,\n\n\t\tisDown: function(key) {\n\t\t\treturn !!keyMap[key];\n\t\t}\n\t};\n};\n\nvar MouseEvent = Event.extend({\n\t_class: 'MouseEvent',\n\n\tinitialize: function MouseEvent(type, event, point, target, delta) {\n\t\tEvent.call(this, event);\n\t\tthis.type = type;\n\t\tthis.point = point;\n\t\tthis.target = target;\n\t\tthis.delta = delta;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', point: \" + this.point\n\t\t\t\t+ ', target: ' + this.target\n\t\t\t\t+ (this.delta ? ', delta: ' + this.delta : '')\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar ToolEvent = Event.extend({\n\t_class: 'ToolEvent',\n\t_item: null,\n\n\tinitialize: function ToolEvent(tool, type, event) {\n\t\tthis.tool = tool;\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t},\n\n\t_choosePoint: function(point, toolPoint) {\n\t\treturn point ? point : toolPoint ? toolPoint.clone() : null;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._choosePoint(this._point, this.tool._point);\n\t},\n\n\tsetPoint: function(point) {\n\t\tthis._point = point;\n\t},\n\n\tgetLastPoint: function() {\n\t\treturn this._choosePoint(this._lastPoint, this.tool._lastPoint);\n\t},\n\n\tsetLastPoint: function(lastPoint) {\n\t\tthis._lastPoint = lastPoint;\n\t},\n\n\tgetDownPoint: function() {\n\t\treturn this._choosePoint(this._downPoint, this.tool._downPoint);\n\t},\n\n\tsetDownPoint: function(downPoint) {\n\t\tthis._downPoint = downPoint;\n\t},\n\n\tgetMiddlePoint: function() {\n\t\tif (!this._middlePoint && this.tool._lastPoint) {\n\t\t\treturn this.tool._point.add(this.tool._lastPoint).divide(2);\n\t\t}\n\t\treturn this._middlePoint;\n\t},\n\n\tsetMiddlePoint: function(middlePoint) {\n\t\tthis._middlePoint = middlePoint;\n\t},\n\n\tgetDelta: function() {\n\t\treturn !this._delta && this.tool._lastPoint\n\t\t\t\t? this.tool._point.subtract(this.tool._lastPoint)\n\t\t\t\t: this._delta;\n\t},\n\n\tsetDelta: function(delta) {\n\t\tthis._delta = delta;\n\t},\n\n\tgetCount: function() {\n\t\treturn /^mouse(down|up)$/.test(this.type)\n\t\t\t\t? this.tool._downCount\n\t\t\t\t: this.tool._count;\n\t},\n\n\tsetCount: function(count) {\n\t\tthis.tool[/^mouse(down|up)$/.test(this.type) ? 'downCount' : 'count']\n\t\t\t= count;\n\t},\n\n\tgetItem: function() {\n\t\tif (!this._item) {\n\t\t\tvar result = this.tool._scope.project.hitTest(this.getPoint());\n\t\t\tif (result) {\n\t\t\t\tvar item = result.item,\n\t\t\t\t\tparent = item._parent;\n\t\t\t\twhile (/^(Group|CompoundPath)$/.test(parent._class)) {\n\t\t\t\t\titem = parent;\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t\tthis._item = item;\n\t\t\t}\n\t\t}\n\t\treturn this._item;\n\t},\n\n\tsetItem: function(item) {\n\t\tthis._item = item;\n\t},\n\n\ttoString: function() {\n\t\treturn '{ type: ' + this.type\n\t\t\t\t+ ', point: ' + this.getPoint()\n\t\t\t\t+ ', count: ' + this.getCount()\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar Tool = PaperScopeItem.extend({\n\t_class: 'Tool',\n\t_list: 'tools',\n\t_reference: 'tool',\n\t_events: [ 'onActivate', 'onDeactivate', 'onEditOptions',\n\t\t\t'onMouseDown', 'onMouseUp', 'onMouseDrag', 'onMouseMove',\n\t\t\t'onKeyDown', 'onKeyUp' ],\n\n\tinitialize: function Tool(props) {\n\t\tPaperScopeItem.call(this);\n\t\tthis._firstMove = true;\n\t\tthis._count = 0;\n\t\tthis._downCount = 0;\n\t\tthis._set(props);\n\t},\n\n\tgetMinDistance: function() {\n\t\treturn this._minDistance;\n\t},\n\n\tsetMinDistance: function(minDistance) {\n\t\tthis._minDistance = minDistance;\n\t\tif (this._minDistance != null && this._maxDistance != null\n\t\t\t\t&& this._minDistance > this._maxDistance) {\n\t\t\tthis._maxDistance = this._minDistance;\n\t\t}\n\t},\n\n\tgetMaxDistance: function() {\n\t\treturn this._maxDistance;\n\t},\n\n\tsetMaxDistance: function(maxDistance) {\n\t\tthis._maxDistance = maxDistance;\n\t\tif (this._minDistance != null && this._maxDistance != null\n\t\t\t\t&& this._maxDistance < this._minDistance) {\n\t\t\tthis._minDistance = maxDistance;\n\t\t}\n\t},\n\n\tgetFixedDistance: function() {\n\t\treturn this._minDistance == this._maxDistance\n\t\t\t? this._minDistance : null;\n\t},\n\n\tsetFixedDistance: function(distance) {\n\t\tthis._minDistance = distance;\n\t\tthis._maxDistance = distance;\n\t},\n\n\t_updateEvent: function(type, point, minDistance, maxDistance, start,\n\t\t\tneedsChange, matchMaxDistance) {\n\t\tif (!start) {\n\t\t\tif (minDistance != null || maxDistance != null) {\n\t\t\t\tvar minDist = minDistance != null ? minDistance : 0,\n\t\t\t\t\tvector = point.subtract(this._point),\n\t\t\t\t\tdistance = vector.getLength();\n\t\t\t\tif (distance < minDist)\n\t\t\t\t\treturn false;\n\t\t\t\tvar maxDist = maxDistance != null ? maxDistance : 0;\n\t\t\t\tif (maxDist != 0) {\n\t\t\t\t\tif (distance > maxDist) {\n\t\t\t\t\t\tpoint = this._point.add(vector.normalize(maxDist));\n\t\t\t\t\t} else if (matchMaxDistance) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (needsChange && point.equals(this._point))\n\t\t\t\treturn false;\n\t\t}\n\t\tthis._lastPoint = start && type == 'mousemove' ? point : this._point;\n\t\tthis._point = point;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tthis._downPoint = this._point;\n\t\t\tthis._downCount++;\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tbreak;\n\t\t}\n\t\tthis._count = start ? 0 : this._count + 1;\n\t\treturn true;\n\t},\n\n\t_fireEvent: function(type, event) {\n\t\tvar sets = paper.project._removeSets;\n\t\tif (sets) {\n\t\t\tif (type === 'mouseup')\n\t\t\t\tsets.mousedrag = null;\n\t\t\tvar set = sets[type];\n\t\t\tif (set) {\n\t\t\t\tfor (var id in set) {\n\t\t\t\t\tvar item = set[id];\n\t\t\t\t\tfor (var key in sets) {\n\t\t\t\t\t\tvar other = sets[key];\n\t\t\t\t\t\tif (other && other != set)\n\t\t\t\t\t\t\tdelete other[item._id];\n\t\t\t\t\t}\n\t\t\t\t\titem.remove();\n\t\t\t\t}\n\t\t\t\tsets[type] = null;\n\t\t\t}\n\t\t}\n\t\treturn this.responds(type)\n\t\t\t\t&& this.emit(type, new ToolEvent(this, type, event));\n\t},\n\n\t_handleEvent: function(type, point, event) {\n\t\tpaper = this._scope;\n\t\tvar called = false;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tcalled = this._fireEvent(type, event);\n\t\t\tbreak;\n\t\tcase 'mousedrag':\n\t\t\tvar needsChange = false,\n\t\t\t\tmatchMaxDistance = false;\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, false, needsChange, matchMaxDistance)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tneedsChange = true;\n\t\t\t\tmatchMaxDistance = true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tif (!point.equals(this._point)\n\t\t\t\t\t&& this._updateEvent('mousedrag', point, this.minDistance,\n\t\t\t\t\t\t\tthis.maxDistance, false, false, false)) {\n\t\t\t\tcalled = this._fireEvent('mousedrag', event);\n\t\t\t}\n\t\t\tthis._updateEvent(type, point, null, this.maxDistance, false,\n\t\t\t\t\tfalse, false);\n\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tthis._firstMove = true;\n\t\t\tbreak;\n\t\tcase 'mousemove':\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, this._firstMove, true, false)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tthis._firstMove = false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tif (called)\n\t\t\tevent.preventDefault();\n\t\treturn called;\n\t}\n\n});\n\nvar Http = {\n\trequest: function(method, url, callback) {\n\t\tvar xhr = new (window.ActiveXObject || XMLHttpRequest)(\n\t\t\t\t\t'Microsoft.XMLHTTP');\n\t\txhr.open(method.toUpperCase(), url, true);\n\t\tif ('overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain');\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (xhr.readyState === 4) {\n\t\t\t\tvar status = xhr.status;\n\t\t\t\tif (status === 0 || status === 200) {\n\t\t\t\t\tcallback.call(xhr, xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Could not load ' + url + ' (Error '\n\t\t\t\t\t\t\t+ status + ')');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn xhr.send(null);\n\t}\n};\n\nvar CanvasProvider = {\n\tcanvases: [],\n\n\tgetCanvas: function(width, height) {\n\t\tvar canvas,\n\t\t\tclear = true;\n\t\tif (typeof width === 'object') {\n\t\t\theight = width.height;\n\t\t\twidth = width.width;\n\t\t}\n\t\tif ( noCanvas ) {\n\t\t\treturn { getContext: function() {} };\n\t\t}\n\t\tif (this.canvases.length) {\n\t\t\tcanvas = this.canvases.pop();\n\t\t} else {\n\t\t\tcanvas = document.createElement('canvas');\n\t\t}\n\t\tvar ctx = canvas.getContext('2d');\n\t\tif (canvas.width === width && canvas.height === height) {\n\t\t\tif (clear)\n\t\t\t\tctx.clearRect(0, 0, width + 1, height + 1);\n\t\t} else {\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t}\n\t\tctx.save();\n\t\treturn canvas;\n\t},\n\n\tgetContext: function(width, height) {\n\t\treturn this.getCanvas(width, height).getContext('2d');\n\t},\n\n\trelease: function(obj) {\n\t\tvar canvas = obj.canvas ? obj.canvas : obj;\n\t\tcanvas.getContext('2d').restore();\n\t\tthis.canvases.push(canvas);\n\t}\n};\n\nvar BlendMode = new function() {\n\tif ( noCanvas ) {\n\t\treturn;\n\t}\n\n\tvar min = Math.min,\n\t\tmax = Math.max,\n\t\tabs = Math.abs,\n\t\tsr, sg, sb, sa,\n\t\tbr, bg, bb, ba,\n\t\tdr, dg, db;\n\n\tfunction getLum(r, g, b) {\n\t\treturn 0.2989 * r + 0.587 * g + 0.114 * b;\n\t}\n\n\tfunction setLum(r, g, b, l) {\n\t\tvar d = l - getLum(r, g, b);\n\t\tdr = r + d;\n\t\tdg = g + d;\n\t\tdb = b + d;\n\t\tvar l = getLum(dr, dg, db),\n\t\t\tmn = min(dr, dg, db),\n\t\t\tmx = max(dr, dg, db);\n\t\tif (mn < 0) {\n\t\t\tvar lmn = l - mn;\n\t\t\tdr = l + (dr - l) * l / lmn;\n\t\t\tdg = l + (dg - l) * l / lmn;\n\t\t\tdb = l + (db - l) * l / lmn;\n\t\t}\n\t\tif (mx > 255) {\n\t\t\tvar ln = 255 - l,\n\t\t\t\tmxl = mx - l;\n\t\t\tdr = l + (dr - l) * ln / mxl;\n\t\t\tdg = l + (dg - l) * ln / mxl;\n\t\t\tdb = l + (db - l) * ln / mxl;\n\t\t}\n\t}\n\n\tfunction getSat(r, g, b) {\n\t\treturn max(r, g, b) - min(r, g, b);\n\t}\n\n\tfunction setSat(r, g, b, s) {\n\t\tvar col = [r, g, b],\n\t\t\tmx = max(r, g, b),\n\t\t\tmn = min(r, g, b),\n\t\t\tmd;\n\t\tmn = mn === r ? 0 : mn === g ? 1 : 2;\n\t\tmx = mx === r ? 0 : mx === g ? 1 : 2;\n\t\tmd = min(mn, mx) === 0 ? max(mn, mx) === 1 ? 2 : 1 : 0;\n\t\tif (col[mx] > col[mn]) {\n\t\t\tcol[md] = (col[md] - col[mn]) * s / (col[mx] - col[mn]);\n\t\t\tcol[mx] = s;\n\t\t} else {\n\t\t\tcol[md] = col[mx] = 0;\n\t\t}\n\t\tcol[mn] = 0;\n\t\tdr = col[0];\n\t\tdg = col[1];\n\t\tdb = col[2];\n\t}\n\n\tvar modes = {\n\t\tmultiply: function() {\n\t\t\tdr = br * sr / 255;\n\t\t\tdg = bg * sg / 255;\n\t\t\tdb = bb * sb / 255;\n\t\t},\n\n\t\tscreen: function() {\n\t\t\tdr = br + sr - (br * sr / 255);\n\t\t\tdg = bg + sg - (bg * sg / 255);\n\t\t\tdb = bb + sb - (bb * sb / 255);\n\t\t},\n\n\t\toverlay: function() {\n\t\t\tdr = br < 128 ? 2 * br * sr / 255 : 255 - 2 * (255 - br) * (255 - sr) / 255;\n\t\t\tdg = bg < 128 ? 2 * bg * sg / 255 : 255 - 2 * (255 - bg) * (255 - sg) / 255;\n\t\t\tdb = bb < 128 ? 2 * bb * sb / 255 : 255 - 2 * (255 - bb) * (255 - sb) / 255;\n\t\t},\n\n\t\t'soft-light': function() {\n\t\t\tvar t = sr * br / 255;\n\t\t\tdr = t + br * (255 - (255 - br) * (255 - sr) / 255 - t) / 255;\n\t\t\tt = sg * bg / 255;\n\t\t\tdg = t + bg * (255 - (255 - bg) * (255 - sg) / 255 - t) / 255;\n\t\t\tt = sb * bb / 255;\n\t\t\tdb = t + bb * (255 - (255 - bb) * (255 - sb) / 255 - t) / 255;\n\t\t},\n\n\t\t'hard-light': function() {\n\t\t\tdr = sr < 128 ? 2 * sr * br / 255 : 255 - 2 * (255 - sr) * (255 - br) / 255;\n\t\t\tdg = sg < 128 ? 2 * sg * bg / 255 : 255 - 2 * (255 - sg) * (255 - bg) / 255;\n\t\t\tdb = sb < 128 ? 2 * sb * bb / 255 : 255 - 2 * (255 - sb) * (255 - bb) / 255;\n\t\t},\n\n\t\t'color-dodge': function() {\n\t\t\tdr = br === 0 ? 0 : sr === 255 ? 255 : min(255, 255 * br / (255 - sr));\n\t\t\tdg = bg === 0 ? 0 : sg === 255 ? 255 : min(255, 255 * bg / (255 - sg));\n\t\t\tdb = bb === 0 ? 0 : sb === 255 ? 255 : min(255, 255 * bb / (255 - sb));\n\t\t},\n\n\t\t'color-burn': function() {\n\t\t\tdr = br === 255 ? 255 : sr === 0 ? 0 : max(0, 255 - (255 - br) * 255 / sr);\n\t\t\tdg = bg === 255 ? 255 : sg === 0 ? 0 : max(0, 255 - (255 - bg) * 255 / sg);\n\t\t\tdb = bb === 255 ? 255 : sb === 0 ? 0 : max(0, 255 - (255 - bb) * 255 / sb);\n\t\t},\n\n\t\tdarken: function() {\n\t\t\tdr = br < sr ? br : sr;\n\t\t\tdg = bg < sg ? bg : sg;\n\t\t\tdb = bb < sb ? bb : sb;\n\t\t},\n\n\t\tlighten: function() {\n\t\t\tdr = br > sr ? br : sr;\n\t\t\tdg = bg > sg ? bg : sg;\n\t\t\tdb = bb > sb ? bb : sb;\n\t\t},\n\n\t\tdifference: function() {\n\t\t\tdr = br - sr;\n\t\t\tif (dr < 0)\n\t\t\t\tdr = -dr;\n\t\t\tdg = bg - sg;\n\t\t\tif (dg < 0)\n\t\t\t\tdg = -dg;\n\t\t\tdb = bb - sb;\n\t\t\tif (db < 0)\n\t\t\t\tdb = -db;\n\t\t},\n\n\t\texclusion: function() {\n\t\t\tdr = br + sr * (255 - br - br) / 255;\n\t\t\tdg = bg + sg * (255 - bg - bg) / 255;\n\t\t\tdb = bb + sb * (255 - bb - bb) / 255;\n\t\t},\n\n\t\thue: function() {\n\t\t\tsetSat(sr, sg, sb, getSat(br, bg, bb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tsaturation: function() {\n\t\t\tsetSat(br, bg, bb, getSat(sr, sg, sb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tluminosity: function() {\n\t\t\tsetLum(br, bg, bb, getLum(sr, sg, sb));\n\t\t},\n\n\t\tcolor: function() {\n\t\t\tsetLum(sr, sg, sb, getLum(br, bg, bb));\n\t\t},\n\n\t\tadd: function() {\n\t\t\tdr = min(br + sr, 255);\n\t\t\tdg = min(bg + sg, 255);\n\t\t\tdb = min(bb + sb, 255);\n\t\t},\n\n\t\tsubtract: function() {\n\t\t\tdr = max(br - sr, 0);\n\t\t\tdg = max(bg - sg, 0);\n\t\t\tdb = max(bb - sb, 0);\n\t\t},\n\n\t\taverage: function() {\n\t\t\tdr = (br + sr) / 2;\n\t\t\tdg = (bg + sg) / 2;\n\t\t\tdb = (bb + sb) / 2;\n\t\t},\n\n\t\tnegation: function() {\n\t\t\tdr = 255 - abs(255 - sr - br);\n\t\t\tdg = 255 - abs(255 - sg - bg);\n\t\t\tdb = 255 - abs(255 - sb - bb);\n\t\t}\n\t};\n\n\tvar nativeModes = this.nativeModes = Base.each([\n\t\t'source-over', 'source-in', 'source-out', 'source-atop',\n\t\t'destination-over', 'destination-in', 'destination-out',\n\t\t'destination-atop', 'lighter', 'darker', 'copy', 'xor'\n\t], function(mode) {\n\t\tthis[mode] = true;\n\t}, {});\n\n\tvar ctx = CanvasProvider.getContext(1, 1);\n\tBase.each(modes, function(func, mode) {\n\t\tvar darken = mode === 'darken',\n\t\t\tok = false;\n\t\tctx.save();\n\t\ttry {\n\t\t\tctx.fillStyle = darken ? '#300' : '#a00';\n\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\tctx.globalCompositeOperation = mode;\n\t\t\tif (ctx.globalCompositeOperation === mode) {\n\t\t\t\tctx.fillStyle = darken ? '#a00' : '#300';\n\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\tok = ctx.getImageData(0, 0, 1, 1).data[0] !== darken ? 170 : 51;\n\t\t\t}\n\t\t} catch (e) {}\n\t\tctx.restore();\n\t\tnativeModes[mode] = ok;\n\t});\n\tCanvasProvider.release(ctx);\n\n\tthis.process = function(mode, srcContext, dstContext, alpha, offset) {\n\t\tvar srcCanvas = srcContext.canvas,\n\t\t\tnormal = mode === 'normal';\n\t\tif (normal || nativeModes[mode]) {\n\t\t\tdstContext.save();\n\t\t\tdstContext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tdstContext.globalAlpha = alpha;\n\t\t\tif (!normal)\n\t\t\t\tdstContext.globalCompositeOperation = mode;\n\t\t\tdstContext.drawImage(srcCanvas, offset.x, offset.y);\n\t\t\tdstContext.restore();\n\t\t} else {\n\t\t\tvar process = modes[mode];\n\t\t\tif (!process)\n\t\t\t\treturn;\n\t\t\tvar dstData = dstContext.getImageData(offset.x, offset.y,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height),\n\t\t\t\tdst = dstData.data,\n\t\t\t\tsrc = srcContext.getImageData(0, 0,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height).data;\n\t\t\tfor (var i = 0, l = dst.length; i < l; i += 4) {\n\t\t\t\tsr = src[i];\n\t\t\t\tbr = dst[i];\n\t\t\t\tsg = src[i + 1];\n\t\t\t\tbg = dst[i + 1];\n\t\t\t\tsb = src[i + 2];\n\t\t\t\tbb = dst[i + 2];\n\t\t\t\tsa = src[i + 3];\n\t\t\t\tba = dst[i + 3];\n\t\t\t\tprocess();\n\t\t\t\tvar a1 = sa * alpha / 255,\n\t\t\t\t\ta2 = 1 - a1;\n\t\t\t\tdst[i] = a1 * dr + a2 * br;\n\t\t\t\tdst[i + 1] = a1 * dg + a2 * bg;\n\t\t\t\tdst[i + 2] = a1 * db + a2 * bb;\n\t\t\t\tdst[i + 3] = sa * alpha + a2 * ba;\n\t\t\t}\n\t\t\tdstContext.putImageData(dstData, offset.x, offset.y);\n\t\t}\n\t};\n};\n\nvar SVGStyles = Base.each({\n\tfillColor: ['fill', 'color'],\n\tstrokeColor: ['stroke', 'color'],\n\tstrokeWidth: ['stroke-width', 'number'],\n\tstrokeCap: ['stroke-linecap', 'string'],\n\tstrokeJoin: ['stroke-linejoin', 'string'],\n\tstrokeScaling: ['vector-effect', 'lookup', {\n\t\ttrue: 'none',\n\t\tfalse: 'non-scaling-stroke'\n\t}, function(item, value) {\n\t\treturn !value\n\t\t\t\t&& (item instanceof PathItem\n\t\t\t\t\t|| item instanceof Shape\n\t\t\t\t\t|| item instanceof TextItem);\n\t}],\n\tmiterLimit: ['stroke-miterlimit', 'number'],\n\tdashArray: ['stroke-dasharray', 'array'],\n\tdashOffset: ['stroke-dashoffset', 'number'],\n\tfontFamily: ['font-family', 'string'],\n\tfontWeight: ['font-weight', 'string'],\n\tfontSize: ['font-size', 'number'],\n\tjustification: ['text-anchor', 'lookup', {\n\t\tleft: 'start',\n\t\tcenter: 'middle',\n\t\tright: 'end'\n\t}],\n\topacity: ['opacity', 'number'],\n\tblendMode: ['mix-blend-mode', 'string']\n}, function(entry, key) {\n\tvar part = Base.capitalize(key),\n\t\tlookup = entry[2];\n\tthis[key] = {\n\t\ttype: entry[1],\n\t\tproperty: key,\n\t\tattribute: entry[0],\n\t\ttoSVG: lookup,\n\t\tfromSVG: lookup && Base.each(lookup, function(value, name) {\n\t\t\tthis[value] = name;\n\t\t}, {}),\n\t\texportFilter: entry[3],\n\t\tget: 'get' + part,\n\t\tset: 'set' + part\n\t};\n}, {});\n\nvar SVGNamespaces = {\n\thref: 'http://www.w3.org/1999/xlink',\n\txlink: 'http://www.w3.org/2000/xmlns'\n};\n\nnew function() {\n\tvar formatter;\n\n\tfunction setAttributes(node, attrs) {\n\t\tfor (var key in attrs) {\n\t\t\tvar val = attrs[key],\n\t\t\t\tnamespace = SVGNamespaces[key];\n\t\t\tif (typeof val === 'number')\n\t\t\t\tval = formatter.number(val);\n\t\t\tif (namespace) {\n\t\t\t\tnode.setAttributeNS(namespace, key, val);\n\t\t\t} else {\n\t\t\t\tnode.setAttribute(key, val);\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction createElement(tag, attrs) {\n\t\treturn setAttributes(\n\t\t\tdocument.createElementNS('http://www.w3.org/2000/svg', tag), attrs);\n\t}\n\n\tfunction getTransform(matrix, coordinates, center) {\n\t\tvar attrs = new Base(),\n\t\t\ttrans = matrix.getTranslation();\n\t\tif (coordinates) {\n\t\t\tmatrix = matrix.shiftless();\n\t\t\tvar point = matrix._inverseTransform(trans);\n\t\t\tattrs[center ? 'cx' : 'x'] = point.x;\n\t\t\tattrs[center ? 'cy' : 'y'] = point.y;\n\t\t\ttrans = null;\n\t\t}\n\t\tif (!matrix.isIdentity()) {\n\t\t\tvar decomposed = matrix.decompose();\n\t\t\tif (decomposed && !decomposed.shearing) {\n\t\t\t\tvar parts = [],\n\t\t\t\t\tangle = decomposed.rotation,\n\t\t\t\t\tscale = decomposed.scaling;\n\t\t\t\tif (trans && !trans.isZero())\n\t\t\t\t\tparts.push('translate(' + formatter.point(trans) + ')');\n\t\t\t\tif (!Numerical.isZero(scale.x - 1)\n\t\t\t\t\t\t|| !Numerical.isZero(scale.y - 1))\n\t\t\t\t\tparts.push('scale(' + formatter.point(scale) +')');\n\t\t\t\tif (angle)\n\t\t\t\t\tparts.push('rotate(' + formatter.number(angle) + ')');\n\t\t\t\tattrs.transform = parts.join(' ');\n\t\t\t} else {\n\t\t\t\tattrs.transform = 'matrix(' + matrix.getValues().join(',') + ')';\n\t\t\t}\n\t\t}\n\t\treturn attrs;\n\t}\n\n\tfunction exportGroup(item, options) {\n\t\tvar attrs = getTransform(item._matrix),\n\t\t\tchildren = item._children;\n\t\tvar node = createElement('g', attrs);\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tvar childNode = exportSVG(child, options);\n\t\t\tif (childNode) {\n\t\t\t\tif (child.isClipMask()) {\n\t\t\t\t\tvar clip = createElement('clipPath');\n\t\t\t\t\tclip.appendChild(childNode);\n\t\t\t\t\tsetDefinition(child, clip, 'clip');\n\t\t\t\t\tsetAttributes(node, {\n\t\t\t\t\t\t'clip-path': 'url(#' + clip.id + ')'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction exportRaster(item) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsize = item.getSize();\n\t\tattrs.x -= size.width / 2;\n\t\tattrs.y -= size.height / 2;\n\t\tattrs.width = size.width;\n\t\tattrs.height = size.height;\n\t\tattrs.href = item.toDataURL();\n\t\treturn createElement('image', attrs);\n\t}\n\n\tfunction exportPath(item, options) {\n\t\tif (options.matchShapes) {\n\t\t\tvar shape = item.toShape(false);\n\t\t\tif (shape)\n\t\t\t\treturn exportShape(shape, options);\n\t\t}\n\t\tvar segments = item._segments,\n\t\t\ttype,\n\t\t\tattrs = getTransform(item._matrix);\n\t\tif (segments.length === 0)\n\t\t\treturn null;\n\t\tif (item.isPolygon()) {\n\t\t\tif (segments.length >= 3) {\n\t\t\t\ttype = item._closed ? 'polygon' : 'polyline';\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(i = 0, l = segments.length; i < l; i++)\n\t\t\t\t\tparts.push(formatter.point(segments[i]._point));\n\t\t\t\tattrs.points = parts.join(' ');\n\t\t\t} else {\n\t\t\t\ttype = 'line';\n\t\t\t\tvar first = segments[0]._point,\n\t\t\t\t\tlast = segments[segments.length - 1]._point;\n\t\t\t\tattrs.set({\n\t\t\t\t\tx1: first.x,\n\t\t\t\t\ty1: first.y,\n\t\t\t\t\tx2: last.x,\n\t\t\t\t\ty2: last.y\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\ttype = 'path';\n\t\t\tattrs.d = item.getPathData(null, options.precision);\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportShape(item) {\n\t\tvar type = item._type,\n\t\t\tradius = item._radius,\n\t\t\tattrs = getTransform(item._matrix, true, type !== 'rectangle');\n\t\tif (type === 'rectangle') {\n\t\t\ttype = 'rect';\n\t\t\tvar size = item._size,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tattrs.x -= width / 2;\n\t\t\tattrs.y -= height / 2;\n\t\t\tattrs.width = width;\n\t\t\tattrs.height = height;\n\t\t\tif (radius.isZero())\n\t\t\t\tradius = null;\n\t\t}\n\t\tif (radius) {\n\t\t\tif (type === 'circle') {\n\t\t\t\tattrs.r = radius;\n\t\t\t} else {\n\t\t\t\tattrs.rx = radius.width;\n\t\t\t\tattrs.ry = radius.height;\n\t\t\t}\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportCompoundPath(item, options) {\n\t\tvar attrs = getTransform(item._matrix);\n\t\tvar data = item.getPathData(null, options.precision);\n\t\tif (data)\n\t\t\tattrs.d = data;\n\t\treturn createElement('path', attrs);\n\t}\n\n\tfunction exportPlacedSymbol(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsymbol = item.getSymbol(),\n\t\t\tsymbolNode = getDefinition(symbol, 'symbol'),\n\t\t\tdefinition = symbol.getDefinition(),\n\t\t\tbounds = definition.getBounds();\n\t\tif (!symbolNode) {\n\t\t\tsymbolNode = createElement('symbol', {\n\t\t\t\tviewBox: formatter.rectangle(bounds)\n\t\t\t});\n\t\t\tsymbolNode.appendChild(exportSVG(definition, options));\n\t\t\tsetDefinition(symbol, symbolNode, 'symbol');\n\t\t}\n\t\tattrs.href = '#' + symbolNode.id;\n\t\tattrs.x += bounds.x;\n\t\tattrs.y += bounds.y;\n\t\tattrs.width = formatter.number(bounds.width);\n\t\tattrs.height = formatter.number(bounds.height);\n\t\tattrs.overflow = 'visible';\n\t\treturn createElement('use', attrs);\n\t}\n\n\tfunction exportGradient(color) {\n\t\tvar gradientNode = getDefinition(color, 'color');\n\t\tif (!gradientNode) {\n\t\t\tvar gradient = color.getGradient(),\n\t\t\t\tradial = gradient._radial,\n\t\t\t\torigin = color.getOrigin().transform(),\n\t\t\t\tdestination = color.getDestination().transform(),\n\t\t\t\tattrs;\n\t\t\tif (radial) {\n\t\t\t\tattrs = {\n\t\t\t\t\tcx: origin.x,\n\t\t\t\t\tcy: origin.y,\n\t\t\t\t\tr: origin.getDistance(destination)\n\t\t\t\t};\n\t\t\t\tvar highlight = color.getHighlight();\n\t\t\t\tif (highlight) {\n\t\t\t\t\thighlight = highlight.transform();\n\t\t\t\t\tattrs.fx = highlight.x;\n\t\t\t\t\tattrs.fy = highlight.y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tattrs = {\n\t\t\t\t\tx1: origin.x,\n\t\t\t\t\ty1: origin.y,\n\t\t\t\t\tx2: destination.x,\n\t\t\t\t\ty2: destination.y\n\t\t\t\t};\n\t\t\t}\n\t\t\tattrs.gradientUnits = 'userSpaceOnUse';\n\t\t\tgradientNode = createElement(\n\t\t\t\t\t(radial ? 'radial' : 'linear') + 'Gradient', attrs);\n\t\t\tvar stops = gradient._stops;\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i],\n\t\t\t\t\tstopColor = stop._color,\n\t\t\t\t\talpha = stopColor.getAlpha();\n\t\t\t\tattrs = {\n\t\t\t\t\toffset: stop._rampPoint,\n\t\t\t\t\t'stop-color': stopColor.toCSS(true)\n\t\t\t\t};\n\t\t\t\tif (alpha < 1)\n\t\t\t\t\tattrs['stop-opacity'] = alpha;\n\t\t\t\tgradientNode.appendChild(createElement('stop', attrs));\n\t\t\t}\n\t\t\tsetDefinition(color, gradientNode, 'color');\n\t\t}\n\t\treturn 'url(#' + gradientNode.id + ')';\n\t}\n\n\tfunction exportText(item) {\n\t\tvar node = createElement('text', getTransform(item._matrix, true));\n\t\tnode.textContent = item._content;\n\t\treturn node;\n\t}\n\n\tvar exporters = {\n\t\tGroup: exportGroup,\n\t\tLayer: exportGroup,\n\t\tRaster: exportRaster,\n\t\tPath: exportPath,\n\t\tShape: exportShape,\n\t\tCompoundPath: exportCompoundPath,\n\t\tPlacedSymbol: exportPlacedSymbol,\n\t\tPointText: exportText\n\t};\n\n\tfunction applyStyle(item, node, isRoot) {\n\t\tvar attrs = {},\n\t\t\tparent = !isRoot && item.getParent();\n\n\t\tif (item._name != null)\n\t\t\tattrs.id = item._name;\n\n\t\tBase.each(SVGStyles, function(entry) {\n\t\t\tvar get = entry.get,\n\t\t\t\ttype = entry.type,\n\t\t\t\tvalue = item[get]();\n\t\t\tif (entry.exportFilter\n\t\t\t\t\t? entry.exportFilter(item, value)\n\t\t\t\t\t: !parent || !Base.equals(parent[get](), value)) {\n\t\t\t\tif (type === 'color' && value != null) {\n\t\t\t\t\tvar alpha = value.getAlpha();\n\t\t\t\t\tif (alpha < 1)\n\t\t\t\t\t\tattrs[entry.attribute + '-opacity'] = alpha;\n\t\t\t\t}\n\t\t\t\tattrs[entry.attribute] = value == null\n\t\t\t\t\t? 'none'\n\t\t\t\t\t: type === 'number'\n\t\t\t\t\t\t? formatter.number(value)\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? value.gradient\n\t\t\t\t\t\t\t\t? exportGradient(value, item)\n\t\t\t\t\t\t\t\t: value.toCSS(true)\n\t\t\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t\t\t? value.join(',')\n\t\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t\t? entry.toSVG[value]\n\t\t\t\t\t\t\t\t\t: value;\n\t\t\t}\n\t\t});\n\n\t\tif (attrs.opacity === 1)\n\t\t\tdelete attrs.opacity;\n\n\t\tif (!item._visible)\n\t\t\tattrs.visibility = 'hidden';\n\n\t\treturn setAttributes(node, attrs);\n\t}\n\n\tvar definitions;\n\tfunction getDefinition(item, type) {\n\t\tif (!definitions)\n\t\t\tdefinitions = { ids: {}, svgs: {} };\n\t\treturn item && definitions.svgs[type + '-' + item._id];\n\t}\n\n\tfunction setDefinition(item, node, type) {\n\t\tif (!definitions)\n\t\t\tgetDefinition();\n\t\tvar id = definitions.ids[type] = (definitions.ids[type] || 0) + 1;\n\t\tnode.id = type + '-' + id;\n\t\tdefinitions.svgs[type + '-' + item._id] = node;\n\t}\n\n\tfunction exportDefinitions(node, options) {\n\t\tvar svg = node,\n\t\t\tdefs = null;\n\t\tif (definitions) {\n\t\t\tsvg = node.nodeName.toLowerCase() === 'svg' && node;\n\t\t\tfor (var i in definitions.svgs) {\n\t\t\t\tif (!defs) {\n\t\t\t\t\tif (!svg) {\n\t\t\t\t\t\tsvg = createElement('svg');\n\t\t\t\t\t\tsvg.appendChild(node);\n\t\t\t\t\t}\n\t\t\t\t\tdefs = svg.insertBefore(createElement('defs'),\n\t\t\t\t\t\t\tsvg.firstChild);\n\t\t\t\t}\n\t\t\t\tdefs.appendChild(definitions.svgs[i]);\n\t\t\t}\n\t\t\tdefinitions = null;\n\t\t}\n\t\treturn options.asString\n\t\t\t\t? new XMLSerializer().serializeToString(svg)\n\t\t\t\t: svg;\n\t}\n\n\tfunction exportSVG(item, options, isRoot) {\n\t\tvar exporter = exporters[item._class],\n\t\t\tnode = exporter && exporter(item, options);\n\t\tif (node) {\n\t\t\tvar onExport = options.onExport;\n\t\t\tif (onExport)\n\t\t\t\tnode = onExport(item, node, options) || node;\n\t\t\tvar data = JSON.stringify(item._data);\n\t\t\tif (data && data !== '{}' && data !== 'null')\n\t\t\t\tnode.setAttribute('data-paper-data', data);\n\t\t}\n\t\treturn node && applyStyle(item, node, isRoot);\n\t}\n\n\tfunction setOptions(options) {\n\t\tif (!options)\n\t\t\toptions = {};\n\t\tformatter = new Formatter(options.precision);\n\t\treturn options;\n\t}\n\n\tItem.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\treturn exportDefinitions(exportSVG(this, options, true), options);\n\t\t}\n\t});\n\n\tProject.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\tvar layers = this.layers,\n\t\t\t\tview = this.getView(),\n\t\t\t\tsize = view.getViewSize(),\n\t\t\t\tnode = createElement('svg', {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: size.width,\n\t\t\t\t\theight: size.height,\n\t\t\t\t\tversion: '1.1',\n\t\t\t\t\txmlns: 'http://www.w3.org/2000/svg',\n\t\t\t\t\t'xmlns:xlink': 'http://www.w3.org/1999/xlink'\n\t\t\t\t}),\n\t\t\t\tparent = node,\n\t\t\t\tmatrix = view._matrix;\n\t\t\tif (!matrix.isIdentity())\n\t\t\t\tparent = node.appendChild(\n\t\t\t\t\t\tcreateElement('g', getTransform(matrix)));\n\t\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\t\tparent.appendChild(exportSVG(layers[i], options, true));\n\t\t\treturn exportDefinitions(node, options);\n\t\t}\n\t});\n};\n\nnew function() {\n\n\tfunction getValue(node, name, isString, allowNull) {\n\t\tvar namespace = SVGNamespaces[name],\n\t\t\tvalue = namespace\n\t\t\t\t? node.getAttributeNS(namespace, name)\n\t\t\t\t: node.getAttribute(name);\n\t\tif (value === 'null')\n\t\t\tvalue = null;\n\t\treturn value == null\n\t\t\t\t? allowNull\n\t\t\t\t\t? null\n\t\t\t\t\t: isString\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: 0\n\t\t\t\t: isString\n\t\t\t\t\t? value\n\t\t\t\t\t: parseFloat(value);\n\t}\n\n\tfunction getPoint(node, x, y, allowNull) {\n\t\tx = getValue(node, x, false, allowNull);\n\t\ty = getValue(node, y, false, allowNull);\n\t\treturn allowNull && (x == null || y == null) ? null\n\t\t\t\t: new Point(x, y);\n\t}\n\n\tfunction getSize(node, w, h, allowNull) {\n\t\tw = getValue(node, w, false, allowNull);\n\t\th = getValue(node, h, false, allowNull);\n\t\treturn allowNull && (w == null || h == null) ? null\n\t\t\t\t: new Size(w, h);\n\t}\n\n\tfunction convertValue(value, type, lookup) {\n\t\treturn value === 'none'\n\t\t\t\t? null\n\t\t\t\t: type === 'number'\n\t\t\t\t\t? parseFloat(value)\n\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t? value ? value.split(/[\\s,]+/g).map(parseFloat) : []\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? getDefinition(value) || value\n\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t? lookup[value]\n\t\t\t\t\t\t\t\t: value;\n\t}\n\n\tfunction importGroup(node, type, options, isRoot) {\n\t\tvar nodes = node.childNodes,\n\t\t\tisClip = type === 'clippath',\n\t\t\titem = new Group(),\n\t\t\tproject = item._project,\n\t\t\tcurrentStyle = project._currentStyle,\n\t\t\tchildren = [];\n\t\tif (!isClip) {\n\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tproject._currentStyle = item._style.clone();\n\t\t}\n\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\tvar childNode = nodes[i],\n\t\t\t\tchild;\n\t\t\tif (childNode.nodeType === 1\n\t\t\t\t\t&& (child = importSVG(childNode, options, false))\n\t\t\t\t\t&& !(child instanceof Symbol))\n\t\t\t\tchildren.push(child);\n\t\t}\n\t\titem.addChildren(children);\n\t\tif (isClip)\n\t\t\titem = applyAttributes(item.reduce(), node, isRoot);\n\t\tproject._currentStyle = currentStyle;\n\t\tif (isClip || type === 'defs') {\n\t\t\titem.remove();\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction importPoly(node, type) {\n\t\tvar coords = node.getAttribute('points').match(\n\t\t\t\t\t/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g),\n\t\t\tpoints = [];\n\t\tfor (var i = 0, l = coords.length; i < l; i += 2)\n\t\t\tpoints.push(new Point(\n\t\t\t\t\tparseFloat(coords[i]),\n\t\t\t\t\tparseFloat(coords[i + 1])));\n\t\tvar path = new Path(points);\n\t\tif (type === 'polygon')\n\t\t\tpath.closePath();\n\t\treturn path;\n\t}\n\n\tfunction importPath(node) {\n\t\tvar data = node.getAttribute('d'),\n\t\t\tparam = { pathData: data };\n\t\treturn (data.match(/m/gi) || []).length > 1 || /z\\S+/i.test(data)\n\t\t\t\t? new CompoundPath(param)\n\t\t\t\t: new Path(param);\n\t}\n\n\tfunction importGradient(node, type) {\n\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\tisRadial = type === 'radialgradient',\n\t\t\tgradient;\n\t\tif (id) {\n\t\t\tgradient = definitions[id].getGradient();\n\t\t} else {\n\t\t\tvar nodes = node.childNodes,\n\t\t\t\tstops = [];\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\tstops.push(applyAttributes(new GradientStop(), child));\n\t\t\t}\n\t\t\tgradient = new Gradient(stops, isRadial);\n\t\t}\n\t\tvar origin, destination, highlight;\n\t\tif (isRadial) {\n\t\t\torigin = getPoint(node, 'cx', 'cy');\n\t\t\tdestination = origin.add(getValue(node, 'r'), 0);\n\t\t\thighlight = getPoint(node, 'fx', 'fy', true);\n\t\t} else {\n\t\t\torigin = getPoint(node, 'x1', 'y1');\n\t\t\tdestination = getPoint(node, 'x2', 'y2');\n\t\t}\n\t\tapplyAttributes(\n\t\t\tnew Color(gradient, origin, destination, highlight), node);\n\t\treturn null;\n\t}\n\n\tvar importers = {\n\t\t'#document': function (node, type, options, isRoot) {\n\t\t\tvar nodes = node.childNodes;\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1) {\n\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\tdocument.body.appendChild(child);\n\t\t\t\t\tvar item = importSVG(child, options, isRoot);\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\tnode.insertBefore(child, next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tg: importGroup,\n\t\tsvg: importGroup,\n\t\tclippath: importGroup,\n\t\tpolygon: importPoly,\n\t\tpolyline: importPoly,\n\t\tpath: importPath,\n\t\tlineargradient: importGradient,\n\t\tradialgradient: importGradient,\n\n\t\timage: function (node) {\n\t\t\tvar raster = new Raster(getValue(node, 'href', true));\n\t\t\traster.on('load', function() {\n\t\t\t\tvar size = getSize(node, 'width', 'height');\n\t\t\t\tthis.setSize(size);\n\t\t\t\tvar center = this._matrix._transformPoint(\n\t\t\t\t\t\tgetPoint(node, 'x', 'y').add(size.divide(2)));\n\t\t\t\tthis.translate(center);\n\t\t\t});\n\t\t\treturn raster;\n\t\t},\n\n\t\tsymbol: function(node, type, options, isRoot) {\n\t\t\treturn new Symbol(importGroup(node, type, options, isRoot), true);\n\t\t},\n\n\t\tdefs: importGroup,\n\n\t\tuse: function(node) {\n\t\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\t\tdefinition = definitions[id],\n\t\t\t\tpoint = getPoint(node, 'x', 'y');\n\t\t\treturn definition\n\t\t\t\t\t? definition instanceof Symbol\n\t\t\t\t\t\t? definition.place(point)\n\t\t\t\t\t\t: definition.clone().translate(point)\n\t\t\t\t\t: null;\n\t\t},\n\n\t\tcircle: function(node) {\n\t\t\treturn new Shape.Circle(getPoint(node, 'cx', 'cy'),\n\t\t\t\t\tgetValue(node, 'r'));\n\t\t},\n\n\t\tellipse: function(node) {\n\t\t\treturn new Shape.Ellipse({\n\t\t\t\tcenter: getPoint(node, 'cx', 'cy'),\n\t\t\t\tradius: getSize(node, 'rx', 'ry')\n\t\t\t});\n\t\t},\n\n\t\trect: function(node) {\n\t\t\tvar point = getPoint(node, 'x', 'y'),\n\t\t\t\tsize = getSize(node, 'width', 'height'),\n\t\t\t\tradius = getSize(node, 'rx', 'ry');\n\t\t\treturn new Shape.Rectangle(new Rectangle(point, size), radius);\n\t\t},\n\n\t\tline: function(node) {\n\t\t\treturn new Path.Line(getPoint(node, 'x1', 'y1'),\n\t\t\t\t\tgetPoint(node, 'x2', 'y2'));\n\t\t},\n\n\t\ttext: function(node) {\n\t\t\tvar text = new PointText(getPoint(node, 'x', 'y')\n\t\t\t\t\t.add(getPoint(node, 'dx', 'dy')));\n\t\t\ttext.setContent(node.textContent.trim() || '');\n\t\t\treturn text;\n\t\t}\n\t};\n\n\tfunction applyTransform(item, value, name, node) {\n\t\tvar transforms = (node.getAttribute(name) || '').split(/\\)\\s*/g),\n\t\t\tmatrix = new Matrix();\n\t\tfor (var i = 0, l = transforms.length; i < l; i++) {\n\t\t\tvar transform = transforms[i];\n\t\t\tif (!transform)\n\t\t\t\tbreak;\n\t\t\tvar parts = transform.split(/\\(\\s*/),\n\t\t\t\tcommand = parts[0],\n\t\t\t\tv = parts[1].split(/[\\s,]+/g);\n\t\t\tfor (var j = 0, m = v.length; j < m; j++)\n\t\t\t\tv[j] = parseFloat(v[j]);\n\t\t\tswitch (command) {\n\t\t\tcase 'matrix':\n\t\t\t\tmatrix.concatenate(\n\t\t\t\t\t\tnew Matrix(v[0], v[1], v[2], v[3], v[4], v[5]));\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\t\tmatrix.rotate(v[0], v[1], v[2]);\n\t\t\t\tbreak;\n\t\t\tcase 'translate':\n\t\t\t\tmatrix.translate(v[0], v[1]);\n\t\t\t\tbreak;\n\t\t\tcase 'scale':\n\t\t\t\tmatrix.scale(v);\n\t\t\t\tbreak;\n\t\t\tcase 'skewX':\n\t\t\t\tmatrix.skew(v[0], 0);\n\t\t\t\tbreak;\n\t\t\tcase 'skewY':\n\t\t\t\tmatrix.skew(0, v[0]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\titem.transform(matrix);\n\t}\n\n\tfunction applyOpacity(item, value, name) {\n\t\tvar color = item[name === 'fill-opacity' ? 'getFillColor'\n\t\t\t\t: 'getStrokeColor']();\n\t\tif (color)\n\t\t\tcolor.setAlpha(parseFloat(value));\n\t}\n\n\tvar attributes = Base.each(SVGStyles, function(entry) {\n\t\tthis[entry.attribute] = function(item, value) {\n\t\t\titem[entry.set](convertValue(value, entry.type, entry.fromSVG));\n\t\t\tif (entry.type === 'color' && item instanceof Shape) {\n\t\t\t\tvar color = item[entry.get]();\n\t\t\t\tif (color)\n\t\t\t\t\tcolor.transform(new Matrix().translate(\n\t\t\t\t\t\t\titem.getPosition(true).negate()));\n\t\t\t}\n\t\t};\n\t}, {\n\t\tid: function(item, value) {\n\t\t\tdefinitions[value] = item;\n\t\t\tif (item.setName)\n\t\t\t\titem.setName(value);\n\t\t},\n\n\t\t'clip-path': function(item, value) {\n\t\t\tvar clip = getDefinition(value);\n\t\t\tif (clip) {\n\t\t\t\tclip = clip.clone();\n\t\t\t\tclip.setClipMask(true);\n\t\t\t\tif (item instanceof Group) {\n\t\t\t\t\titem.insertChild(0, clip);\n\t\t\t\t} else {\n\t\t\t\t\treturn new Group(clip, item);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgradientTransform: applyTransform,\n\t\ttransform: applyTransform,\n\n\t\t'fill-opacity': applyOpacity,\n\t\t'stroke-opacity': applyOpacity,\n\n\t\tvisibility: function(item, value) {\n\t\t\titem.setVisible(value === 'visible');\n\t\t},\n\n\t\tdisplay: function(item, value) {\n\t\t\titem.setVisible(value !== null);\n\t\t},\n\n\t\t'stop-color': function(item, value) {\n\t\t\tif (item.setColor)\n\t\t\t\titem.setColor(value);\n\t\t},\n\n\t\t'stop-opacity': function(item, value) {\n\t\t\tif (item._color)\n\t\t\t\titem._color.setAlpha(parseFloat(value));\n\t\t},\n\n\t\toffset: function(item, value) {\n\t\t\tvar percentage = value.match(/(.*)%$/);\n\t\t\titem.setRampPoint(percentage\n\t\t\t\t\t? percentage[1] / 100\n\t\t\t\t\t: parseFloat(value));\n\t\t},\n\n\t\tviewBox: function(item, value, name, node, styles) {\n\t\t\tvar rect = new Rectangle(convertValue(value, 'array')),\n\t\t\t\tsize = getSize(node, 'width', 'height', true);\n\t\t\tif (item instanceof Group) {\n\t\t\t\tvar scale = size ? rect.getSize().divide(size) : 1,\n\t\t\t\t\tmatrix = new Matrix().translate(rect.getPoint()).scale(scale);\n\t\t\t\titem.transform(matrix.inverted());\n\t\t\t} else if (item instanceof Symbol) {\n\t\t\t\tif (size)\n\t\t\t\t\trect.setSize(size);\n\t\t\t\tvar clip = getAttribute(node, 'overflow', styles) != 'visible',\n\t\t\t\t\tgroup = item._definition;\n\t\t\t\tif (clip && !rect.contains(group.getBounds())) {\n\t\t\t\t\tclip = new Shape.Rectangle(rect).transform(group._matrix);\n\t\t\t\t\tclip.setClipMask(true);\n\t\t\t\t\tgroup.addChild(clip);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction getAttribute(node, name, styles) {\n\t\tvar attr = node.attributes[name],\n\t\t\tvalue = attr && attr.value;\n\t\tif (!value) {\n\t\t\tvar style = Base.camelize(name);\n\t\t\tvalue = node.style[style];\n\t\t\tif (!value && styles.node[style] !== styles.parent[style])\n\t\t\t\tvalue = styles.node[style];\n\t\t}\n\t\treturn !value\n\t\t\t\t? undefined\n\t\t\t\t: value === 'none'\n\t\t\t\t\t? null\n\t\t\t\t\t: value;\n\t}\n\n\tfunction applyAttributes(item, node, isRoot) {\n\t\tvar styles = {\n\t\t\tnode: DomElement.getStyles(node) || {},\n\t\t\tparent: !isRoot && DomElement.getStyles(node.parentNode) || {}\n\t\t};\n\t\tBase.each(attributes, function(apply, name) {\n\t\t\tvar value = getAttribute(node, name, styles);\n\t\t\tif (value !== undefined)\n\t\t\t\titem = Base.pick(apply(item, value, name, node, styles), item);\n\t\t});\n\t\treturn item;\n\t}\n\n\tvar definitions = {};\n\tfunction getDefinition(value) {\n\t\tvar match = value && value.match(/\\((?:#|)([^)']+)/);\n\t\treturn match && definitions[match[1]];\n\t}\n\n\tfunction importSVG(source, options, isRoot) {\n\t\tif (!source)\n\t\t\treturn null;\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t} else if (typeof options === 'function') {\n\t\t\toptions = { onLoad: options };\n\t\t}\n\n\t\tvar node = source,\n\t\t\tscope = paper;\n\n\t\tfunction onLoadCallback(svg) {\n\t\t\tpaper = scope;\n\t\t\tvar item = importSVG(svg, options, isRoot),\n\t\t\t\tonLoad = options.onLoad,\n\t\t\t\tview = scope.project && scope.getView();\n\t\t\tif (onLoad)\n\t\t\t\tonLoad.call(this, item);\n\t\t\tview.update();\n\t\t}\n\n\t\tif (isRoot) {\n\t\t\tif (typeof source === 'string' && !/^.*</.test(source)) {\n\t\t\t\tnode = document.getElementById(source);\n\t\t\t\tif (node) {\n\t\t\t\t\tsource = null;\n\t\t\t\t} else {\n\t\t\t\t\treturn Http.request('get', source, onLoadCallback);\n\t\t\t\t}\n\t\t\t} else if (typeof File !== 'undefined' && source instanceof File) {\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.onload = function() {\n\t\t\t\t\tonLoadCallback(reader.result);\n\t\t\t\t};\n\t\t\t\treturn reader.readAsText(source);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof source === 'string')\n\t\t\tnode = new DOMParser().parseFromString(source, 'image/svg+xml');\n\t\tif (!node.nodeName)\n\t\t\tthrow new Error('Unsupported SVG source: ' + source);\n\t\tvar type = node.nodeName.toLowerCase(),\n\t\t\timporter = importers[type],\n\t\t\titem,\n\t\t\tdata = node.getAttribute && node.getAttribute('data-paper-data'),\n\t\t\tsettings = scope.settings,\n\t\t\tapplyMatrix = settings.applyMatrix;\n\t\tsettings.applyMatrix = false;\n\t\titem = importer && importer(node, type, options, isRoot) || null;\n\t\tsettings.applyMatrix = applyMatrix;\n\t\tif (item) {\n\t\t\tif (type !== '#document' && !(item instanceof Group))\n\t\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tvar onImport = options.onImport;\n\t\t\tif (onImport)\n\t\t\t\titem = onImport(node, item, options) || item;\n\t\t\tif (options.expandShapes && item instanceof Shape) {\n\t\t\t\titem.remove();\n\t\t\t\titem = item.toPath();\n\t\t\t}\n\t\t\tif (data)\n\t\t\t\titem._data = JSON.parse(data);\n\t\t}\n\t\tif (isRoot) {\n\t\t\tdefinitions = {};\n\t\t\tif (applyMatrix && item)\n\t\t\t\titem.matrix.apply(true, true);\n\t\t}\n\t\treturn item;\n\t}\n\n\tItem.inject({\n\t\timportSVG: function(node, options) {\n\t\t\treturn this.addChild(importSVG(node, options, true));\n\t\t}\n\t});\n\n\tProject.inject({\n\t\timportSVG: function(node, options) {\n\t\t\tthis.activate();\n\t\t\treturn importSVG(node, options, true);\n\t\t}\n\t});\n};\n\npaper = new (PaperScope.inject(Base.exports, {\n\tenumerable: true,\n\tBase: Base,\n\tNumerical: Numerical,\n\tKey: Key\n}))();\n\nif (typeof define === 'function' && define.amd) {\n\tdefine('paper', paper);\n} else if (typeof module === 'object' && module) {\n\tmodule.exports = paper;\n}\n\nreturn paper;\n};\n\n},{}],3:[function(require,module,exports){\nfunction Collection( args ) {\n\t// already a Collection? Job's done\n\tif ( arguments.length === 1 && args instanceof Collection ) {\n\t\treturn args;\n\n\t} else if ( arguments.length > 1 || !Array.isArray( args ) ) {\n\t\targs = [].slice.call( arguments, 0 );\n\t}\n\n\tthis.length = 0;\n\n\targs.forEach(function( arg ) {\n\t\t// unwrap any collection\n\t\tif ( arg instanceof Collection ) {\n\t\t\tfor ( var i = -1; ++i < arg.length; ) {\n\t\t\t\tthis[this.length++] = arg[i];\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis[this.length++] = arg;\n\t\t}\n\n\t}, this);\n\n\treturn this;\n}\n\nCollection.prototype.forEach = function(cb, scope) {\n\tfor ( var i = -1; ++i < this.length; ) {\n\t\tcb.call(scope || this[i], this[i], i, this);\n\t}\n\n\treturn this;\n};\n\nCollection.prototype.prop = function(name, val) {\n\tvar i;\n\n\t// object setter\n\tif ( typeof name === 'object' ) {\n\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\tthis[i].set( name );\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t// getter\n\tif ( val === undefined ) {\n\t\treturn this[0][name];\n\t}\n\n\t// simple setter\n\tfor ( i = -1; ++i < this.length; ) {\n\t\tthis[i][name] = val;\n\t}\n\n\treturn this;\n};\n\nfunction wrapConstructor( constructor, prototype, useConstructed ) {\n\treturn function wrapper() {\n\t\tvar c,\n\t\t\ttmp,\n\t\t\tarr = [];\n\n\t\t// constructor used with new\n\t\tif ( this instanceof wrapper ) {\n\t\t\t// proxy to paper native constructor\n\t\t\tc = Object.create(prototype);\n\t\t\ttmp = constructor.apply(c, arguments);\n\t\t\treturn useConstructed ?\n\t\t\t\ttmp : c;\n\n\t\t// without new, build a collection\n\t\t} else {\n\t\t\tif ( Array.isArray( arguments[0] ) ) {\n\t\t\t\targuments[0].forEach(function(params, i) {\n\t\t\t\t\tarr.push( Object.create(prototype) );\n\t\t\t\t\tc = constructor.call( arr[i], params );\n\t\t\t\t\tif ( useConstructed ) {\n\t\t\t\t\t\tarr[i] = c;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\tarr.push( Object.create(prototype) );\n\t\t\t\tc = constructor.apply( arr[0], arguments );\n\t\t\t\tif ( useConstructed ) {\n\t\t\t\t\tarr[0] = c;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new Collection( arr );\n\t\t}\n\t};\n}\n\nvar rconstructor = /(^|\\.)[A-Z][A-z]+$/;\nfunction constructorFilter( name ) {\n\treturn typeof this[name] === 'function' && rconstructor.test(name);\n}\n\n// unwrap a collection or array of collection\nfunction unwrapArg( arr, id, isPlural ) {\n\t// unwrap a single collection\n\tif ( arr && arr[id] instanceof Collection ) {\n\t\tarr[id] = isPlural ?\n\t\t\t[].slice.call( arr[id], 0 ) :\n\t\t\tarr[id][0];\n\n\t// unwrap an array of collection\n\t} else if ( arr && arr[id].length && arr[id][0] instanceof Collection ) {\n\t\tfor ( var i = -1; ++i < arr[id].length; ) {\n\t\t\tarr[id][i] = arr[id][i][0];\n\t\t}\n\t}\n}\n\nfunction unwrapArgs() {\n\tvar isPlural = this.isPlural,\n\t\targs = [].slice.call( arguments, 0 ),\n\t\tid,\n\t\ti;\n\n\t// first arg is an object and might have a collection or array of collection\n\t// Todo: objects should be unwrapped recursively\n\tif ( args[0] && args[0].constructor === Object ) {\n\t\tif ( 'children' in args[0] ) {\n\t\t\tid = 'children';\n\n\t\t} else if ( 'segments' in args[0] ) {\n\t\t\tid = 'segments';\n\n\t\t} else if ( 'nodes' in args[0] ) {\n\t\t\tid = 'nodes';\n\t\t}\n\n\t\tunwrapArg( args[0], id, true );\n\n\t// otherwise unwrap each arg\n\t} else {\n\t\tfor ( i = -1; ++i < args.length; ) {\n\t\t\t// if the method is plural (addChildren) and we're unwrapping\n\t\t\t// the last argument, we want to keep it in an array\n\t\t\tunwrapArg( args, i, i === args.length - 1 && isPlural );\n\t\t}\n\t}\n\n\treturn args;\n}\n\nCollection.proxy = function( paper ) {\n\tvar plumin = this;\n\n\tplumin.paper = paper;\n\n\tvar methodNames = {};\n\tObject.getOwnPropertyNames( paper.PaperScope.prototype )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype )\n\t\t.forEach(function(name) {\n\t\t\tplumin[name] = wrapConstructor( this[name], this[name].prototype );\n\n\t\t\t// we don't want to proxy methods of Collection\n\t\t\tif ( name === 'Collection' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tObject.getOwnPropertyNames( this[name].prototype )\n\t\t\t\t.forEach(function(_name) {\n\t\t\t\t\t// collect unique method names (first test avoids getters)\n\t\t\t\t\tif ( !Object.getOwnPropertyDescriptor(this, _name).get &&\n\t\t\t\t\t\t\ttypeof this[_name] === 'function' ) {\n\n\t\t\t\t\t\tmethodNames[_name] = true;\n\t\t\t\t\t}\n\n\t\t\t\t}, this[name].prototype);\n\n\t\t}, paper.PaperScope.prototype);\n\n\tObject.keys( paper.PaperScope.prototype.Path )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype.Path )\n\t\t.forEach(function(name) {\n\t\t\tplumin.Path[name] = wrapConstructor(\n\t\t\t\tthis[name], this.prototype, true\n\t\t\t);\n\n\t\t}, paper.PaperScope.prototype.Path );\n\n\tObject.keys( paper.PaperScope.prototype.Shape )\n\t\t.filter( constructorFilter, paper.PaperScope.prototype.Shape )\n\t\t.forEach(function(name) {\n\t\t\tplumin.Shape[name] = wrapConstructor(\n\t\t\t\tthis[name], this.prototype, true\n\t\t\t);\n\n\t\t}, paper.PaperScope.prototype.Shape );\n\n\t// proxy the most commonly used method of paper\n\t// do it only after proxying constructors otherwise it's overwritten\n\tplumin.setup = paper.setup.bind(paper);\n\n\t// proxy all methods from every constructor\n\t// by default methods aren't chainable\n\tObject.keys( methodNames ).sort().forEach(function(name) {\n\t\t// please oh please, don't overwrite my constructor, I need it.\n\t\tif ( name === 'constructor' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tCollection.prototype[name] = function() {\n\t\t\tvar args = unwrapArgs.apply(null, arguments),\n\t\t\t\ti,\n\t\t\t\tresult;\n\n\t\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\t\tresult = this[i][name].apply(this[i], args);\n\t\t\t}\n\n\t\t\t// by default methods aren't chainable\n\t\t\t// return the last result\n\t\t\treturn result;\n\t\t};\n\t});\n\n\t\t// addChild( item ) and other methods with similar signatures\n\t\t// that we want to make chainable\n\tvar chain = [\n\t\t\t'set',\n\t\t\t'setX',\n\t\t\t'setY',\n\t\t\t'insertAbove',\n\t\t\t'insertBelow',\n\t\t\t'sendToBack',\n\t\t\t'bringToFront',\n\t\t\t'remove',\n\t\t\t'removeChildren',\n\t\t\t'reverseChildren',\n\n\t\t\t'translate',\n\t\t\t'rotate',\n\t\t\t'scale',\n\t\t\t'shear',\n\t\t\t'skew',\n\t\t\t'transform',\n\t\t\t'fitBounds',\n\t\t\t'emit',\n\n\t\t\t'activate',\n\n\t\t\t'setPixel',\n\n\t\t\t'smooth',\n\t\t\t'moveTo',\n\t\t\t'lineTo',\n\t\t\t'cubicCurveTo',\n\t\t\t'quadraticCurveTo',\n\t\t\t'curveTo',\n\t\t\t'arcTo',\n\t\t\t'closePath',\n\t\t\t'moveBy',\n\t\t\t'lineBy',\n\t\t\t'cubicCurveBy',\n\t\t\t'quadraticCurveBy',\n\t\t\t'curveBy',\n\t\t\t'arcBy',\n\n\t\t\t'removeSegments',\n\t\t\t'simplify',\n\t\t\t'reverse',\n\n\t\t\t// Rectangle\n\t\t\t'include',\n\t\t\t'expand',\n\t\t\t'scale',\n\t\t// ],\n\t\t// createAndChain = [\n\t\t\t'addChild',\n\t\t\t'insertChild',\n\t\t\t'addChildren',\n\t\t\t'insertChildren',\n\t\t\t'replaceWith',\n\n\t\t\t'appendTop',\n\t\t\t'appendBottom',\n\n\t\t\t'add',\n\t\t\t'insert',\n\t\t\t'addSegments',\n\t\t\t'insertSegments',\n\t\t\t'addNode',\n\t\t\t'addNodes',\n\t\t\t'insertNodes',\n\n\t\t\t'addGlyph',\n\t\t\t'addGlyphs',\n\n\t\t\t'addContour',\n\t\t\t'insertContour',\n\t\t\t'addContours',\n\t\t\t'insertContours',\n\t\t\t'addAnchor',\n\t\t\t'addAnchors',\n\t\t\t'addComponent',\n\t\t\t'addComponents',\n\n\t\t\t'addUnicode',\n\t\t\t'prepareOt',\n\t\t\t'addToFonts',\n\t\t\t'download'\n\t\t],\n\t\tplural = [\n\t\t\t'addChildren',\n\t\t\t'insertChildren',\n\t\t\t'addSegments',\n\t\t\t'insertSegments',\n\t\t\t'addNodes',\n\t\t\t'insertNodes',\n\t\t\t'addGlyphs',\n\t\t\t'addAnchors',\n\t\t\t'addContours',\n\t\t\t'insertContours',\n\t\t\t'addComponents'\n\t\t]/*,\n\t\tmathPoinFn = [\n\t\t\t'round',\n\t\t\t'ceil',\n\t\t\t'floor',\n\t\t\t'abs'\n\t\t],\n\t\tbooleanPathOp = [\n\t\t\t'unite',\n\t\t\t'intersect',\n\t\t\t'subtract',\n\t\t\t'exclude',\n\t\t\t'divide'\n\t\t]*/;\n\n\tchain.forEach(function(name) {\n\t\tCollection.prototype[name] = function() {\n\t\t\tvar args = unwrapArgs.apply(\n\t\t\t\t\t{ isPlural: plural.indexOf(name) !== -1 },\n\t\t\t\t\targuments\n\t\t\t\t),\n\t\t\t\ti;\n\n\t\t\tfor ( i = -1; ++i < this.length; ) {\n\t\t\t\tthis[i][name].apply(this[i], args);\n\t\t\t}\n\n\t\t\t// make method chainable\n\t\t\treturn this;\n\t\t};\n\t});\n\n\t// singular chainable method\n};\n\nmodule.exports = Collection;\n\n},{}],4:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tGlyph = require('./Glyph.js');\n\nfunction Font( args ) {\n\tpaper.Group.prototype.constructor.apply( this );\n\n\tif ( !args ) {\n\t\targs = {};\n\t}\n\n\tif ( !args.styleName ) {\n\t\targs.styleName = 'Regular';\n\t}\n\n\tif ( !args.unitsPerEm ) {\n\t\targs.unitsPerEm = 1024;\n\t}\n\n\tthis.ot = new opentype.Font( args );\n\n\tthis.glyphMap = {};\n\tthis.charMap = {};\n\tthis.altMap = {};\n\tthis._subset = false;\n\n\tthis.addGlyph(new Glyph({\n\t\tname: '.notdef',\n\t\tunicode: 0\n\t}));\n\n\tif ( args && args.glyphs ) {\n\t\tthis.addGlyphs( args.glyphs );\n\t}\n\n\tif ( typeof window === 'object' && window.document ) {\n\t\t// work around https://bugzilla.mozilla.org/show_bug.cgi?id=1100005\n\t\t// by using fonts.delete in batch, every 1 second\n\t\tif ( document.fonts ) {\n\t\t\tthis.addedFonts = [];\n\n\t\t\tsetInterval(function() {\n\t\t\t\twhile ( this.addedFonts.length > 1 ) {\n\t\t\t\t\tdocument.fonts.delete( this.addedFonts.shift() );\n\t\t\t\t}\n\t\t\t}.bind(this), 1000);\n\n\t\t} else {\n\t\t\tdocument.head.appendChild(\n\t\t\t\tthis.styleElement = document.createElement('style')\n\t\t\t);\n\t\t\t// let's find the corresponding CSSStyleSheet\n\t\t\t// (would be much easier with Array#find)\n\t\t\tthis.styleSheet = document.styleSheets[\n\t\t\t\t[].map.call(document.styleSheets, function(ss) {\n\t\t\t\t\treturn ss.ownerNode;\n\t\t\t\t}).indexOf(this.styleElement)\n\t\t\t];\n\t\t}\n\t}\n}\n\nFont.prototype = Object.create(paper.Group.prototype);\nFont.prototype.constructor = Font;\n\n// proxy .glyphs to .children\n// Todo: handle unicode updates\nObject.defineProperty(\n\tFont.prototype,\n\t'glyphs',\n\tObject.getOwnPropertyDescriptor( paper.Item.prototype, 'children' )\n);\n\n// TODO: proper proxying of ...Glyph[s] methods to ...Child[ren] methods\n// see Glyph.js\nFont.prototype.addGlyph = function( glyph ) {\n\tthis.addChild( glyph );\n\tthis.glyphMap[glyph.name] = glyph;\n\n\tif ( glyph.ot.unicode === undefined ) {\n\t\treturn glyph;\n\t}\n\n\t// build the default cmap\n\t// if multiple glyphs share the same unicode, use the glyph where unicode\n\t// and name are equal\n\tif ( !this.charMap[glyph.ot.unicode] ||\n\t\t\t( glyph.name.length === 1 &&\n\t\t\t\tglyph.name.charCodeAt(0) === glyph.ot.unicode ) ) {\n\n\t\tthis.charMap[glyph.ot.unicode] = glyph;\n\t}\n\n\t// build the alternates map\n\tif ( !this.altMap[glyph.ot.unicode] ) {\n\t\tthis.altMap[glyph.ot.unicode] = [];\n\t}\n\tthis.altMap[glyph.ot.unicode].push( glyph );\n\n\t// invalidate glyph subset cache\n\t// TODO: switch to immutable.js to avoid this maddness\n\tthis._lastSubset = undefined;\n\n\treturn glyph;\n};\n\nFont.prototype.addGlyphs = function( glyphs ) {\n\treturn glyphs.forEach(function( glyph ) {\n\t\tthis.addGlyph(glyph);\n\n\t}, this);\n};\n\nObject.defineProperty( Font.prototype, 'subset', {\n\tget: function() {\n\t\treturn this.getGlyphSubset();\n\t},\n\tset: function( set ) {\n\t\tthis._subset =\n\t\t\ttypeof set === 'boolean' ? set :\n\t\t\tFont.normalizeSubset( set );\n\t}\n});\n\nFont.prototype.getGlyphSubset = function( _set ) {\n\tvar set =\n\t\t\t_set === undefined ? this._subset :\n\t\t\ttypeof _set === 'boolean' ? _set :\n\t\t\tFont.normalizeSubset( _set );\n\n\t// true returns all glyphs\n\tif ( set === true ) {\n\t\treturn this.children;\n\t}\n\n\t// reuse last subset if possible\n\t// TODO: implement caching using immutable.js\n\tif ( this._lastSubset &&\n\t\t\tthis._lastSubset[0] ===\n\t\t\t( typeof set === 'object' ? set.join() : set ) ) {\n\n\t\treturn this._lastSubset[1];\n\t}\n\n\t// memoize last subset\n\tthis._lastSubset = [\n\t\t// store the set serialized to make subsequent comparisons easier\n\t\ttypeof set === 'object' ? set.join() : set,\n\t\tthis.children.filter(function( glyph ) {\n\t\t\t// false will return all glyphs that have one or more unicodes\n\t\t\tif ( set === false &&\n\t\t\t\t\t( glyph.ot.unicode !== undefined ||\n\t\t\t\t\t( glyph.ot.unicodes && glyph.ot.unicodes.length ) ) ) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif ( set &&\n\t\t\t\t\t( set.indexOf( glyph.ot.unicode ) !== -1 ) ||\n\t\t\t\t\t( glyph.ot.unicode === 0 ) ) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// TODO: handle multiple unicodes\n\t\t\treturn false;\n\n\t\t}, this)\n\t];\n\n\treturn this._lastSubset[1];\n};\n\nFont.prototype.interpolate = function( font0, font1, coef, set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\tglyph.interpolate(\n\t\t\tfont0.glyphMap[glyph.name],\n\t\t\tfont1.glyphMap[glyph.name],\n\t\t\tcoef\n\t\t);\n\t});\n\n\t// TODO: evaluate if taking subsetting into account makes kerning\n\t// interpolation faster or slower.\n\tif ( this.ot.kerningPairs ) {\n\t\tfor ( var i in this.ot.kerningPairs ) {\n\t\t\tthis.ot.kerningPairs[i] =\n\t\t\t\tfont0.ot.kerningPairs[i] +\n\t\t\t\t( font1.ot.kerningPairs[i] - font0.ot.kerningPairs[i] ) * coef;\n\t\t}\n\t}\n\n\tthis.ot.ascender =\n\t\tfont0.ot.ascender + ( font1.ot.ascender - font0.ot.ascender ) * coef;\n\tthis.ot.descender =\n\t\tfont0.ot.descender + ( font1.ot.descender - font0.ot.descender ) * coef;\n\n\treturn this;\n};\n\nFont.prototype.updateSVGData = function( set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.updateSVGData();\n\t});\n\n\treturn this;\n};\n\nFont.prototype.updateOTCommands = function( set ) {\n\tthis.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.updateOTCommands();\n\t});\n\n\tthis.ot.glyphs = this.getGlyphSubset().map(function( glyph ) {\n\t\treturn glyph.ot;\n\t});\n\n\treturn this;\n};\n\nFont.prototype.importOT = function( otFont ) {\n\tthis.ot = otFont;\n\n\totFont.glyphs.forEach(function( otGlyph ) {\n\t\tvar glyph = new Glyph({\n\t\t\t\tname: otGlyph.name,\n\t\t\t\tunicode: otGlyph.unicode\n\t\t\t});\n\n\t\tthis.addGlyph( glyph );\n\t\tglyph.importOT( otGlyph );\n\n\t}, this);\n\n\treturn this;\n};\n\nif ( typeof window === 'object' && window.document ) {\n\n\tvar _URL = window.URL || window.webkitURL;\n\tFont.prototype.addToFonts = document.fonts ?\n\t\t// CSS font loading, lightning fast\n\t\tfunction( buffer ) {\n\t\t\tvar fontface = new window.FontFace(\n\t\t\t\tthis.ot.familyName,\n\t\t\t\tbuffer || this.ot.toBuffer()\n\t\t\t);\n\n\t\t\tdocument.fonts.add( fontface );\n\t\t\tthis.addedFonts.push( fontface );\n\n\t\t\treturn this;\n\t\t} :\n\t\tfunction( buffer ) {\n\t\t\tvar url = _URL.createObjectURL(\n\t\t\t\t\tnew Blob(\n\t\t\t\t\t\t[ new DataView( buffer || this.ot.toBuffer() ) ],\n\t\t\t\t\t\t{ type: 'font/opentype' }\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\tif ( this.fontObjectURL ) {\n\t\t\t\t_URL.revokeObjectURL( this.fontObjectURL );\n\t\t\t\tthis.styleSheet.deleteRule(0);\n\t\t\t}\n\n\t\t\tthis.styleSheet.insertRule(\n\t\t\t\t'@font-face { font-family: \"' + this.ot.familyName + '\";' +\n\t\t\t\t'src: url(' + url + '); }',\n\t\t\t\t0\n\t\t\t);\n\t\t\tthis.fontObjectURL = url;\n\n\t\t\treturn this;\n\t\t};\n\n\tFont.prototype.download = function( buffer ) {\n\t\tvar reader = new FileReader();\n\n\t\treader.onloadend = function() {\n\t\t\twindow.location = reader.result;\n\t\t};\n\n\t\treader.readAsDataURL(new Blob(\n\t\t\t[ new DataView( buffer || this.ot.toBuffer() ) ],\n\t\t\t{ type: 'font/opentype' }\n\t\t));\n\n\t\treturn this;\n\t};\n\n}\n\nFont.normalizeSubset = function( set ) {\n\treturn ( typeof set === 'string' ?\n\t\t\tset.split('').map(function(e) {\n\t\t\t\treturn e.charCodeAt(0);\n\t\t\t}) :\n\t\t\tset || []\n\t\t)\n\t\t.filter(function(e, i, arr) {\n\t\t\treturn arr.lastIndexOf(e) === i;\n\t\t})\n\t\t.sort();\n};\n\nmodule.exports = Font;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":1,\"../node_modules/paper/dist/paper-core.js\":2,\"./Glyph.js\":5}],5:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tOutline = require('./Outline.js');\n\nfunction Glyph( args ) {\n\tpaper.Group.prototype.constructor.apply( this );\n\n\tif ( args && typeof args.unicode === 'string' ) {\n\t\targs.unicode = args.unicode.charCodeAt(0);\n\t}\n\n\tthis.ot = new opentype.Glyph( args );\n\tthis.ot.path = new opentype.Path();\n\n\tthis.name = args.name;\n\t// workaround opentype 'unicode === 0' bug\n\tthis.ot.unicode = args.unicode;\n\n\tthis.addChild( new Outline() );\n\t// the second child will hold all components\n\tthis.addChild( new paper.Group() );\n\t// Should all anchors and parentAnchors also leave in child groups?\n\tthis.anchors = ( args && args.anchors ) || [];\n\tthis.parentAnchors = ( args && args.parentAnchors ) || [];\n\n\t// each individual glyph must be explicitely made visible\n\tthis.visible = false;\n\t// default colors required to display the glyph in a canvas\n\tthis.fillColor = new paper.Color(0, 0, 0);\n\t// stroke won't be displayed unless strokeWidth is set to 1\n\tthis.strokeColor = new paper.Color(0, 0, 0);\n\tthis.strokeScaling = false;\n}\n\nGlyph.prototype = Object.create(paper.Group.prototype);\nGlyph.prototype.constructor = Glyph;\n\n// Todo: handle unicode updates\nObject.defineProperty(Glyph.prototype, 'unicode', {\n\tset: function( code ) {\n\t\tthis.ot.unicode = typeof code === 'string' ?\n\t\t\tcode.charCodeAt(0) :\n\t\t\tcode;\n\t},\n\tget: function() {\n\t\treturn this.ot.unicode;\n\t}\n});\n\n// proxy .contours to .children[0]\nObject.defineProperty( Glyph.prototype, 'contours', {\n\tget: function() {\n\t\treturn this.children[0].children;\n\t}\n});\n\n// proxy .components to .children[1]\nObject.defineProperty( Glyph.prototype, 'components', {\n\tget: function() {\n\t\treturn this.children[1].children;\n\t}\n});\n\n// proxy .visible to\n\n// proxy ...Contour[s] methods to children[0]...Child[ren] methods\n// and proxy ...Component[s] methods to children[1]...Child[ren] methods\nObject.getOwnPropertyNames( paper.Item.prototype ).forEach(function(name) {\n\tvar proto = this;\n\n\t// exclude getters and non-methods\n\tif ( Object.getOwnPropertyDescriptor(proto, name).get ||\n\t\t\ttypeof proto[name] !== 'function' ) {\n\t\treturn;\n\t}\n\n\tif ( name.indexOf('Children') !== -1 ) {\n\t\tproto[name.replace('Children', 'Contours')] = function() {\n\t\t\tproto[name].apply( this.children[0], arguments );\n\t\t};\n\n\t\tproto[name.replace('Children', 'Components')] = function() {\n\t\t\tproto[name].apply( this.children[1], arguments );\n\t\t};\n\n\t} else if ( name.indexOf('Child') !== -1 ) {\n\t\tproto[name.replace('Child', 'Contour')] = function() {\n\t\t\tproto[name].apply( this.children[0], arguments );\n\t\t};\n\n\t\tproto[name.replace('Child', 'Component')] = function() {\n\t\t\tproto[name].apply( this.children[1], arguments );\n\t\t};\n\t}\n\n}, paper.Item.prototype);\n\nGlyph.prototype.addAnchor = function( item ) {\n\tthis.anchors.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addAnchors = function( anchors ) {\n\treturn anchors.forEach(function(anchor) {\n\t\tthis.addAnchor(anchor);\n\t}, this);\n};\n\nGlyph.prototype.addParentAnchor = function( item ) {\n\tthis.parentAnchors.push( item );\n\treturn item;\n};\n\nGlyph.prototype.addUnicode = function( code ) {\n\tthis.ot.addUnicode( code );\n\n\treturn this;\n};\n\nGlyph.prototype.interpolate = function( glyph0, glyph1, coef ) {\n\t// If we added an interpolate method to Group, we'd be able to just\n\t// interpolate all this.children directly.\n\t// instead we interpolate the outline first\n\tthis.children[0].interpolate( glyph0.children[0], glyph1.children[0] );\n\t// and then the components\n\tthis.children[1].children.forEach(function(component, j) {\n\t\tcomponent.interpolate(\n\t\t\tglyph0.children[1].children[j], glyph1.children[1].children[j], coef\n\t\t);\n\t});\n\n\tthis.ot.advanceWidth =\n\t\tglyph0.ot.advanceWidth +\n\t\t( glyph1.ot.advanceWidth - glyph0.ot.advanceWidth ) * coef;\n\tthis.ot.leftSideBearing =\n\t\tglyph0.ot.leftSideBearing +\n\t\t( glyph1.ot.leftSideBearing - glyph0.ot.leftSideBearing ) * coef;\n\tthis.ot.xMax =\n\t\tglyph0.ot.xMax + ( glyph1.ot.xMax - glyph0.ot.xMax ) * coef;\n\tthis.ot.xMin =\n\t\tglyph0.ot.xMin + ( glyph1.ot.xMin - glyph0.ot.xMin ) * coef;\n\tthis.ot.yMax =\n\t\tglyph0.ot.yMax + ( glyph1.ot.yMax - glyph0.ot.yMax ) * coef;\n\tthis.ot.yMin =\n\t\tglyph0.ot.yMin + ( glyph1.ot.yMin - glyph0.ot.yMin ) * coef;\n\n\treturn this;\n};\n\nGlyph.prototype.updateSVGData = function( path ) {\n\tif ( !path ) {\n\t\tthis.svgData = [];\n\t\tpath = this.svgData;\n\t}\n\n\tthis.children[0].updateSVGData( path );\n\n\tthis.children[1].children.forEach(function( component ) {\n\t\tcomponent.updateSVGData( path );\n\t});\n\n\treturn this.svgData;\n};\n\nGlyph.prototype.updateOTCommands = function( path ) {\n\tif ( !path ) {\n\t\tthis.ot.path.commands = [];\n\t\tpath = this.ot.path;\n\t}\n\n\tthis.children[0].updateOTCommands( path );\n\n\tthis.children[1].children.forEach(function( component ) {\n\t\tcomponent.updateOTCommands( path );\n\t});\n\n\treturn this.ot;\n};\n\nGlyph.prototype.importOT = function( otGlyph ) {\n\tvar current;\n\tthis.ot = otGlyph;\n\n\tif ( !otGlyph.path || !otGlyph.path.commands ) {\n\t\treturn this;\n\t}\n\n\tthis.ot.path.commands.forEach(function(command) {\n\t\tswitch ( command.type ) {\n\t\t\tcase 'M':\n\t\t\t\tcurrent = new paper.Path();\n\t\t\t\tthis.addContour( current );\n\n\t\t\t\tcurrent.moveTo( command );\n\t\t\t\tbreak;\n\t\t\tcase 'L':\n\t\t\t\tcurrent.lineTo( command );\n\t\t\t\tbreak;\n\t\t\tcase 'C':\n\t\t\t\tcurrent.cubicCurveTo(\n\t\t\t\t\t[ command.x1, command.y1 ],\n\t\t\t\t\t[ command.x2, command.y2 ],\n\t\t\t\t\tcommand\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'Q':\n\t\t\t\tcurrent.quadraticCurveTo(\n\t\t\t\t\t[ command.x1, command.y1 ],\n\t\t\t\t\tcommand\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\t// When the glyph has no contour,\n\t\t\t\t// they contain a single Z command in\n\t\t\t\t// opentype.js.\n\t\t\t\t// TODO: see how we should handle that\n\t\t\t\tif ( current ) {\n\t\t\t\t\tcurrent.closePath();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}, this);\n\n\treturn this;\n};\n\nmodule.exports = Glyph;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":1,\"../node_modules/paper/dist/paper-core.js\":2,\"./Outline.js\":7}],6:[function(require,module,exports){\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nObject.defineProperty( paper.Segment.prototype, 'x', {\n\tget: function() {\n\t\treturn this.point.x;\n\t},\n\tset: function( value ) {\n\t\tthis.point.x = value;\n\t}\n});\n\nObject.defineProperty( paper.Segment.prototype, 'y', {\n\tget: function() {\n\t\treturn this.point.y;\n\t},\n\tset: function( value ) {\n\t\tthis.point.y = value;\n\t}\n});\n\nmodule.exports = paper.Segment;\n\n},{\"../node_modules/paper/dist/paper-core.js\":2}],7:[function(require,module,exports){\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nfunction Outline() {\n\tpaper.CompoundPath.prototype.constructor.apply( this );\n}\n\n// inehrit CompoundPath\nOutline.prototype = Object.create(paper.CompoundPath.prototype);\nOutline.prototype.constructor = Outline;\n\n// Fix two problems with CompoundPath#insertChildren:\n// - it arbitrarily changes the direction of paths\n// - it seems that it doesn't handle CompoundPath arguments\nOutline.prototype.insertChildren = function(index, items, _preserve) {\n\tif ( Array.isArray( items ) ) {\n\t\t// flatten items to handle CompoundPath children\n\t\titems = [].concat.apply([], items.map(function(item) {\n\t\t\treturn item instanceof paper.Path ? item : item.children;\n\t\t}));\n\t}\n\n\treturn paper.Item.prototype.insertChildren.call(\n\t\tthis, index, items, _preserve, paper.Path\n\t);\n};\n\nOutline.prototype.interpolate = function( outline0, outline1, coef ) {\n\tfor (var i = 0, l = this.contours.length; i < l; i++) {\n\t\t// The number of children should be the same everywhere,\n\t\t// but we're going to try our best anyway\n\t\tif ( !outline0.children[i] || !outline1.children[i] ) {\n\t\t\tbreak;\n\t\t}\n\n\t\tthis.children[i].interpolate(\n\t\t\toutline0.children[i],\n\t\t\toutline1.children[i],\n\t\t\tcoef\n\t\t);\n\t}\n\n\treturn this;\n};\n\nOutline.prototype.updateSVGData = function( path ) {\n\tif ( !path ) {\n\t\tthis.svgData = [];\n\t\tpath = this.svgData;\n\t}\n\n\tthis.children.forEach(function( contour ) {\n\t\tcontour.updateSVGData( path, contour.globalMatrix );\n\t}, this);\n\n\treturn this.svgData;\n};\n\nOutline.prototype.updateOTCommands = function( path ) {\n\tif ( !path ) {\n\t\tthis.ot.path.commands = [];\n\t\tpath = this.ot.path;\n\t}\n\n\tthis.children.forEach(function( contour ) {\n\t\tcontour.updateOTCommands( path, contour.globalMatrix );\n\t}, this);\n\n\treturn this.ot;\n};\n\nmodule.exports = Outline;\n\n},{\"../node_modules/paper/dist/paper-core.js\":2}],8:[function(require,module,exports){\n/* Extend the Path prototype to add OpenType conversion\n * and alias *segments methods and properties to *nodes\n */\nvar paper = require('../node_modules/paper/dist/paper-core.js');\n\nvar proto = paper.PaperScope.prototype.Path.prototype;\n\n// alias *Segments methods to *Nodes equivalents\n[ 'add', 'insert', 'remove' ].forEach(function(name) {\n\tproto[name + 'Nodes'] =\n\t\tproto[name + 'Segments'];\n});\n\n// alias .segments to .nodes\nObject.defineProperties(proto, {\n\tnodes: Object.getOwnPropertyDescriptor( proto, 'segments' ),\n\tfirstNode: Object.getOwnPropertyDescriptor( proto, 'firstSegment' ),\n\tlastNode: Object.getOwnPropertyDescriptor( proto, 'lastSegment' )\n});\n\nproto._updateData = function( data, matrix, pushSimple, pushBezier ) {\n\tif ( this.visible === false ) {\n\t\treturn data;\n\t}\n\n\t// prototypo needs to be able to change the direction of the updated data.\n\tvar reverse = ( this.export === 'clockwise' && !this.clockwise ) ||\n\t\t\t( this.export === 'anticlockwise' && this.clockwise ),\n\t\tcurves = this.curves,\n\t\tstart = curves[ reverse ? curves.length - 1 : 0 ]\n\t\t\t[ 'point' + ( reverse ? 2 : 1 ) ]\n\t\t\t.transform( matrix );\n\n\tpushSimple(\n\t\t'M',\n\t\tMath.round( start.x ) || 0,\n\t\tMath.round( start.y ) || 0\n\t);\n\n\tfor ( var i = -1, l = curves.length; ++i < l; ) {\n\t\tvar curve = curves[ reverse ? l - 1 - i : i ],\n\t\t\tend = curve['point' + ( reverse ? 1 : 2 ) ].transform( matrix );\n\n\t\tif ( curve.isLinear() ) {\n\t\t\tpushSimple(\n\t\t\t\t'L',\n\t\t\t\tMath.round( end.x ) || 0,\n\t\t\t\tMath.round( end.y ) || 0\n\t\t\t);\n\n\t\t} else {\n\t\t\tvar ctrl1 = new paper.Point(\n\t\t\t\t\tcurve.point1.x + curve.handle1.x,\n\t\t\t\t\tcurve.point1.y + curve.handle1.y\n\t\t\t\t).transform( matrix ),\n\t\t\t\tctrl2 = new paper.Point(\n\t\t\t\t\tcurve.point2.x + curve.handle2.x,\n\t\t\t\t\tcurve.point2.y + curve.handle2.y\n\t\t\t\t).transform( matrix );\n\n\t\t\tif ( reverse ) {\n\t\t\t\tpushBezier(\n\t\t\t\t\t'C',\n\t\t\t\t\tMath.round( ctrl2.x ) || 0,\n\t\t\t\t\tMath.round( ctrl2.y ) || 0,\n\t\t\t\t\tMath.round( ctrl1.x ) || 0,\n\t\t\t\t\tMath.round( ctrl1.y ) || 0,\n\t\t\t\t\tMath.round( end.x ) || 0,\n\t\t\t\t\tMath.round( end.y ) || 0\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpushBezier(\n\t\t\t\t\t'C',\n\t\t\t\t\tMath.round( ctrl1.x ) || 0,\n\t\t\t\t\tMath.round( ctrl1.y ) || 0,\n\t\t\t\t\tMath.round( ctrl2.x ) || 0,\n\t\t\t\t\tMath.round( ctrl2.y ) || 0,\n\t\t\t\t\tMath.round( end.x ) || 0,\n\t\t\t\t\tMath.round( end.y ) || 0\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( this.closed ) {\n\t\tpushSimple('Z');\n\t}\n\n\treturn data;\n};\n\nproto.updateOTCommands = function( data, matrix ) {\n\treturn this._updateData(\n\t\tdata,\n\t\tmatrix,\n\t\tfunction pushSimple() {\n\t\t\tdata.commands.push({\n\t\t\t\ttype: arguments[0],\n\t\t\t\tx: arguments[1],\n\t\t\t\ty: arguments[2]\n\t\t\t});\n\t\t},\n\t\tfunction pushBezier() {\n\t\t\tdata.commands.push({\n\t\t\t\ttype: arguments[0],\n\t\t\t\tx1: arguments[1],\n\t\t\t\ty1: arguments[2],\n\t\t\t\tx2: arguments[3],\n\t\t\t\ty2: arguments[4],\n\t\t\t\tx: arguments[5],\n\t\t\t\ty: arguments[6]\n\t\t\t});\n\t\t}\n\t);\n};\n\nproto.updateSVGData = function( data, matrix ) {\n\treturn this._updateData(\n\t\tdata,\n\t\tmatrix,\n\t\tfunction pushSimple() {\n\t\t\tdata.push.apply( data, arguments );\n\t\t},\n\t\tfunction pushBezier() {\n\t\t\tdata.push.apply( data, arguments );\n\t\t}\n\t);\n};\n\nmodule.exports = paper.Path;\n\n},{\"../node_modules/paper/dist/paper-core.js\":2}],9:[function(require,module,exports){\nvar opentype = require('../node_modules/opentype.js/dist/opentype.js'),\n\tpaper = require('../node_modules/paper/dist/paper-core.js'),\n\tFont = require('./Font.js'),\n\tGlyph = require('./Glyph.js'),\n\tOutline = require('./Outline'),\n\tPath = require('./Path.js'),\n\tNode = require('./Node.js'),\n\tCollection = require('./Collection.js');\n\npaper.PaperScope.prototype.Font = Font;\npaper.PaperScope.prototype.Glyph = Glyph;\npaper.PaperScope.prototype.Outline = Outline;\npaper.PaperScope.prototype.Path = Path;\npaper.PaperScope.prototype.Node = Node;\npaper.PaperScope.prototype.Collection = Collection;\n\nfunction plumin( arg ) {\n\tif ( arguments.length === 1 && arg instanceof Collection ) {\n\t\treturn arg;\n\t}\n\n\tvar c = Object.create( Collection.prototype );\n\tCollection.apply( c, arguments );\n\treturn c;\n}\n\nplumin.opentype = opentype;\n\nplumin.proxy = Collection.proxy.bind(plumin);\nplumin.proxy(paper);\n\nmodule.exports = plumin;\n\n},{\"../node_modules/opentype.js/dist/opentype.js\":1,\"../node_modules/paper/dist/paper-core.js\":2,\"./Collection.js\":3,\"./Font.js\":4,\"./Glyph.js\":5,\"./Node.js\":6,\"./Outline\":7,\"./Path.js\":8}]},{},[9,2])(9)\n});\n\n\n//# sourceMappingURL=plumin.js.map\n},{}],27:[function(require,module,exports){\nvar plumin = require('../node_modules/plumin.js/dist/plumin.js'),\n\tDepTree = require('../node_modules/deptree/index.js'),\n\tupdateUtils = require('./updateUtils.js'),\n\tclone = require('lodash.clone');\n\nvar paper = plumin.paper,\n\tUtils = updateUtils,\n\t_ = { clone: clone };\n\n// convert the glyph source from the ufo object model to the paper object model\n// this is the inverse operation done by jsufonify\nUtils.ufoToPaper = function( src ) {\n\tif ( src.parameter ) {\n\t\tsrc.parameters = src.parameter;\n\t\tdelete src.parameter;\n\t}\n\n\tif ( src.anchor ) {\n\t\tsrc.anchors = src.anchor;\n\t\tdelete src.anchor;\n\t}\n\n\tif ( src.outline && src.outline.contour ) {\n\t\tsrc.contours = src.outline.contour;\n\t\tdelete src.outline.contour;\n\t}\n\n\tsrc.contours.forEach(function(contour) {\n\t\tif ( contour.point ) {\n\t\t\tcontour.nodes = contour.point;\n\t\t\tdelete contour.point;\n\t\t}\n\t});\n\n\tif ( src.outline && src.outline.component ) {\n\t\tsrc.components = src.outline.component;\n\n\t\tsrc.components.forEach(function(component) {\n\t\t\tif ( component.anchor ) {\n\t\t\t\tcomponent.parentAnchors = component.anchor;\n\t\t\t\tdelete component.anchor;\n\t\t\t}\n\n\t\t\tif ( component.parameter ) {\n\t\t\t\tcomponent.parentParameters = component.parameter;\n\t\t\t\tdelete component.parameter;\n\t\t\t}\n\t\t});\n\n\t\tdelete src.outline.component;\n\t}\n\n\tdelete src.outline;\n\n\tif ( src.lib && src.lib.transformList ) {\n\t\tsrc.transformList = src.lib.transformList;\n\t\tdelete src.lib.transformList;\n\t}\n\n\tif ( src.lib && src.lib.solvingOrder ) {\n\t\tsrc.solvingOrder = src.lib.solvingOrder;\n\t\tdelete src.lib.solvingOrder;\n\t}\n\n\treturn src;\n};\n\n// create Glyph instance and all its child items: anchors, contours\n// and components\nUtils.glyphFromSrc = function( src, fontSrc, naive, embed ) {\n\tvar glyph = new paper.Glyph({\n\t\tname: src.name,\n\t\tunicode: src.unicode\n\t});\n\n\t// Clone glyph src to allow altering it without impacting components srcs.\n\tglyph.src = _.clone( src, true );\n\tUtils.mergeStatic( glyph, glyph.src );\n\n\t// this will be used to hold local parameters that will be merged with\n\t// the font parameters\n\tglyph.parameters = {};\n\tUtils.mergeStatic( glyph.parameters, glyph.src.parameters );\n\n\t// solvingOrder might be already available (if this is a subcomponent,\n\t// or precomputed in a worker)\n\tglyph.solvingOrder = glyph.src.solvingOrder;\n\n\t(glyph.src.anchors || []).forEach(function(anchorSrc) {\n\t\tvar anchor = new paper.Node();\n\t\tanchor.src = anchorSrc;\n\t\tUtils.mergeStatic( anchor, anchorSrc );\n\n\t\tglyph.addAnchor( anchor );\n\t});\n\n\t(glyph.src.contours || []).forEach(function(contourSrc) {\n\t\tvar contour = new paper.Path();\n\t\tcontour.src = contourSrc;\n\t\tUtils.mergeStatic( contour, contourSrc );\n\n\t\tglyph.addContour( contour );\n\n\t\t// TODO: handle oncurve/offcurve points\n\t\tcontourSrc.nodes.forEach(function(nodeSrc) {\n\t\t\tvar node = new paper.Node();\n\t\t\tnode.src = nodeSrc;\n\t\t\tUtils.mergeStatic( node, nodeSrc );\n\n\t\t\tcontour.add( node );\n\t\t});\n\t});\n\n\tif ( !glyph.src.components ) {\n\t\treturn glyph;\n\t}\n\n\t// components can only be embedded once all glyphs have been generated\n\t// from source\n\tglyph.embedComponents = function() {\n\t\tglyph.src.components.forEach(function(componentSrc) {\n\t\t\t// components are glyphs, quite simply\n\t\t\tvar component = Utils.glyphFromSrc(\n\t\t\t\t\tfontSrc.glyphs[componentSrc.base],\n\t\t\t\t\tfontSrc,\n\t\t\t\t\tnaive,\n\t\t\t\t\t// components' subcomponents can be embedded immediatly\n\t\t\t\t\ttrue\n\t\t\t\t);\n\n\t\t\tcomponent.parentParameters = {};\n\t\t\tUtils.mergeStatic(\n\t\t\t\tcomponent.parentParameters,\n\t\t\t\tcomponentSrc.parentParameters\n\t\t\t);\n\n\t\t\tnaive.annotator( component );\n\t\t\tglyph.addComponent( component );\n\n\t\t\t(componentSrc.parentAnchors || []).forEach(function(anchorSrc) {\n\t\t\t\tvar anchor = new paper.Node();\n\t\t\t\tanchor.src = anchorSrc;\n\t\t\t\tUtils.mergeStatic( anchor, anchorSrc );\n\n\t\t\t\tcomponent.addParentAnchor( anchor );\n\t\t\t});\n\t\t});\n\n\t\tdelete glyph.embedComponents;\n\t};\n\n\tif ( embed ) {\n\t\tglyph.embedComponents();\n\t}\n\n\treturn glyph;\n};\n\n// build a full cursor from arguments\n// adds 'contours' and 'nodes' automagically when arguments start with a number\nUtils.cursor = function() {\n\tvar cursor = [];\n\n\tfor ( var i = -1; ++i < arguments.length; ) {\n\t\tif ( i === 0 && typeof arguments[0] === 'number' ) {\n\t\t\tcursor.push( 'contours' );\n\t\t}\n\t\tif ( i === 1 && typeof arguments[0] === 'number' ) {\n\t\t\tcursor.push( 'nodes' );\n\t\t}\n\t\tcursor.push( arguments[i] );\n\t}\n\n\treturn cursor.join('.');\n};\n\nUtils.propFromCursor = function( cursor, context, length ) {\n\tif ( length === undefined ) {\n\t\tlength = cursor.length;\n\t}\n\n\tfor ( var i = -1; ++i < length; ) {\n\t\tcontext = context[ cursor[i] ];\n\t}\n\n\treturn context;\n};\n\nUtils.mergeStatic = function( obj, src ) {\n\tfor ( var i in src ) {\n\t\tif ( typeof src[i] !== 'object' ) {\n\t\t\tobj[i] = src[i];\n\n\t\t// props that have empty dependencies and params are static\n\t\t} else if ( src[i]._dependencies && src[i]._dependencies.length === 0 &&\n\t\t\t\tsrc[i]._parameters.length === 0 ) {\n\n\t\t\tobj[i] = src[i]._updaters[0].apply(\n\t\t\t\tobj,\n\t\t\t\t[ null, null, null, null, Utils ]\n\t\t\t);\n\n\t\t\tdelete src[i];\n\t\t}\n\t}\n};\n\nUtils.createUpdaters = function( leaf, path ) {\n\tif ( leaf.constructor === Object &&\n\t\t\t( typeof leaf._operation === 'string' ||\n\t\t\ttypeof leaf._operation === 'function' ) ) {\n\n\t\tvar args = [\n\t\t\t\t\t'propName', 'contours', 'anchors', 'parentAnchors', 'Utils'\n\t\t\t\t]\n\t\t\t\t.concat( leaf._parameters || [] )\n\t\t\t\t.concat(\n\t\t\t\t\t( typeof leaf._operation === 'string' &&\n\t\t\t\t\t\t\tleaf._operation.indexOf('return ') === -1 ?\n\t\t\t\t\t\t'return ' : ''\n\t\t\t\t\t) +\n\t\t\t\t\t// The operation might be wrapped in a function (e.g. multi-\n\t\t\t\t\t// line code for debugging purpose). In this case, return\n\t\t\t\t\t// must be explicit\n\t\t\t\t\tleaf._operation.toString()\n\t\t\t\t\t\t// [\\s\\S] need to be used instead of . because\n\t\t\t\t\t\t// javascript doesn't have a dotall flag (s)\n\t\t\t\t\t\t.replace(/function\\s*\\(\\)\\s*\\{([\\s\\S]*?)\\}$/, '$1')\n\t\t\t\t\t\t.trim() +\n\t\t\t\t\t// add sourceURL pragma to help debugging\n\t\t\t\t\t'\\n\\n//# sourceURL=' + path\n\t\t\t\t);\n\n\t\tleaf._updaters = [ Function.apply( null, args ) ];\n\t\treturn leaf._updaters;\n\t}\n\n\tif ( leaf.constructor === Object ) {\n\t\tfor ( var i in leaf ) {\n\t\t\tUtils.createUpdaters( leaf[i], path + '.' + i );\n\t\t}\n\t}\n\n\tif ( leaf.constructor === Array ) {\n\t\tleaf.forEach(function(child, j) {\n\t\t\tUtils.createUpdaters( child, path + '.' + j );\n\t\t});\n\t}\n};\n\nUtils.solveDependencyTree = function( glyph ) {\n\tvar depTree = Utils.dependencyTree( glyph.src, null ),\n\t\torder = depTree.resolve().map(function( cursor ) {\n\t\t\treturn cursor.split('.');\n\t\t}),\n\t\tsimplified = Utils.simplifyResolutionOrder( glyph, order );\n\n\treturn simplified;\n};\n\nUtils.dependencyTree = function( parentSrc, cursor, depTree ) {\n\tif ( !depTree ) {\n\t\tdepTree = new DepTree();\n\t}\n\n\tObject.keys( parentSrc ).forEach(function( i ) {\n\t\t// don't inspect local parameters, private properties and non-object\n\t\tif ( i === 'parameters' || i.indexOf('_') === 0 ||\n\t\t\t\ttypeof parentSrc[i] !== 'object' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar leafSrc = parentSrc[i],\n\t\t\tcurrCursor = cursor ? cursor + '.' + i : i;\n\n\t\tif ( ( leafSrc._updaters && leafSrc._updaters.length ) ||\n\t\t\t\t( leafSrc._dependencies && leafSrc._dependencies.length ) ) {\n\n\t\t\tdepTree.add( currCursor,\n\t\t\t\tleafSrc._dependencies.filter(function(dep) {\n\t\t\t\t\t// parentAnchors are always here when you need them\n\t\t\t\t\treturn !/^parentAnchors/.test(dep);\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tif ( !leafSrc._operation ) {\n\t\t\tUtils.dependencyTree( leafSrc, currCursor, depTree );\n\t\t}\n\t});\n\n\treturn depTree;\n};\n\n// Simplify resolution order by removing cursors that don't point to objects\n// with updater functions\nUtils.simplifyResolutionOrder = function( glyph, depTree ) {\n\treturn depTree.filter(function( cursor ) {\n\t\tvar src = Utils.propFromCursor( cursor, glyph.src );\n\t\treturn src && src._updaters;\n\t});\n};\n\nvar rdeg = /deg$/;\nUtils.transformsToMatrix = function( transforms, origin ) {\n\tvar prev = new Float32Array(6),\n\t\tcurr = new Float32Array(6),\n\t\trslt = new Float32Array([ 1, 0, 0, 1, 0, 0 ]);\n\n\tif ( origin && Array.isArray( origin ) ) {\n\t\ttransforms.unshift([ 'translate', origin[0], origin[1] ]);\n\t\ttransforms.push([ 'translate', -origin[0], -origin[1] ]);\n\n\t} else if ( origin ) {\n\t\ttransforms.unshift([ 'translate', origin.x, origin.y ]);\n\t\ttransforms.push([ 'translate', -origin.x, -origin.y ]);\n\t}\n\n\ttransforms.forEach(function( transform ) {\n\t\tcurr[0] = curr[3] = 1;\n\t\tcurr[1] = curr[2] = curr[4] = curr[5] = 0;\n\n\t\t// convert degrees to radian\n\t\tfor ( var i = 1; i < transform.length; i++ ) {\n\t\t\tif ( transform[i] && typeof transform[i] === 'string' &&\n\t\t\t\t\trdeg.test(transform[i]) ) {\n\t\t\t\ttransform[i] = parseFloat(transform[i]) * ( Math.PI * 2 / 360 );\n\t\t\t}\n\t\t}\n\n\t\tswitch ( transform[0] ) {\n\t\tcase 'translateX':\n\t\t\tcurr[4] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'translateY':\n\t\t\tcurr[5] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'translate':\n\t\t\tcurr[4] = transform[1];\n\t\t\tcurr[5] = transform[2] || 0;\n\t\t\tbreak;\n\n\t\tcase 'rotate':\n\t\t\tcurr[0] = Math.cos( transform[1] );\n\t\t\tcurr[1] = Math.sin( transform[1] );\n\t\t\tcurr[2] = -curr[1];\n\t\t\tcurr[3] = curr[0];\n\t\t\tbreak;\n\n\t\tcase 'scaleX':\n\t\t\tcurr[0] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'scaleY':\n\t\t\tcurr[3] = transform[1];\n\t\t\tbreak;\n\n\t\tcase 'scale':\n\t\t\tcurr[0] = transform[1];\n\t\t\tcurr[3] = transform.length > 2 ? transform[2] : transform[1];\n\t\t\tbreak;\n\n\t\tcase 'skewX':\n\t\t\t// stop parsing transform when encountering skewX(90)\n\t\t\t// see http://stackoverflow.com/questions/21094958/how-to-deal-with-infinity-in-a-2d-matrix\n\t\t\ttransform[1] = transform[1] % ( 2 * Math.PI );\n\t\t\tif ( transform[1] === Math.PI / 2 ||\n\t\t\t\t\ttransform[1] === -Math.PI / 2 ) {\n\t\t\t\treturn rslt;\n\t\t\t}\n\t\t\tcurr[2] = Math.tan( transform[1] );\n\t\t\tbreak;\n\n\t\tcase 'skewY':\n\t\t\ttransform[1] = transform[1] % ( 2 * Math.PI );\n\t\t\tif ( transform[1] === Math.PI / 2 ||\n\t\t\t\t\ttransform[1] === -Math.PI / 2 ) {\n\t\t\t\treturn rslt;\n\t\t\t}\n\t\t\tcurr[1] = Math.tan( transform[1] );\n\t\t\tbreak;\n\n\t\tcase 'matrix':\n\t\t\tcurr[0] = transform[1];\n\t\t\tcurr[1] = transform[2];\n\t\t\tcurr[2] = transform[3];\n\t\t\tcurr[3] = transform[4];\n\t\t\tcurr[4] = transform[5];\n\t\t\tcurr[5] = transform[6];\n\t\t\tbreak;\n\t\t}\n\n\t\tprev[0] = rslt[0];\n\t\tprev[1] = rslt[1];\n\t\tprev[2] = rslt[2];\n\t\tprev[3] = rslt[3];\n\t\tprev[4] = rslt[4];\n\t\tprev[5] = rslt[5];\n\n\t\trslt[0] = prev[0] * curr[0] + prev[2] * curr[1];\n\t\trslt[1] = prev[1] * curr[0] + prev[3] * curr[1];\n\t\trslt[2] = ( prev[0] * curr[2] || 0 ) + prev[2] * curr[3];\n\t\trslt[3] = ( prev[1] * curr[2] || 0 ) + prev[3] * curr[3];\n\t\trslt[4] = prev[0] * curr[4] + prev[2] * curr[5] + prev[4];\n\t\trslt[5] = prev[1] * curr[4] + prev[3] * curr[5] + prev[5];\n\t});\n\n\treturn new paper.Matrix(\n\t\trslt[0],\n\t\trslt[1],\n\t\trslt[2],\n\t\trslt[3],\n\t\trslt[4],\n\t\trslt[5]\n\t);\n};\n\n// Utils.normalizeAngle = function( angle ) {\n// \treturn angle % ( 2 * Math.PI ) + ( angle < 0 ? 2 * Math.PI : 0 );\n// };\n\n// Utils.findUpdater = function( glyph, cursor ) {\n// \tvar steps = [ 'glyph' ].concat( cursor.split('.') ),\n// \t\tcontext = { glyph: glyph };\n//\n// \tfor ( var i = -1; ++i < steps.length; ) {\n// \t\tcontext = context[ steps[i] ];\n//\n// \t\tif ()\n// \t}\n// };\n\n// patterns that should be searched for in dependencies and expanded\n// This list is expandable by plugins, 'naive' uses this possibility\n// hashtag #expandableception\n// Utils.expandables = [\n// \t[ /\\.nodes\\.\\d+\\.point$/, function( dep ) {\n// \t\tdep = dep.replace(/\\.point$/, '');\n//\n// \t\treturn [\n// \t\t\tdep + '.x',\n// \t\t\tdep + '.y'\n// \t\t];\n// \t} ],\n// \t[ /\\.nodes\\.\\d+$/, function( dep ) {\n// \t\treturn [\n// \t\t\tdep + '.x',\n// \t\t\tdep + '.y',\n// \t\t\tdep + '.handleIn.point',\n// \t\t\tdep + '.handleOut.point'\n// \t\t];\n// \t} ]\n// ];\n// Utils.expandDependencies = function( glyphSrc, deps, excludeList ) {\n// \tdeps = deps.map(function(dep) {\n// \t\t// search for an expandable pattern and... expand the dependency\n// \t\tfor ( var i = -1, l = Utils.expandables.length; ++i < l; ) {\n// \t\t\tif ( Utils.expandables[i][0].test( dep ) ) {\n// \t\t\t\treturn Utils.expandables[i][1]( dep, glyphSrc );\n// \t\t\t}\n// \t\t}\n//\n// \t\treturn dep;\n// \t});\n//\n// \t// flatten deps array and remove items from excludeList\n// \treturn [].concat.apply([], deps).filter(function(dep) {\n// \t\treturn excludeList.indexOf( dep ) === -1;\n// \t});\n// };\n\nmodule.exports = Utils;\n\n},{\"../node_modules/deptree/index.js\":1,\"../node_modules/plumin.js/dist/plumin.js\":26,\"./updateUtils.js\":30,\"lodash.clone\":13}],28:[function(require,module,exports){\nvar plumin = require('../node_modules/plumin.js/dist/plumin.js'),\n\tUtils = require('./Utils.js'),\n\tassign = require('lodash.assign');\n\nvar paper = plumin.paper,\n\tnaive = {},\n\t_ = { assign: assign };\n\nfunction nodeSrc( node, i, j, inSkeleton ) {\n\treturn {\n\t\tpoint: { _dependencies: [\n\t\t\tUtils.cursor( i, j, 'x' ),\n\t\t\tUtils.cursor( i, j, 'y' )\n\t\t] },\n\t\tall: { _dependencies: Object.keys( node.src ).map(function( key ) {\n\t\t\t\treturn Utils.cursor( i, j, key );\n\t\t}) },\n\t\t_dependencies: inSkeleton ?\n\t\t\t// nodes in skeleton are never fully calculated (we don't calculate\n\t\t\t// the position of handles because we never draw their contour).\n\t\t\t// So we don't care about their dependencies.\n\t\t\t[] :\n\t\t\t[ Utils.cursor( 'contours', i, 'all' ) ]\n\t};\n}\n\nfunction autoExpandedNodeSrc( node, i, j, side, isClosed ) {\n\treturn {\n\t\tx: { _dependencies: [\n\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'point' )\n\t\t] },\n\t\ty: { _dependencies: [\n\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'point' )\n\t\t] },\n\t\tpoint: {\n\t\t\t_dependencies: [\n\t\t\t\tUtils.cursor( i, j, 'x' ),\n\t\t\t\tUtils.cursor( i, j, 'y' ),\n\t\t\t\tUtils.cursor( i, j, 'expand' )\n\t\t\t],\n\t\t\t_parameters: [ 'width' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar width = arguments[\n\t\t\t\t\t\targuments.length - 1\n\t\t\t\t\t];\n\n\t\t\t\tnaive.expandedNodeUpdater(\n\t\t\t\t\tnode.expandedTo[side], side === 0, width\n\t\t\t\t);\n\t\t\t} ]\n\t\t},\n\t\tall: {\n\t\t\t_dependencies: Object.keys( node.src ).map(function( key ) {\n\t\t\t\t\treturn Utils.cursor( i, j, key );\n\t\t\t}).concat([\n\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'point' )\n\t\t\t]),\n\t\t\t_updaters: [ function() {\n\t\t\t\tnaive.skeletonCopier( node );\n\t\t\t} ]\n\t\t},\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo',\n\t\t\t\t( isClosed ? side : 0 ), 'all' )\n\t\t]\n\t};\n}\n\nfunction explicitExpandedNodeSrc( node, i, j, side, isClosed ) {\n\treturn {\n\t\tpoint: { _dependencies: [\n\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'x' ),\n\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'y' )\n\t\t] },\n\t\tall: { _dependencies: Object.keys( node.src ).map(function( key ) {\n\t\t\t\treturn Utils.cursor( i, j, 'expandedTo', side, key );\n\t\t}) },\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo',\n\t\t\t\t( isClosed ? side : 0 ), 'points' )\n\t\t]\n\t};\n}\n\n//function expandedContourSrc( contour, i, side, nodesSrc ) {\nfunction expandedContourSrc( contour, i, side ) {\n\tvar half = contour.nodes.length / 2;\n\n\treturn {\n\t\tall: {\n\t\t\t_dependencies: contour.nodes.map(function(node, j) {\n\t\t\t\treturn side !== undefined ?\n\t\t\t\t\tUtils.cursor( i, j, 'expandedTo', side, 'all' ) :\n\t\t\t\t\tUtils.cursor(\n\t\t\t\t\t\ti, j % half, 'expandedTo', ( j < half ? 0 : 1 ), 'all'\n\t\t\t\t\t);\n\t\t\t}),\n\t\t\t_parameters: [ 'curviness' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar curviness = arguments[ arguments.length - 1 ];\n\n\t\t\t\tnaive.prepareContour( contour );\n\t\t\t\tnaive.updateContour( contour, curviness );\n\t\t\t} ]\n\t\t},\n\t\t// nodes: nodesSrc,\n\t\t_dependencies: [\n\t\t\tUtils.cursor( 'contours', i, 'expandedTo', side || 0, 'all' )\n\t\t]\n\t};\n}\n\nfunction contourSrc( contour, i ) {\n\treturn {\n\t\tall: {\n\t\t\t_dependencies: contour.nodes.map(function( node, j ) {\n\t\t\t\treturn Utils.cursor( i, j, 'all' );\n\t\t\t}),\n\t\t\t_parameters: [ 'curviness' ],\n\t\t\t_updaters: [ function() {\n\t\t\t\tvar curviness = arguments[ arguments.length - 1 ];\n\n\t\t\t\tnaive.prepareContour( contour );\n\t\t\t\tnaive.updateContour( contour, curviness );\n\t\t\t} ]\n\t\t},\n\t\t_dependencies: contour.nodes.map(function( node, j ) {\n\t\t\treturn Utils.cursor( i, j );\n\t\t})\n\t};\n}\n\n// default method to expand skeletons:\n// derives two additional node from every node with an .expand object\nnaive.annotator = function( glyph ) {\n\tvar additionalContours = [];\n\n\tglyph.contours.forEach(function( contour, i ) {\n\t\tif ( contour.skeleton !== true ) {\n\t\t\t// annotate nodes+points that aren't in a skeleton\n\t\t\tcontour.nodes.forEach(function( node, j ) {\n\t\t\t\t_.assign( node.src, nodeSrc( node, i, j ) );\n\t\t\t});\n\n\t\t\t_.assign( contour.src, contourSrc( contour, i ) );\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar leftContour,\n\t\t\trightContour,\n\t\t\tleftNodes = [],\n\t\t\trightNodes = [],\n\t\t\tleftNodesSrc = [],\n\t\t\trightNodesSrc = [],\n\t\t\tfirstNode,\n\t\t\tlastNode;\n\n\t\t// skeletons should be hidden\n\t\tcontour.visible = false;\n\n\t\tcontour.nodes.forEach(function( node, j ) {\n\n\t\t\tvar left = new paper.Node(),\n\t\t\t\tright = new paper.Node(),\n\t\t\t\tleftSrc,\n\t\t\t\trightSrc;\n\n\t\t\tleftNodes.push(left);\n\t\t\trightNodes.unshift(right);\n\t\t\tnode.expandedTo = [ left, right ];\n\t\t\tleft.expandedFrom = right.expandedFrom = node;\n\n\t\t\tif ( !node.src.expandedTo ) {\n\t\t\t\t// annotate nodes+points that are automatically expanded\n\t\t\t\tleftSrc = autoExpandedNodeSrc( node, i, j, 0, contour.closed );\n\t\t\t\trightSrc = autoExpandedNodeSrc( node, i, j, 1, contour.closed );\n\t\t\t\tnode.src.expandedTo = [ leftSrc, rightSrc ];\n\t\t\t\t_.assign( node.src, nodeSrc( node, i, j, !!'inSkeleton' ) );\n\n\t\t\t// the expanded node might have been defined explicitely\n\t\t\t} else if ( node.src.expandedTo[0] &&\n\t\t\t\t\t!node.src.expandedTo[0]._updaters ) {\n\t\t\t\tnode.src.expandedTo.forEach(function( src, k ) {\n\t\t\t\t\tUtils.mergeStatic( node.expandedTo[k], src );\n\t\t\t\t});\n\n\t\t\t\t// annotate nodes+points that are explicitely expanded\n\t\t\t\tleftSrc = _.assign( node.src.expandedTo[0],\n\t\t\t\t\texplicitExpandedNodeSrc( node, i, j, 0, contour.closed )\n\t\t\t\t);\n\t\t\t\trightSrc = _.assign( node.src.expandedTo[1],\n\t\t\t\t\texplicitExpandedNodeSrc( node, i, j, 1, contour.closed )\n\t\t\t\t);\n\n\t\t\t\t// A leaf shouldn't appear twice during the recursive\n\t\t\t\t// dependency-tree building. Make the expanded nodes accessible\n\t\t\t\t// from expanded contours, and provide accessors on the\n\t\t\t\t// .expandedFrom node.\n\t\t\t\t// leftNodesSrc.push( leftSrc );\n\t\t\t\t// rightNodesSrc.push( rightSrc );\n\t\t\t}\n\n\t\t\t// if ( leftSrc && rightSrc ) {\n\t\t\t// \tObject.defineProperties( node.src.expandedTo = {}, {\n\t\t\t// \t\t0: { get: function() {\n\t\t\t// \t\t\treturn leftSrc;\n\t\t\t// \t\t}},\n\t\t\t// \t\t1: { get: function() {\n\t\t\t// \t\t\t\treturn rightSrc;\n\t\t\t// \t\t}}\n\t\t\t// \t});\n\t\t\t// }\n\t\t});\n\n\t\tif ( !contour.expandedTo && !contour.closed ) {\n\t\t\tleftContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: leftNodes.concat(rightNodes)\n\t\t\t});\n\t\t\tcontour.expandedTo = [ leftContour ];\n\t\t\tcontour.src.expandedTo = [\n\t\t\t\texpandedContourSrc( leftContour, i\n\t\t\t\t\t//, 0, leftNodesSrc.concat( rightNodesSrc )\n\t\t\t\t)\n\t\t\t];\n\t\t\tleftContour.expandedFrom = contour;\n\t\t\tadditionalContours.push( leftContour );\n\n\t\t\tfirstNode = contour.firstNode;\n\t\t\tlastNode = contour.lastNode;\n\n\t\t\tfirstNode.type = 'corner';\n\t\t\tlastNode.type = 'corner';\n\n\t\t\tfirstNode.expandedTo[0].type = 'corner';\n\t\t\tfirstNode.expandedTo[1].type = 'corner';\n\t\t\tlastNode.expandedTo[0].type = 'corner';\n\t\t\tlastNode.expandedTo[1].type = 'corner';\n\n\t\t\tfirstNode.expandedTo[0].typeIn = 'line';\n\t\t\tfirstNode.expandedTo[1].typeOut = 'line';\n\t\t\tlastNode.expandedTo[0].typeOut = 'line';\n\t\t\tlastNode.expandedTo[1].typeIn = 'line';\n\n\t\t} else if ( !contour.expandedTo && contour.closed ) {\n\t\t\tleftContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: leftNodes\n\t\t\t});\n\t\t\tadditionalContours.push( leftContour );\n\t\t\trightContour = new paper.Path({\n\t\t\t\tclosed: true,\n\t\t\t\tsegments: rightNodes\n\t\t\t});\n\t\t\tadditionalContours.push( rightContour );\n\n\t\t\tcontour.expandedTo = [\n\t\t\t\tleftContour,\n\t\t\t\trightContour\n\t\t\t];\n\t\t\tcontour.src.expandedTo = [\n\t\t\t\texpandedContourSrc( leftContour, i, 0, leftNodesSrc ),\n\t\t\t\texpandedContourSrc( rightContour, i, 1, rightNodesSrc )\n\t\t\t];\n\t\t\tleftContour.expandedFrom = rightContour.expandedFrom = contour;\n\t\t}\n\t});\n\n\tglyph.addContours( additionalContours );\n};\n\n// Calculate expanded node position\nnaive.expandedNodeUpdater = function( node, isLeft, _width ) {\n\tvar origin = node.expandedFrom,\n\t\texpand = origin.expand,\n\t\twidth = expand && expand.width !== undefined ?\n\t\t\texpand.width : _width,\n\t\tcoef = expand && expand.distr !== undefined ?\n\t\t\t( isLeft ? expand.distr : 1 - expand.distr ) :\n\t\t\t0.5,\n\t\tangle = ( isLeft ? Math.PI : 0 ) +\n\t\t\t( expand && expand.angle !== undefined ?\n\t\t\t\texpand.angle :\n\t\t\t\t// We resort to using directions.\n\t\t\t\t// This is wrong, directions are not included in the\n\t\t\t\t// dependencies of the updater and might not be ready yet.\n\t\t\t\t// TODO: Fix this (always require angle to be specified?)\n\t\t\t\t( origin._dirOut !== undefined ?\n\t\t\t\t\torigin._dirOut - Math.PI / 2 :\n\t\t\t\t\torigin._dirIn + Math.PI / 2\n\t\t\t\t)\n\t\t\t);\n\n\t// position\n\tnode.point.x = origin.point.x + ( width * coef * Math.cos( angle ) );\n\tnode.point.y = origin.point.y + ( width * coef * Math.sin( angle ) );\n};\n\n// copy skeleton properties such as types, directions and tensions to expanded\n// nodes\nnaive.skeletonCopier = function( node ) {\n\tvar angle = node.expand && node.expand.angle || 0,\n\t\tleft = node.expandedTo[0],\n\t\tright = node.expandedTo[1];\n\n\t// node type\n\tif ( node.type !== undefined ) {\n\t\tleft.type = right.type = node.type;\n\t}\n\n\t// direction type\n\tif ( node.typeIn !== undefined ) {\n\t\tleft.typeIn = right.typeOut = node.typeIn;\n\t}\n\tif ( node.typeOut !== undefined ) {\n\t\tleft.typeOut = right.typeIn = node.typeOut;\n\t}\n\n\t// direction\n\tif ( node._dirIn !== undefined ) {\n\t\tleft._dirIn = right._dirOut = node._dirIn;\n\n\t\tif ( node.type === 'smooth' && node._dirOut === undefined ) {\n\t\t\tleft._dirOut = right._dirIn = node._dirIn + Math.PI;\n\t\t}\n\t}\n\tif ( node._dirOut !== undefined ) {\n\t\tleft._dirOut = right._dirIn = node._dirOut;\n\n\t\tif ( node.type === 'smooth' && node._dirIn === undefined ) {\n\t\t\tleft._dirIn = right._dirOut = node._dirOut + Math.PI;\n\t\t}\n\t}\n\t// use angle if direction isn't already defined\n\tif ( left._dirIn === undefined ) { // implies right._dirOut === undefined\n\t\tleft._dirIn = angle - Math.PI / 2;\n\t\tright._dirOut = angle + Math.PI / 2;\n\t}\n\tif ( left._dirOut === undefined ) { // implies right._dirIn === undefined\n\t\tleft._dirOut = angle + Math.PI / 2;\n\t\tright._dirIn = angle - Math.PI / 2;\n\t}\n\n\t// tension\n\tleft.tensionIn = right.tensionOut = node.tensionIn !== undefined ?\n\t\tnode.tensionIn :\n\t\t( node.tension !== undefined ? node.tension : 1 );\n\tleft.tensionOut = right.tensionIn = node.tensionOut !== undefined ?\n\t\tnode.tensionOut :\n\t\t( node.tension !== undefined ? node.tension : 1 );\n};\n\n// Make sure 'line' types are set on both side of segments\n// and if a smooth node is used in a straight segment, update the directions\n// appropriately this can only be done once the types, directions and position\n// of all nodes have been updated can be renamed #prepareLines if no other\n// operation is added\n// TODO: try doing it at the same time as updateContour (once we have more\n// complex glyphs)\nnaive.prepareContour = function( path ) {\n\tpath.nodes.forEach(function(node) {\n\t\tif ( node.typeIn === 'line' && node.previous ) {\n\t\t\tnode.previous.typeOut = 'line';\n\n\t\t\tif ( node.type === 'smooth' ) {\n\t\t\t\tnode._dirIn = Utils.lineAngle(\n\t\t\t\t\tnode.point, node.previous.point\n\t\t\t\t);\n\t\t\t\tnode._dirOut = node._dirIn + Math.PI;\n\t\t\t}\n\t\t}\n\n\t\tif ( node.typeOut === 'line' && node.next ) {\n\t\t\tnode.next.typeIn = 'line';\n\n\t\t\tif ( node.type === 'smooth' ) {\n\t\t\t\tnode._dirOut = Utils.lineAngle(\n\t\t\t\t\tnode.point, node.next.point\n\t\t\t\t);\n\t\t\t\tnode._dirIn = node._dirOut + Math.PI;\n\t\t\t}\n\t\t}\n\t});\n};\n\n// sets the position of control points\n// can be renamed #updateControls if no other operation is added\nnaive.updateContour = function( path, curviness ) {\n\tif ( curviness === undefined ) {\n\t\tcurviness = 2 / 3;\n\t}\n\n\tpath.nodes.forEach(function(node) {\n\t\tvar start = node,\n\t\t\tend,\n\t\t\tstartCtrl,\n\t\t\tendCtrl,\n\t\t\tstartType,\n\t\t\tendType,\n\t\t\tstartTension,\n\t\t\tendTension,\n\t\t\tstartDir,\n\t\t\tendDir,\n\t\t\trri;\n\n\t\tif ( !node.next ) {\n\t\t\treturn;\n\t\t}\n\n\t\tend = node.next;\n\t\tstartCtrl = start.handleOut;\n\t\tendCtrl = end.handleIn;\n\n\t\tstartType = start.typeOut;\n\t\tendType = end.typeIn;\n\n\t\tif ( startType === 'line' || endType === 'line' ) {\n\t\t\tstartCtrl.x = 0;\n\t\t\tstartCtrl.y = 0;\n\t\t\tendCtrl.x = 0;\n\t\t\tendCtrl.y = 0;\n\n\t\t\treturn;\n\t\t}\n\n\t\tstartTension = start.tensionOut !== undefined ?\n\t\t\tstart.tensionOut :\n\t\t\t( start.tension !== undefined ? start.tension : 1 );\n\t\tendTension = end.tensionIn !== undefined ?\n\t\t\tend.tensionIn :\n\t\t\t( end.tension !== undefined ? end.tension : 1 );\n\n\t\tstartDir = start._dirOut !== undefined ?\n\t\t\tstart._dirOut :\n\t\t\tstart.type === 'smooth' ? start._dirIn + Math.PI : 0;\n\t\tendDir = end._dirIn !== undefined ?\n\t\t\tend._dirIn :\n\t\t\tend.type === 'smooth' ? end._dirOut - Math.PI : 0;\n\n\t\trri = Utils.rayRayIntersection(\n\t\t\tstart._point,\n\t\t\tstartDir,\n\t\t\tend._point,\n\t\t\tendDir\n\t\t);\n\n\t\t// direction of handles is parallel\n\t\tif ( rri === null ) {\n\t\t\tvar angle = Utils.lineAngle( start._point, end._point ),\n\t\t\t\tmiddle = {\n\t\t\t\t\tx: ( end._point.x - start._point.x ) / 2 + start._point.x,\n\t\t\t\t\ty: ( end._point.y - start._point.y ) / 2 + start._point.y\n\t\t\t\t},\n\t\t\t\tp0 = Utils.rayRayIntersection(\n\t\t\t\t\tstart._point, startDir, middle, angle - Math.PI / 2\n\t\t\t\t),\n\t\t\t\tp1 = Utils.rayRayIntersection(\n\t\t\t\t\tmiddle, angle + Math.PI / 2, end._point, endDir\n\t\t\t\t);\n\n\t\t\tstartCtrl.x = ( Math.round(p0[0]) - start._point.x ) *\n\t\t\t\tcurviness * startTension;\n\t\t\tstartCtrl.y = ( Math.round(p0[1]) - start._point.y ) *\n\t\t\t\tcurviness * startTension;\n\t\t\tendCtrl.x = ( Math.round(p1[0]) - end._point.x ) *\n\t\t\t\tcurviness * endTension;\n\t\t\tendCtrl.y = ( Math.round(p1[1]) - end._point.y ) *\n\t\t\t\tcurviness * endTension;\n\n\t\t\treturn;\n\t\t}\n\n\t\tstartCtrl.x = ( Math.round(rri[0]) - start.point.x ) *\n\t\t\tcurviness * startTension;\n\t\tstartCtrl.y = ( Math.round(rri[1]) - start.point.y ) *\n\t\t\tcurviness * startTension;\n\t\tendCtrl.x = ( Math.round(rri[0]) - end.point.x ) *\n\t\t\tcurviness * endTension;\n\t\tendCtrl.y = ( Math.round(rri[1]) - end.point.y ) *\n\t\t\tcurviness * endTension;\n\t});\n};\n\nvar rdeg = /deg$/;\nObject.defineProperties(paper.PaperScope.prototype.Segment.prototype, {\n\texpand: {\n\t\tget: function() {\n\t\t\treturn this._expand;\n\t\t},\n\t\tset: function( expand ) {\n\t\t\tif ( typeof expand.angle === 'string' && rdeg.test(expand.angle) ) {\n\t\t\t\texpand.angle = parseFloat(expand.angle) * ( Math.PI * 2 / 360 );\n\t\t\t}\n\n\t\t\tthis._expand = expand;\n\t\t}\n\t},\n\tdirIn: {\n\t\tget: function() {\n\t\t\treturn this._dirIn;\n\t\t},\n\t\tset: function( dir ) {\n\t\t\tif ( typeof dir === 'string' && rdeg.test( dir ) ) {\n\t\t\t\tthis._dirIn = parseFloat(dir) * ( Math.PI * 2 / 360 );\n\t\t\t} else {\n\t\t\t\tthis._dirIn = dir;\n\t\t\t}\n\t\t}\n\t},\n\tdirOut: {\n\t\tget: function() {\n\t\t\treturn this._dirOut;\n\t\t},\n\t\tset: function( dir ) {\n\t\t\tif ( typeof dir === 'string' && rdeg.test( dir ) ) {\n\t\t\t\tthis._dirOut = parseFloat(dir) * ( Math.PI * 2 / 360 );\n\t\t\t} else {\n\t\t\t\tthis._dirOut = dir;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = naive;\n\n},{\"../node_modules/plumin.js/dist/plumin.js\":26,\"./Utils.js\":27,\"lodash.assign\":2}],29:[function(require,module,exports){\n/*jshint -W098 */\nvar plumin = require('../node_modules/plumin.js/dist/plumin.js'),\n\tUtils = require('./Utils.js'),\n\tnaive = require('./naive.js'),\n\tassign = require('lodash.assign');\n\nvar paper = plumin.paper,\n\t_ = { assign: assign };\n\nfunction parametricFont( src ) {\n\t// TODO: this, block is only here for backward compat\n\t// and should be removed at some point in the future\n\tif ( !src.fontinfo ) {\n\t\tsrc.fontinfo = src.info;\n\t}\n\n\tvar font = new paper.Font( src.fontinfo );\n\n\tfont.src = src;\n\n\tObject.keys( src.glyphs ).forEach(function( name ) {\n\t\tvar glyphSrc = src.glyphs[name];\n\n\t\tUtils.ufoToPaper( glyphSrc );\n\n\t\t// turn ._operation strings to ._updaters functions\n\t\tUtils.createUpdaters( glyphSrc, 'glyphs/glyph_' + name );\n\n\t\tvar glyph = Utils.glyphFromSrc( glyphSrc, src, naive );\n\n\t\tfont.addGlyph( glyph );\n\n\t\t// Create additional paths for skeletons and set ._dependencies\n\t\t// appropriately\n\t\tnaive.annotator( glyph );\n\n\t\t// solvingOrder might be already available (if this is a subcomponent,\n\t\t// or precomputed in a worker)\n\t\tif ( !glyph.solvingOrder ) {\n\t\t\tglyph.solvingOrder = glyphSrc.solvingOrder =\n\t\t\t\tUtils.solveDependencyTree( glyph );\n\t\t}\n\t});\n\n\t// all glyphs are ready, embed components now\n\tfont.glyphs.forEach(function( _glyph ) {\n\t\tif ( _glyph.embedComponents ) {\n\t\t\t_glyph.embedComponents();\n\t\t}\n\t});\n\n\treturn font;\n}\n\nplumin.parametricFont = parametricFont;\nplumin.Utils = Utils;\nplumin.Utils.naive = naive;\n\npaper.PaperScope.prototype.Font.prototype.update = function( params, set ) {\n\treturn this.getGlyphSubset( set ).map(function( glyph ) {\n\t\treturn glyph.update( params );\n\t}, this);\n};\n\n/* Update the shape of the glyph, according to formula and parameters\n * 0. before running, nodes have already been created by ParametricFont\n *   (including expanded ones thanks to naive.expandSkeletons). And static\n *   properties have been copied over to those nodes\n * 1. We use the solving order to calculate all node properties\n * 2. transform contours\n * 3. Update components and transform them\n */\npaper.PaperScope.prototype.Glyph.prototype.update = function( _params ) {\n\tvar glyph = this,\n\t\tfont = glyph.parent,\n\t\tmatrix,\n\t\tparams;\n\n\t// 0. calculate local parameters\n\tparams = _.assign( {}, _params, glyph.parentParameters );\n\n\tObject.keys( ( glyph.src && glyph.src.parameters ) || [] )\n\t\t.forEach(function( name ) {\n\t\t\tvar src = glyph.src.parameters[name];\n\n\t\t\tif ( src._updaters ) {\n\t\t\t\tparams[name] = src._updaters[0].apply( null, [\n\t\t\t\t\tname, [], [], glyph.parentAnchors, Utils\n\t\t\t\t].concat(\n\t\t\t\t\t( src._parameters || [] ).map(function(_name) {\n\t\t\t\t\t\treturn params[_name];\n\t\t\t\t\t})\n\t\t\t\t));\n\t\t\t}\n\t\t});\n\n\t// 1. calculate node properties\n\t( glyph.solvingOrder || [] ).forEach(function(cursor) {\n\t\tvar propName = cursor[ cursor.length - 1 ],\n\t\t\tsrc = Utils.propFromCursor( cursor, glyph.src ),\n\t\t\tobj = Utils.propFromCursor( cursor, glyph, cursor.length - 1 ),\n\t\t\t// TODO: one day we could allow multiple _updaters\n\t\t\tresult = src && src._updaters && src._updaters[0].apply( obj, [\n\t\t\t\t\tpropName, glyph.contours, glyph.anchors,\n\t\t\t\t\tglyph.parentAnchors, Utils\n\t\t\t\t].concat(\n\t\t\t\t\t( src._parameters || [] ).map(function(_name) {\n\t\t\t\t\t\treturn params[_name];\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\n\t\t// Assume that updaters returning undefined have their own\n\t\t// assignment logic\n\t\tif ( result !== undefined ) {\n\t\t\tobj[propName] = result;\n\t\t}\n\t}, this);\n\n\t// 2. transform contours\n\tthis.contours.forEach(function(contour) {\n\t\t// a. transform the nodes\n\t\tcontour.nodes.forEach(function(node) {\n\t\t\tif ( node.transforms ) {\n\t\t\t\tmatrix = Utils.transformsToMatrix(\n\t\t\t\t\tnode.transforms.slice(0), node.transformOrigin\n\t\t\t\t);\n\n\t\t\t\tif ( contour.skeleton !== true ) {\n\t\t\t\t\t// We don't want to apply the transforms immediatly,\n\t\t\t\t\t// otherwise the transformation will add-up on each\n\t\t\t\t\t// update.\n\t\t\t\t\tnode.applyMatrix = false;\n\t\t\t\t\tnode.matrix = matrix;\n\n\t\t\t\t// when dealing with a skeleton, modify only the matrix of\n\t\t\t\t// expanded items\n\t\t\t\t} else {\n\t\t\t\t\tnode.expandedTo.forEach(function( _node ) {\n\t\t\t\t\t\t_node.applyMatrix = false;\n\t\t\t\t\t\t_node.matrix = matrix;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// b. transform the contour\n\t\t// prepare and update outlines and expanded contours, but not\n\t\t// skeletons\n\t\tif ( contour.transforms ) {\n\t\t\tmatrix = Utils.transformsToMatrix(\n\t\t\t\tcontour.transforms.slice(0), contour.transformOrigin\n\t\t\t);\n\n\t\t\tif ( contour.skeleton !== true ) {\n\t\t\t\tcontour.applyMatrix = false;\n\t\t\t\tcontour.matrix = matrix;\n\n\t\t\t// when dealing with a skeleton, modify only the matrix of\n\t\t\t// expanded items\n\t\t\t} else {\n\t\t\t\tcontour.expandedTo.forEach(function( _contour ) {\n\t\t\t\t\t_contour.applyMatrix = false;\n\t\t\t\t\t_contour.matrix = matrix;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, this);\n\n\t// 3. update components and transform components\n\tif ( this.components.length && font ) {\n\t\t// subcomponents have the parent component as their parent\n\t\t// so search for the font\n\t\twhile ( !('glyphs' in font) ) {\n\t\t\tfont = font.parent;\n\t\t}\n\n\t\tthis.components.forEach(function(component) {\n\t\t\tcomponent.update( params );\n\n\t\t\tif ( component.transforms ) {\n\t\t\t\tmatrix = Utils.transformsToMatrix(\n\t\t\t\t\tcomponent.transforms.slice(0), component.transformOrigin\n\t\t\t\t);\n\n\t\t\t\tcomponent.applyMatrix = false;\n\t\t\t\tcomponent.matrix = matrix;\n\t\t\t}\n\t\t}, this);\n\t}\n\n\t// 4. transform whole glyph\n\tif ( glyph.transforms ) {\n\t\tmatrix = Utils.transformsToMatrix(\n\t\t\tglyph.transforms.slice(0), glyph.transformOrigin\n\t\t);\n\n\t\tglyph.applyMatrix = false;\n\t\tglyph.matrix = matrix;\n\t}\n\n\treturn this;\n};\n\n// Before updating SVG or OpenType data, we must determine paths exports\n// directions. Basically, everything needs to be clockwise.\n// this method needs to be called only after the first update\npaper.PaperScope.prototype.Outline.prototype.prepareDataUpdate = function() {\n\tthis.children.forEach(function(contour) {\n\t\t// expanded contours are handled from their skeleton\n\t\tif ( contour.expandedFrom ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( contour.skeleton !== true ) {\n\t\t\tcontour.export = 'clockwise';\n\n\t\t} else {\n\t\t\tcontour.expandedTo[0].export = 'clockwise';\n\n\t\t\tif ( contour.expandedTo[1] ) {\n\t\t\t\tcontour.expandedTo[0].export = contour.clockwise ?\n\t\t\t\t\t'clockwise' :\n\t\t\t\t\t'anticlockwise';\n\n\t\t\t\tcontour.expandedTo[1].export = contour.clockwise ?\n\t\t\t\t\t'anticlockwise' :\n\t\t\t\t\t'clockwise';\n\t\t\t}\n\t\t}\n\t});\n};\n\nvar updateSVGData =\n\t\tpaper.PaperScope.prototype.Outline.prototype.updateSVGData,\n\tupdateOTCommands =\n\t\tpaper.PaperScope.prototype.Outline.prototype.updateOTCommands;\n\npaper.PaperScope.prototype.Outline.prototype.updateSVGData = function() {\n\tif ( !this.isPrepared ) {\n\t\tthis.prepareDataUpdate();\n\t\tthis.isPrepared = true;\n\t}\n\n\tupdateSVGData.apply( this, arguments );\n};\n\npaper.PaperScope.prototype.Outline.prototype.updateOTCommands = function() {\n\tif ( !this.isPrepared ) {\n\t\tthis.prepareDataUpdate();\n\t\tthis.isPrepared = true;\n\t}\n\n\tupdateOTCommands.apply( this, arguments );\n};\n\nmodule.exports = plumin;\n\n},{\"../node_modules/plumin.js/dist/plumin.js\":26,\"./Utils.js\":27,\"./naive.js\":28,\"lodash.assign\":2}],30:[function(require,module,exports){\nvar Utils = {};\n\n// The following function should be useless, thanks to paper\nUtils.lineLineIntersection = function( p1, p2, p3, p4 ) {\n\tvar x1 = p1.x,\n\t\ty1 = p1.y,\n\t\tx2 = p2.x,\n\t\ty2 = p2.y,\n\t\tx3 = p3.x,\n\t\ty3 = p3.y,\n\t\tx4 = p4.x,\n\t\ty4 = p4.y,\n\t\td = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n\tif ( d === 0 ) {\n\t\treturn null;\n\t}\n\n\treturn new Float32Array([\n\t\t( (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4) ) /\n\t\td,\n\t\t( (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4) ) /\n\t\td\n\t]);\n};\n\n// Find the intersection of two rays.\n// A ray is defined by a point and an angle.\nUtils.rayRayIntersection = function( p1, a1, p2, a2 ) {\n\t// line equations\n\tvar a = Math.tan(a1),\n\t\tb = Math.tan(a2),\n\t\tc = p1.y - a * p1.x,\n\t\td = p2.y - b * p2.x,\n\t\tx,\n\t\ty;\n\n\t// When searching for lines intersection,\n\t// angles can be normalized to 0 < a < PI\n\t// This will be helpful in detecting special cases below.\n\ta1 = a1 % Math.PI;\n\tif ( a1 < 0 ) {\n\t\ta1 += Math.PI;\n\t}\n\ta2 = a2 % Math.PI;\n\tif ( a2 < 0 ) {\n\t\ta2 += Math.PI;\n\t}\n\n\t// no intersection\n\tif ( a1 === a2 ) {\n\t\treturn null;\n\t}\n\n\t// Optimize frequent and easy special cases.\n\t// Without optimization, results would be incorrect when cos(a) === 0\n\tif ( a1 === 0 ) {\n\t\ty = p1.y;\n\t} else if ( a1 === Math.PI / 2 ) {\n\t\tx = p1.x;\n\t}\n\tif ( a2 === 0 ) {\n\t\ty = p2.y;\n\t} else if ( a2 === Math.PI / 2 ) {\n\t\tx = p2.x;\n\t}\n\n\t// easiest case\n\tif ( x !== undefined && y !== undefined ) {\n\t\treturn new Float32Array([ x, y ]);\n\t}\n\n\t// other cases that can be optimized\n\tif ( a1 === 0 ) {\n\t\treturn new Float32Array([ ( y - d ) / b, y ]);\n\t}\n\tif ( a1 === Math.PI / 2 ) {\n\t\treturn new Float32Array([ x, b * x + d ]);\n\t}\n\tif ( a2 === 0 ) {\n\t\treturn new Float32Array([ ( y - c ) / a, y ]);\n\t}\n\tif ( a2 === Math.PI / 2 ) {\n\t\treturn new Float32Array([ x, a * x + c ]);\n\t}\n\n\t// intersection from two line equations\n\t// algo: http://en.wikipedia.org/wiki/Line–line_intersection#Given_the_equations_of_the_lines\n\treturn new Float32Array([\n\t\tx = (d - c) / (a - b),\n\t\t// this should work equally well with ax+c or bx+d\n\t\ta * x + c\n\t]);\n};\n\n// return the angle between two points\nUtils.lineAngle = function( p0, p1 ) {\n\treturn Math.atan2( p1.y - p0.y, p1.x - p0.x );\n};\n\nUtils.onLine = function( params ) {\n\tvar origin = params.on[0],\n\t\tvector = [\n\t\t\tparams.on[1].x - params.on[0].x,\n\t\t\tparams.on[1].y - params.on[0].y\n\t\t];\n\n\treturn 'x' in params ?\n\t\t( params.x - origin.x ) / vector[0] * vector[1] + origin.y :\n\t\t( params.y - origin.y ) / vector[1] * vector[0] + origin.x;\n};\n\nUtils.log = function() {\n\tconsole.log.apply( console, arguments );\n\treturn arguments[0];\n};\n\nmodule.exports = Utils;\n\n},{}]},{},[29])(29)\n});\n\n\n//# sourceMappingURL=prototypo.js.map","// Path#_selectedSegmentState is the addition of all segment's states, and is\n// compared with SelectionState.SEGMENT, the combination of all SelectionStates\n// to see if all segments are fully selected.\nvar SelectionState = {\n\t\tHANDLE_IN: 1,\n\t\tHANDLE_OUT: 2,\n\t\tPOINT: 4,\n\t\tSEGMENT: 7 // HANDLE_IN | HANDLE_OUT | POINT\n\t},\n\tworldCoords = new Float32Array(6),\n\tviewCoords = new Float32Array(6);\n\nfunction drawHandles(ctx, segments, matrix, settings, zoom) {\n\tvar size = settings.handleSize,\n\t\thalf = size / 2,\n\t\tpX,\n\t\tpY;\n\n\tfunction drawHandle(j) {\n\t\tvar hX = Math.round( viewCoords[j] ),\n\t\t\thY = Math.round( viewCoords[j + 1] ),\n\t\t\ttext;\n\n\t\tif ( viewCoords[0] !== viewCoords[j] ||\n\t\t\t\tviewCoords[1] !== viewCoords[j + 1]) {\n\n\t\t\tctx.beginPath();\n\t\t\tctx.strokeStyle = settings.handleColor;\n\t\t\tctx.fillStyle = settings.handleColor;\n\t\t\tctx.moveTo(pX, pY);\n\t\t\tctx.lineTo(hX, hY);\n\t\t\tctx.stroke();\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\tctx.fill();\n\n\t\t\tif ( settings.drawCoords ) {\n\t\t\t\ttext = Math.round( worldCoords[j] ) + ',' +\n\t\t\t\t\tMath.round( worldCoords[j + 1] );\n\n\t\t\t\t// use alpha to reduce the clutter caused by all this text when\n\t\t\t\t// zooming out\n\t\t\t\tif ( zoom < 1.7 ) {\n\t\t\t\t\tctx.globalAlpha = 0.2;\n\t\t\t\t} else if ( zoom < 3 ) {\n\t\t\t\t\tctx.globalAlpha = 0.4;\n\t\t\t\t}\n\t\t\t\tctx.fillText(\n\t\t\t\t\ttext,\n\t\t\t\t\thX - half - 3 - ctx.measureText(text).width,\n\t\t\t\t\t// The text is slightly above the marker. This avoids\n\t\t\t\t\t// overlapping when the handle vector is horizontal, which\n\t\t\t\t\t// is quite a frequent case.\n\t\t\t\t\thY - 2\n\t\t\t\t);\n\t\t\t\tif ( zoom < 3 ) {\n\t\t\t\t\tctx.globalAlpha = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\tvar segment = segments[i];\n\t\tsegment._transformCoordinates(null, worldCoords, false);\n\t\tsegment._transformCoordinates(matrix, viewCoords, false);\n\t\tvar state = segment._selectionState;\n\t\tpX = Math.round( viewCoords[0] );\n\t\tpY = Math.round( viewCoords[1] );\n\t\tif ( state & /*#=*/ SelectionState.HANDLE_IN ) {\n\t\t\tdrawHandle(2);\n\t\t}\n\t\tif ( state & /*#=*/ SelectionState.HANDLE_OUT ) {\n\t\t\tdrawHandle(4);\n\t\t}\n\t\t// Draw a rectangle at segment.point:\n\t\tctx.fillStyle = settings.nodeColor;\n\t\tctx.fillRect( pX - half, pY - half, size, size );\n\t\tctx.font = settings.handleFont;\n\n\t\tif ( settings.drawCoords ) {\n\t\t\tif ( zoom < 1.7 ) {\n\t\t\t\tctx.globalAlpha = 0.4;\n\t\t\t}\n\t\t\tctx.fillText(\n\t\t\t\tMath.round( worldCoords[0] ) + ',' +\n\t\t\t\tMath.round( worldCoords[1] ),\n\t\t\t\tpX + half + 5,\n\t\t\t\tpY - 2\n\t\t\t);\n\t\t\tif ( zoom < 1.7 ) {\n\t\t\t\tctx.globalAlpha = 1;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction _drawSelected( ctx, matrix ) {\n\tctx.beginPath();\n\t// Now stroke it and draw its handles:\n\tctx.stroke();\n\tdrawHandles(\n\t\tctx,\n\t\tthis._segments,\n\t\tmatrix,\n\t\tthis._project._scope.settings,\n\t\tthis._project._view._zoom\n\t);\n}\n\nmodule.exports = { _drawSelected: _drawSelected };\n","var shell = require('./worker'),\n\tassign = require('es6-object-assign').assign;\n\nvar _ = { assign: assign },\n\tURL = global.URL || global.webkitURL;\n\nfunction load( opts ) {\n\tvar PrototypoCanvas = this;\n\n\topts = _.assign({\n\t\tfontUrl: 'font.json',\n\t\tprototypoUrl: 'prototypo.js'\n\t}, opts);\n\n\t// if the sources are provided\n\treturn Promise.all([\n\t\t!opts.fontSource && opts.fontUrl,\n\t\t!opts.prototypoSource && opts.prototypoUrl\n\t].map(function( url ) {\n\t\t// only fetch the resources if we have just the url, not the source\n\t\treturn url && fetch( url );\n\n\t})).then(function( results ) {\n\t\t// parse fetched resources\n\t\treturn Promise.all([\n\t\t\tresults[0] && results[0].text(),\n\t\t\tresults[1] && results[1].text()\n\t\t]);\n\n\t}).then(function( results ) {\n\t\tif ( results[0] ) {\n\t\t\topts.fontSource = results[0];\n\t\t}\n\t\tif ( results[1] ) {\n\t\t\topts.prototypoSource = results[1];\n\t\t}\n\n\t\topts.fontObj = JSON.parse( opts.fontSource );\n\t\t// the worker can be created by specifying the URL of the complete\n\t\t// file (dev environment), or by creating\n\t\tif ( opts.workerUrl ) {\n\t\t\t// The search fragment of workerUrl must include prototypo.js URL\n\t\t\topts.workerUrl +=\n\t\t\t\t'?bundleurl=' + encodeURIComponent( opts.prototypoUrl );\n\t\t} else {\n\t\t\topts.workerUrl = URL.createObjectURL(\n\t\t\t\tnew Blob([\n\t\t\t\t\topts.prototypoSource + ';\\n\\n' +\n\t\t\t\t\t// IIFE power\n\t\t\t\t\t'(' + shell.toString() + ')();' +\n\t\t\t\t\t// For some reason [object Object] is appended to the source\n\t\t\t\t\t// by Firefox when the worker is created, which causes the\n\t\t\t\t\t// script to throw without the following comment.\n\t\t\t\t\t'//',\n\t\t\t\t\t{ type: 'text/javascript' }\n\t\t\t\t])\n\t\t\t);\n\t\t}\n\n\t\t// create the worker\n\t\treturn new Promise(function( resolve ) {\n\t\t\tvar worker = new Worker( opts.workerUrl );\n\n\t\t\tworker.onmessage = function(e) {\n\t\t\t\t// load the font\n\t\t\t\tif ( e.data.type === 'ready' ) {\n\t\t\t\t\tworker.postMessage({\n\t\t\t\t\t\ttype: 'font',\n\t\t\t\t\t\tdata: opts.fontSource\n\t\t\t\t\t});\n\n\t\t\t\t// reuse the solvingOrders computed in the worker (this is a\n\t\t\t\t// fairly heavy operation, better doing it only once,\n\t\t\t\t// asynchronously)\n\t\t\t\t} else if ( e.data.type === 'solvingOrders' ) {\n\t\t\t\t\topts.worker = worker;\n\t\t\t\t\t// merge solvingOrders with the source\n\t\t\t\t\tObject.keys( e.data.data ).forEach(function(key) {\n\t\t\t\t\t\tif ( e.data.data[key] ) {\n\t\t\t\t\t\t\topts.fontObj.glyphs[key].solvingOrder =\n\t\t\t\t\t\t\t\te.data.data[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t// We're done with the asynchronous stuff!\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t}).then(function() {\n\t\treturn new PrototypoCanvas( opts );\n\t});\n}\n\nmodule.exports = load;\n","// we need the explicit path for Prototypo, since we use browserify-shim\nvar prototypo = require('../node_modules/prototypo.js'),\n\tassign = require('es6-object-assign').assign,\n\t// Grid = require('./grid'),\n\t_drawSelected = require('./drawNodes')._drawSelected,\n\tload = require('./load');\n\nvar _ = { assign: assign },\n\tpaper = prototypo.paper;\n\n// handles buffers coming from the worker\nfunction fontBufferHandler(e) {\n\t// prevent the worker to be stuck with a busy flag if this method throws\n\tthis.isWorkerBusy = false;\n\n\tif ( !(e.data instanceof ArrayBuffer) ) {\n\t\treturn;\n\t}\n\n\tthis.latestBuffer = e.data;\n\tthis.font.addToFonts( e.data );\n\n\t// process latest Values\n\tif ( this.latestWorkerValues ) {\n\t\tthis.isWorkerBusy = true;\n\t\tthis.worker.postMessage({\n\t\t\ttype: 'update',\n\t\t\tdata: this.latestWorkerValues\n\t\t});\n\n\t\tdelete this.latestWorkerValues;\n\n\t} else if ( this.latestSubset ) {\n\t\tthis.isWorkerBusy = true;\n\t\tthis.worker.postMessage({\n\t\t\ttype: 'subset',\n\t\t\tdata: this.latestSubset\n\t\t});\n\n\t\tdelete this.latestSubset;\n\t}\n}\n\n// constructor\nfunction PrototypoCanvas( opts ) {\n\tpaper.setup( opts.canvas );\n\t// enable pointerevents on the canvas\n\topts.canvas.setAttribute('touch-action', 'none');\n\n\tthis.opts = _.assign({\n\t\tfill: true,\n\t\tshoNodes: false,\n\t\tzoomFactor: 0.05,\n\t\tjQueryListeners: true\n\t}, opts);\n\n\tthis.canvas = opts.canvas;\n\tthis.view = paper.view;\n\tthis.view.center = [ 0, 0 ];\n\tthis.project = paper.project;\n\tthis.project.activeLayer.applyMatrix = false;\n\tthis.project.activeLayer.scale( 1, -1 );\n\tthis.worker = opts.worker;\n\tthis._fill = this.opts.fill;\n\tthis._showNodes = this.opts.showNodes;\n\n\t// this.grid = new Grid( paper );\n\n\tthis.font = prototypo.parametricFont( opts.fontObj );\n\tthis.isMousedown = false;\n\n\tthis.worker.onmessage = fontBufferHandler.bind(this);\n\n\t// jQuery is an optional dependency\n\tif ( ( 'jQuery' in window ) && this.opts.jQueryListeners ) {\n\t\tvar $ = window.jQuery,\n\t\t\ttype = ( 'PointerEventsPolyfill' in window ) ||\n\t\t\t\t( 'PointerEvent' in window ) ? 'pointer' : 'mouse';\n\n\t\t$(opts.canvas).on( 'wheel', this.wheelHandler.bind(this) );\n\n\t\t$(opts.canvas).on( type + 'move', this.moveHandler.bind(this) );\n\n\t\t$(opts.canvas).on( type + 'down', this.downHandler.bind(this) );\n\n\t\t$(document).on( type + 'up', this.upHandler.bind(this) );\n\t}\n\n\tvar raf = window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame,\n\t\tupdateLoop = function() {\n\t\t\traf(updateLoop);\n\n\t\t\tif ( !this.latestRafValues || !this.currGlyph ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.currGlyph.update( this.latestRafValues );\n\t\t\tthis.view.update();\n\t\t\tdelete this.latestRafValues;\n\n\t\t}.bind(this);\n\tupdateLoop();\n}\n\nObject.defineProperties( PrototypoCanvas.prototype, {\n\tzoom: {\n\t\tget: function() {\n\t\t\treturn this.view.zoom;\n\t\t},\n\t\tset: function( zoom ) {\n\t\t\tthis.view.zoom = zoom;\n\t\t\t// this.grid.zoom = zoom;\n\t\t}\n\t},\n\tfill: {\n\t\tget: function() {\n\t\t\treturn this._fill;\n\t\t},\n\t\tset: function( bool ) {\n\t\t\tthis._fill = bool;\n\t\t\tthis.displayGlyph();\n\t\t}\n\t},\n\tshowNodes: {\n\t\tget: function() {\n\t\t\treturn this._showNodes;\n\t\t},\n\t\tset: function( bool ) {\n\t\t\tthis._showNodes = bool;\n\t\t\tthis.displayGlyph();\n\t\t}\n\t},\n\tshowCoords: {\n\t\tget: function() {\n\t\t\treturn paper.settings.drawCoords;\n\t\t},\n\t\tset: function( bool ) {\n\t\t\tpaper.settings.drawCoords = bool;\n\t\t\tthis.displayGlyph();\n\t\t}\n\t},\n\tsubset: {\n\t\tget: function() {\n\t\t\treturn this.font.subset;\n\t\t},\n\t\tset: function( set ) {\n\t\t\tif ( !this.isWorkerBusy ) {\n\t\t\t\tif ( this.currSubset !== undefined ) {\n\t\t\t\t\t// block updates\n\t\t\t\t\tthis.isWorkerBusy = true;\n\t\t\t\t}\n\n\t\t\t\tthis.worker.postMessage({\n\t\t\t\t\ttype: 'subset',\n\t\t\t\t\tdata: set\n\t\t\t\t});\n\n\t\t\t// if the worker is already busy, store the latest values so that we\n\t\t\t// can eventually update the font with the latest values\n\t\t\t} else {\n\t\t\t\tthis.latestSubset = set;\n\t\t\t}\n\n\t\t\tthis.font.subset = this.currSubset = set;\n\t\t}\n\t}\n});\n\nPrototypoCanvas.prototype.wheelHandler = function( event ) {\n\tvar bcr = this.canvas.getBoundingClientRect(),\n\t\tcurrPos = new paper.Point(\n\t\t\tevent.clientX - bcr.left,\n\t\t\tevent.clientY - bcr.top\n\t\t),\n\t\tviewPos = this.view.viewToProject( currPos ),\n\t\t// normalize the deltaY value. Expected values are ~40 pixels or 3 lines\n\t\tfactor = 1 + ( this.opts.zoomFactor *\n\t\t\t( Math.abs( event.deltaY / event.deltaMode ? 3 : 40 * 20 ) ) ),\n\t\tnewZoom =\n\t\t\tevent.deltaY < 0 ?\n\t\t\t\tthis.view.zoom * factor :\n\t\t\t\tevent.deltaY > 0 ?\n\t\t\t\t\tthis.view.zoom / factor :\n\t\t\t\t\tthis.view.zoom,\n\t\tbeta = this.view.zoom / newZoom,\n\t\tdifference = viewPos.subtract( this.view.center ),\n\t\tnewCenter = viewPos.subtract( difference.multiply(beta) );\n\n\tthis.zoom = newZoom;\n\tthis.view.center = newCenter;\n\n\tevent.preventDefault();\n};\n\nPrototypoCanvas.prototype.moveHandler = function(event) {\n\tif ( !this.isMousedown ) {\n\t\treturn;\n\t}\n\n\tvar currPos = new paper.Point( event.clientX, event.clientY ),\n\t\tdelta = currPos.subtract( this.prevPos );\n\n\tthis.prevPos = currPos;\n\n\tthis.view.center = this.view.center.subtract(\n\t\t\tdelta.divide( this.view.zoom ) );\n};\n\nPrototypoCanvas.prototype.downHandler = function(event) {\n\tif (event.button && event.button !== 0) {\n\t\treturn;\n\t}\n\n\tthis.isMousedown = true;\n\tthis.prevPos = new paper.Point( event.clientX, event.clientY );\n};\n\nPrototypoCanvas.prototype.upHandler = function() {\n\tthis.isMousedown = false;\n};\n\nPrototypoCanvas.prototype.zoomIn = function() {\n\tthis.zoom = this.view.zoom * 1 + this.opts.zoomFactor;\n};\n\nPrototypoCanvas.prototype.zoomOut = function() {\n\tthis.zoom = this.view.zoom / 1 + this.opts.zoomFactor;\n};\n\nPrototypoCanvas.prototype.displayGlyph = function( _glyph ) {\n\tvar glyph =\n\t\t\t// no glyph means we're switching fill mode for the current glyph\n\t\t\t_glyph === undefined ? this.currGlyph :\n\t\t\t// accept glyph name and glyph object\n\t\t\ttypeof _glyph === 'string' ? this.font.glyphMap[_glyph] :\n\t\t\t_glyph;\n\n\tif ( glyph === undefined ) {\n\t\treturn;\n\t}\n\n\t// hide previous glyph\n\tif ( this.currGlyph && this.currGlyph !== glyph ) {\n\t\tthis.currGlyph.visible = false;\n\t\tthis.currGlyph.components.forEach(function(component) {\n\t\t\tcomponent.visible = false;\n\t\t}, this);\n\t}\n\n\tthis.currGlyph = glyph;\n\n\t// make sure the glyph is up-to-update\n\tif ( _glyph && this.latestValues ) {\n\t\tthis.currGlyph.update( this.latestValues );\n\t}\n\n\t// .. and show it\n\tthis.currGlyph.visible = true;\n\n\tif ( this._fill ) {\n\t\tthis.currGlyph.fillColor = '#333333';\n\t\tthis.currGlyph.strokeWidth = 0;\n\t} else {\n\t\tthis.currGlyph.fillColor = null;\n\t\tthis.currGlyph.strokeWidth = 1;\n\t}\n\n\tthis.currGlyph.contours.forEach(function(contour) {\n\t\tcontour.fullySelected = this._showNodes && !contour.skeleton;\n\t}, this);\n\n\tthis.currGlyph.components.forEach(function(component) {\n\t\tcomponent.visible = true;\n\t\tcomponent.contours.forEach(function(contour) {\n\t\t\tcontour.fullySelected = this._showNodes && !contour.skeleton;\n\t\t}, this);\n\t}, this);\n\n\tthis.view._project._needsUpdate = true;\n\tthis.view.update();\n};\n\nPrototypoCanvas.prototype.displayChar = function( code ) {\n\tthis.displayGlyph( typeof code === 'string' ?\n\t\tthis.font.charMap[ code.charCodeAt(0) ] : code\n\t);\n};\n\nPrototypoCanvas.prototype.update = function( values ) {\n\t// latestValues are used in displayGlyph\n\t// latestWorkerValues is used and disposed by the fontBufferHandler\n\t// latestRafValues is used and disposed by the raf loop\n\t// so we need all three!\n\tthis.latestValues = this.latestRafValues = values;\n\n\tif ( !this.isWorkerBusy ) {\n\t\t// block updates\n\t\tthis.isWorkerBusy = true;\n\n\t\tthis.worker.postMessage({\n\t\t\ttype: 'update',\n\t\t\tdata: values\n\t\t});\n\n\t// if the worker is already busy, store the latest values so that we can\n\t// eventually update the font with the latest values\n\t} else {\n\t\tthis.latestWorkerValues = values;\n\t}\n};\n\nPrototypoCanvas.prototype.download = function() {\n\tif ( !this.latestBuffer ) {\n\t\t// the UI should wait for the first update to happen before allowing\n\t\t// the download button to be clicked\n\t\treturn;\n\t}\n\n\tthis.font.download( this.latestBuffer );\n};\n\nPrototypoCanvas.load = load;\n\npaper.PaperScope.prototype.Path.prototype._drawSelected = _drawSelected;\n_.assign( paper.settings, {\n\thandleSize: 6,\n\thandleColor: '#FF725E',\n\tnodeColor: '#00C4D6',\n\tdrawCoords: false,\n\thandleFont: '12px monospace'\n});\n\nmodule.exports = PrototypoCanvas;\n","if ( !global && 'importScripts' in self ) {\n\t// When the worker is loaded by URL, the search fragment must include\n\t// the URL of prototypo.js\n\tself.importScripts( decodeURIComponent(\n\t\tself.location.search.replace(/(\\?|&)bundleurl=(.*?)(&|$)/, '$2')\n\t) );\n}\n\nfunction worker() {\n\tvar font,\n\t\thandlers = {},\n\t\tcurrValues,\n\t\tcurrSubset = [];\n\n\tself.postMessage({ type: 'ready' });\n\n\tprototypo.paper.setup({\n\t\twidth: 1024,\n\t\theight: 1024\n\t});\n\n\t// Overwrite addToFonts to send the buffer over to the UI\n\tprototypo.paper.Font.prototype.addToFonts = function() {\n\t\tvar buffer = this.ot.toBuffer();\n\t\tself.postMessage( buffer, [ buffer ] );\n\t};\n\n\t// mini router\n\tself.onmessage = function(e) {\n\t\thandlers[ e.data.type ]( e.data.data );\n\t};\n\n\thandlers.font = function( fontSource ) {\n\t\tfont = prototypo.parametricFont( JSON.parse( fontSource ) );\n\t\tvar solvingOrders = {};\n\t\tObject.keys( font.glyphMap ).forEach(function(key) {\n\t\t\tsolvingOrders[key] = font.glyphMap[key].solvingOrder;\n\t\t});\n\n\t\tself.postMessage({\n\t\t\ttype: 'solvingOrders',\n\t\t\tdata: solvingOrders\n\t\t});\n\t};\n\n\thandlers.update = function( params ) {\n\t\tcurrValues = params;\n\t\t// invalidate the previous subset\n\t\tcurrSubset = [];\n\n\t\tfont.update( params );\n\n\t\tfont.updateOTCommands()\n\t\t\t.addToFonts();\n\t};\n\n\thandlers.subset = function( set ) {\n\t\tvar prevGlyphs = currSubset.map(function( glyph ) {\n\t\t\treturn glyph.name;\n\t\t});\n\t\tfont.subset = set;\n\t\tcurrSubset = font.subset;\n\n\t\t// search for glyphs *added* to the subset\n\t\tcurrSubset.filter(function( glyph ) {\n\t\t\treturn prevGlyphs.indexOf( glyph.name ) === -1;\n\n\t\t// update those glyphs\n\t\t}).forEach(function( glyph ) {\n\t\t\tglyph.update( currValues );\n\t\t\tglyph.updateOTCommands();\n\t\t});\n\n\t\t// Recreate the correct font.ot.glyphs array, without touching the ot\n\t\t// commands\n\t\tfont.updateOTCommands([]);\n\t\tfont.addToFonts();\n\t};\n}\n\n// When the worker is loaded from URL, worker() needs to be called explicitely\nif ( !global && 'importScripts' in self ) {\n\tworker();\n} else {\n\tmodule.exports = worker;\n}\n"]}