{"version":3,"file":"generated.js","sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/es6-object-assign/src/index.js","src/prototypo-canvas.js","src/utils/glyph.js","src/utils/init.js","src/utils/loadFont.js","src/utils/mouseHandlers.js","src/worker.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","PrototypoCanvas","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"assign","target","firstSource","undefined","TypeError","to","Object","arguments","nextSource","keysArray","keys","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","polyfill","defineProperty","configurable","writable","value","prototypo","glyph","mouseHandlers","init","loadFont","_","paper","opts","setup","canvas","settings","hitTolerance","setAttribute","fill","shoNodes","zoomFactor","jQueryListeners","glyphrUrl","view","center","project","activeLayer","applyMatrix","scale","worker","_queue","_fill","_showNodes","showNodes","fontsMap","isMousedown","exportingZip","addEventListener","currentJob","callback","data","ArrayBuffer","font","addToFonts","dequeue","bind","$","jQuery","type","on","onWheel","onMove","onDown","document","onUp","raf","requestAnimationFrame","webkitRequestAnimationFrame","updateLoop","latestRafValues","currGlyph","update","prototype","defineProperties","zoom","get","set","bool","displayGlyph","showCoords","drawCoords","subset","enqueue","displayChar","latestChar","charMap","charCodeAt","PaperScope","Path","_drawSelected","handleSize","handleColor","nodeColor","handleFont","priorities","message","indexOf","cb","postMessage","emptyQueue","values","latestValues","setAlternateFor","unicode","glyphName","glyphMap","download","name","merged","generateOtf","family","getBlob","Promise","resolve","reject","buffer","variant","style","err","openInGlyphr","handler","removeEventListener","source","origin","open","displayComponents","components","forEach","component","visible","contours","contour","fullySelected","skeleton","_glyph","fillColor","strokeWidth","_project","_needsUpdate","SelectionState","HANDLE_IN","HANDLE_OUT","POINT","SEGMENT","worldCoords","Float32Array","viewCoords","drawHandles","ctx","segments","matrix","size","half","pX","pY","drawHandle","j","hX","Math","round","hY","text","beginPath","strokeStyle","fillStyle","moveTo","lineTo","stroke","arc","PI","globalAlpha","fillText","measureText","width","segment","_transformCoordinates","state","_selectionState","fillRect","_segments","_scope","_view","_zoom","shell","URL","webkitURL","constructor","workerUrl","createObjectURL","Blob","toString","Worker","initWorker","Array","isArray","workerDeps","then","translateGlyph","ot","fontSource","charAt","fetch","result","fontObj","JSON","parse","key","glyphs","solvingOrder","parametricFont","wheelHandler","event","bcr","getBoundingClientRect","currPos","Point","clientX","left","clientY","top","viewPos","viewToProject","factor","abs","deltaY","deltaMode","newZoom","beta","difference","subtract","newCenter","multiply","preventDefault","moveHandler","delta","prevPos","divide","downHandler","button","upHandler","zoomIn","zoomOut","prepareWorker","runWorker","handlers","currValues","currSubset","translateSubset","map","filter","Boolean","height","onmessage","solvingOrders","params","_updateVersion","updateOTCommands","toBuffer","alternate","String","fromCharCode","join","altGlyph","getGlyphSubset","prevGlyphs","otfFont","allChars","fontValues","familyName","styleName","importScripts"],"mappings":"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kJ,GAAAuE,UAAAxJ,KAEA,OAAAqF,SAKA,SAAArO,UAAA,aAAA,iBAAAC,MAAA,CACA,GAAAkJ,SAAA,QAAAwE,YAAAvN,GACAH,KAAAmJ,oBAAA,UAAAD,QACAlJ,MAAAwS,cAAArS,EAAAyE,KACAiM,YACA7Q,MAAA4H,YAAA,SAGA5H,MAAAyE,iBAAA,UAAAyE,UAKA,SAAAnJ,UAAA,aAAA,iBAAAC,MAAA,CACA4Q,oBACA,CACAlR,OAAAD,QAAAmR;ANzKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzvsourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n","var prototypo = (typeof window !== \"undefined\" ? window['prototypo'] : typeof global !== \"undefined\" ? global['prototypo'] : null),\n\tassign = require('es6-object-assign').assign,\n\t// Grid = require('./grid'),\n\tglyph = require('./utils/glyph'),\n\tmouseHandlers = require('./utils/mouseHandlers'),\n\tinit = require('./utils/init'),\n\tloadFont = require('./utils/loadFont');\n\nvar _ = { assign: assign },\n\tpaper = prototypo.paper;\n\n// constructor\nfunction PrototypoCanvas( opts ) {\n\tpaper.setup( opts.canvas );\n\tpaper.settings.hitTolerance = 1;\n\t// enable pointerevents on the canvas\n\topts.canvas.setAttribute('touch-action', 'none');\n\n\tthis.opts = _.assign({\n\t\tfill: true,\n\t\tshoNodes: false,\n\t\tzoomFactor: 0.05,\n\t\tjQueryListeners: true,\n\t\tglyphrUrl: 'http://www.glyphrstudio.com/online/'\n\t}, opts);\n\n\tthis.canvas = opts.canvas;\n\tthis.view = paper.view;\n\tthis.view.center = [ 0, 0 ];\n\tthis.project = paper.project;\n\tthis.project.activeLayer.applyMatrix = false;\n\tthis.project.activeLayer.scale( 1, -1 );\n\tthis.worker = opts.worker;\n\tthis._queue = [];\n\tthis._fill = this.opts.fill;\n\tthis._showNodes = this.opts.showNodes;\n\tthis.fontsMap = {};\n\tthis.isMousedown = false;\n\tthis.exportingZip = false;\n\n\t// this.grid = new Grid( paper );\n\n\t// bind workerHandlers\n\tif ( this.worker ) {\n\t\tthis.worker.addEventListener('message', function(e) {\n\t\t\t// the job might have been cancelled\n\t\t\tif ( !this.currentJob ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( this.currentJob.callback ) {\n\t\t\t\tthis.currentJob.callback( e.data );\n\n\t\t\t// default callback for buffers: use it as a font\n\t\t\t} else if ( e.data instanceof ArrayBuffer ) {\n\t\t\t\tthis.font.addToFonts( e.data );\n\t\t\t}\n\n\t\t\tthis.currentJob = false;\n\t\t\tthis.dequeue();\n\n\t\t}.bind(this));\n\t}\n\n\t// bind mouseHandlers (jQuery is an optional dependency)\n\tif ( ( 'jQuery' in window ) && this.opts.jQueryListeners ) {\n\t\tvar $ = window.jQuery,\n\t\t\ttype = ( 'PointerEventsPolyfill' in window ) ||\n\t\t\t\t( 'PointerEvent' in window ) ? 'pointer' : 'mouse';\n\n\t\t$(opts.canvas).on( 'wheel', this.onWheel.bind(this) );\n\n\t\t$(opts.canvas).on( type + 'move', this.onMove.bind(this) );\n\n\t\t$(opts.canvas).on( type + 'down', this.onDown.bind(this) );\n\n\t\t$(document).on( type + 'up', this.onUp.bind(this) );\n\t}\n\n\t// setup raf loop\n\tvar raf = window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame,\n\t\tupdateLoop = function() {\n\t\t\traf(updateLoop);\n\n\t\t\tif (\n\t\t\t\t!this.latestRafValues ||\n\t\t\t\t!this.currGlyph ||\n\t\t\t\tthis.exportingZip\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.font.update( this.latestRafValues, [ this.currGlyph ] );\n\t\t\tthis.view.update();\n\t\t\tdelete this.latestRafValues;\n\n\t\t}.bind(this);\n\tupdateLoop();\n}\n\nPrototypoCanvas.init = init;\nPrototypoCanvas.prototype.loadFont = loadFont;\n_.assign( PrototypoCanvas.prototype, mouseHandlers );\n\nObject.defineProperties( PrototypoCanvas.prototype, {\n\tzoom: {\n\t\tget: function() {\n\t\t\treturn this.view.zoom;\n\t\t},\n\t\tset: function( zoom ) {\n\t\t\tthis.view.zoom = zoom;\n\t\t\t// this.grid.zoom = zoom;\n\t\t}\n\t},\n\tfill: {\n\t\tget: function() {\n\t\t\treturn this._fill;\n\t\t},\n\t\tset: function( bool ) {\n\t\t\tthis._fill = bool;\n\t\t\tthis.displayGlyph();\n\t\t}\n\t},\n\tshowNodes: {\n\t\tget: function() {\n\t\t\treturn this._showNodes;\n\t\t},\n\t\tset: function( bool ) {\n\t\t\tthis._showNodes = bool;\n\t\t\tthis.displayGlyph();\n\t\t}\n\t},\n\tshowCoords: {\n\t\tget: function() {\n\t\t\treturn paper.settings.drawCoords;\n\t\t},\n\t\tset: function( bool ) {\n\t\t\tpaper.settings.drawCoords = bool;\n\t\t\tthis.displayGlyph();\n\t\t}\n\t},\n\tsubset: {\n\t\tget: function() {\n\t\t\treturn this.font.subset;\n\t\t},\n\t\tset: function( set ) {\n\t\t\tthis.enqueue({\n\t\t\t\ttype: 'subset',\n\t\t\t\tdata: set\n\t\t\t});\n\n\t\t\tthis.font.subset = set;\n\t\t}\n\t}\n});\n\nPrototypoCanvas.prototype.displayGlyph = glyph.displayGlyph;\n\nPrototypoCanvas.prototype.displayChar = function( code ) {\n\tthis.latestChar = code;\n\tthis.displayGlyph( typeof code === 'string' ?\n\t\tthis.font.charMap[ code.charCodeAt(0) ] : code\n\t);\n};\n\n// overwrite the appearance of #selected items in paper.js\npaper.PaperScope.prototype.Path.prototype._drawSelected = glyph._drawSelected;\n_.assign( paper.settings, {\n\thandleSize: 6,\n\thandleColor: '#FF725E',\n\tnodeColor: '#00C4D6',\n\tdrawCoords: false,\n\thandleFont: '12px monospace'\n});\n\n// The worker queue is not your ordinary queue: the priority of the job is\n// defined arbitrarily, and any message previously present\n// at this position will be overwritten. The priorities associated to the\n// message type are hardcoded below (in ascending priority order).\nPrototypoCanvas.priorities = [\n\t'update',\n\t'subset',\n\t'svgFont',\n\t'otfFont',\n\t'alternate'\n];\n\nPrototypoCanvas.prototype.enqueue = function( message ) {\n\tthis._queue[ PrototypoCanvas.priorities.indexOf( message.type ) ] = message;\n\tthis.dequeue();\n};\n\nPrototypoCanvas.prototype.dequeue = function() {\n\tif ( this.currentJob || !this.worker ) {\n\t\treturn;\n\t}\n\n\t// send the highest priority mesage in the queue (0 is lowest)\n\tfor ( var i = this._queue.length; i--; ) {\n\t\tif ( this._queue[i] ) {\n\t\t\tthis.currentJob = this._queue[i];\n\n\t\t\t// the callback function shouldn't be sent\n\t\t\tvar cb = this.currentJob.callback;\n\t\t\tdelete this.currentJob.callback;\n\n\t\t\tthis.worker.postMessage( this.currentJob );\n\n\t\t\tthis.currentJob.callback = cb;\n\t\t\tthis._queue[i] = null;\n\t\t\tbreak;\n\t\t}\n\t}\n};\n\nPrototypoCanvas.prototype.emptyQueue = function() {\n\tthis._queue = [];\n\tthis.currentJob = false;\n};\n\nPrototypoCanvas.prototype.update = function( values ) {\n\t// latestValues are used in displayGlyph\n\t// latestWorkerValues is used and disposed by th/sue fontBufferHandler\n\t// latestRafValues is used and disposed by the raf loop\n\t// so we need all three!\n\tthis.latestValues = this.latestRafValues = values;\n\n\tthis.enqueue({\n\t\ttype: 'update',\n\t\tdata: values\n\t});\n};\n\nPrototypoCanvas.prototype.setAlternateFor = function( unicode, glyphName ) {\n\tthis.font.setAlternateFor( unicode, glyphName );\n\n\tthis.displayChar( this.font.glyphMap[glyphName] );\n\n\tthis.enqueue({\n\t\ttype: 'alternate',\n\t\tdata: {\n\t\t\tunicode: unicode,\n\t\t\tglyphName: glyphName\n\t\t}\n\t});\n\n\tthis.update( this.latestValues );\n};\n\nPrototypoCanvas.prototype.download = function( cb, name, merged ) {\n\tthis.generateOtf(function( data ) {\n\t\tthis.font.download( data, merged, name.family, 'test');\n\t\tif ( cb ) {\n\t\t\tcb();\n\t\t}\n\t}.bind(this), name);\n};\n\nPrototypoCanvas.prototype.getBlob = function( cb, name, merged, values ) {\n\treturn new Promise(function( resolve, reject) {\n\t\ttry {\n\t\t\tthis.generateOtf( function( data ) {\n\t\t\t\tresolve( {\n\t\t\t\t\tbuffer: data,\n\t\t\t\t\tvariant: name.style\n\t\t\t\t});\n\t\t\t\tif ( cb ) {\n\t\t\t\t\tcb();\n\t\t\t\t}\n\t\t\t}, name, merged, values );\n\t\t} catch ( err ) {\n\t\t\treject(err);\n\t\t}\n\t}.bind(this));\n};\n\nPrototypoCanvas.prototype.generateOtf = function(cb, name, merged, values) {\n\tif ( !this.worker || ( !this.latestValues && !values ) ) {\n\t\t// the UI should wait for the first update to happen before allowing\n\t\t// the download button to be clicked\n\t\treturn false;\n\t}\n\n\tthis.enqueue({\n\t\ttype: 'otfFont',\n\t\tdata: {\n\t\t\tfamily: name.family,\n\t\t\tstyle: name.style,\n\t\t\tmerged: merged,\n\t\t\tvalues: values\n\t\t},\n\t\tcallback: function( data ) {\n\t\t\tif ( cb ) {\n\t\t\t\tcb(data);\n\t\t\t}\n\t\t}\n\t});\n};\n\nPrototypoCanvas.prototype.openInGlyphr = function( cb ) {\n\tif ( !this.worker || !this.latestValues ) {\n\t\t// the UI should wait for the first update to happen before allowing\n\t\t// the download button to be clicked\n\t\treturn false;\n\t}\n\n\tthis.enqueue({\n\t\t// otf/svg switch\n\t\ttype: 'otfFont',\n\t\t// type: 'svgFont',\n\t\tcallback: function( data ) {\n\t\t\tvar handler = function(e) {\n\t\t\t\twindow.removeEventListener('message', handler);\n\t\t\t\tif ( e.data !== 'ready' ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// otf/svg switch\n\t\t\t\te.source.postMessage( data, e.origin, [ data ] );\n\t\t\t\t// e.source.postMessage( data, e.origin );\n\t\t\t\tif ( cb ) {\n\t\t\t\t\tcb();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\twindow.open( this.opts.glyphrUrl );\n\t\t\twindow.addEventListener('message', handler);\n\t\t}.bind(this)\n\t});\n};\n\nmodule.exports = PrototypoCanvas;\n","function displayComponents( glyph, showNodes ) {\n\tglyph.components.forEach(function(component) {\n\t\tcomponent.visible = true;\n\t\tcomponent.contours.forEach(function(contour) {\n\t\t\tcontour.fullySelected = showNodes && !contour.skeleton;\n\t\t});\n\n\t\tif ( component.components.length ) {\n\t\t\tdisplayComponents( component, showNodes );\n\t\t}\n\t});\n}\n\nfunction displayGlyph( _glyph ) {\n\tvar glyph =\n\t\t\t// no glyph means we're switching fill mode for the current glyph\n\t\t\t_glyph === undefined ? this.currGlyph :\n\t\t\t// accept glyph name and glyph object\n\t\t\ttypeof _glyph === 'string' ? this.font.glyphMap[_glyph] :\n\t\t\t_glyph;\n\n\tif ( glyph === undefined ) {\n\t\treturn;\n\t}\n\n\t// hide previous glyph\n\tif ( this.currGlyph && this.currGlyph !== glyph ) {\n\t\tthis.currGlyph.visible = false;\n\t\tthis.currGlyph.components.forEach(function(component) {\n\t\t\tcomponent.visible = false;\n\t\t}, this);\n\t}\n\n\tthis.currGlyph = glyph;\n\n\t// make sure the glyph is up-to-update\n\tif ( _glyph && this.latestValues ) {\n\t\tthis.currGlyph.update( this.latestValues );\n\t}\n\n\t// .. and show it\n\tthis.currGlyph.visible = true;\n\n\tif ( this._fill ) {\n\t\tthis.currGlyph.fillColor = '#333333';\n\t\tthis.currGlyph.strokeWidth = 0;\n\t} else {\n\t\tthis.currGlyph.fillColor = null;\n\t\tthis.currGlyph.strokeWidth = 1;\n\t}\n\n\tthis.currGlyph.contours.forEach(function(contour) {\n\t\tcontour.fullySelected = this._showNodes && !contour.skeleton;\n\t}, this);\n\n\tif ( this.currGlyph.components.length ) {\n\t\tdisplayComponents( this.currGlyph, this._showNodes );\n\t}\n\n\tthis.view._project._needsUpdate = true;\n\tthis.view.update();\n}\n\n// Path#_selectedSegmentState is the addition of all segment's states, and is\n// compared with SelectionState.SEGMENT, the combination of all SelectionStates\n// to see if all segments are fully selected.\nvar SelectionState = {\n\t\tHANDLE_IN: 1,\n\t\tHANDLE_OUT: 2,\n\t\tPOINT: 4,\n\t\tSEGMENT: 7 // HANDLE_IN | HANDLE_OUT | POINT\n\t},\n\tworldCoords = new Float32Array(6),\n\tviewCoords = new Float32Array(6);\n\nfunction drawHandles(ctx, segments, matrix, settings, zoom) {\n\tvar size = settings.handleSize,\n\t\thalf = size / 2,\n\t\tpX,\n\t\tpY;\n\n\tfunction drawHandle(j) {\n\t\tvar hX = Math.round( viewCoords[j] ),\n\t\t\thY = Math.round( viewCoords[j + 1] ),\n\t\t\ttext;\n\n\t\tif ( viewCoords[0] !== viewCoords[j] ||\n\t\t\t\tviewCoords[1] !== viewCoords[j + 1]) {\n\n\t\t\tctx.beginPath();\n\t\t\tctx.strokeStyle = settings.handleColor;\n\t\t\tctx.fillStyle = settings.handleColor;\n\t\t\tctx.moveTo(pX, pY);\n\t\t\tctx.lineTo(hX, hY);\n\t\t\tctx.stroke();\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\tctx.fill();\n\n\t\t\tif ( settings.drawCoords ) {\n\t\t\t\ttext = Math.round( worldCoords[j] ) + ',' +\n\t\t\t\t\tMath.round( worldCoords[j + 1] );\n\n\t\t\t\t// use alpha to reduce the clutter caused by all this text when\n\t\t\t\t// zooming out\n\t\t\t\tif ( zoom < 1.7 ) {\n\t\t\t\t\tctx.globalAlpha = 0.2;\n\t\t\t\t} else if ( zoom < 3 ) {\n\t\t\t\t\tctx.globalAlpha = 0.4;\n\t\t\t\t}\n\t\t\t\tctx.fillText(\n\t\t\t\t\ttext,\n\t\t\t\t\thX - half - 3 - ctx.measureText(text).width,\n\t\t\t\t\t// The text is slightly above the marker. This avoids\n\t\t\t\t\t// overlapping when the handle vector is horizontal, which\n\t\t\t\t\t// is quite a frequent case.\n\t\t\t\t\thY - 2\n\t\t\t\t);\n\t\t\t\tif ( zoom < 3 ) {\n\t\t\t\t\tctx.globalAlpha = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\tvar segment = segments[i];\n\t\tsegment._transformCoordinates(null, worldCoords, false);\n\t\tsegment._transformCoordinates(matrix, viewCoords, false);\n\t\tvar state = segment._selectionState;\n\t\tpX = Math.round( viewCoords[0] );\n\t\tpY = Math.round( viewCoords[1] );\n\t\tif ( state & /*#=*/ SelectionState.HANDLE_IN ) {\n\t\t\tdrawHandle(2);\n\t\t}\n\t\tif ( state & /*#=*/ SelectionState.HANDLE_OUT ) {\n\t\t\tdrawHandle(4);\n\t\t}\n\t\t// Draw a rectangle at segment.point:\n\t\tctx.fillStyle = settings.nodeColor;\n\t\tctx.fillRect( pX - half, pY - half, size, size );\n\t\tctx.font = settings.handleFont;\n\n\t\tif ( settings.drawCoords ) {\n\t\t\tif ( zoom < 1.7 ) {\n\t\t\t\tctx.globalAlpha = 0.4;\n\t\t\t}\n\t\t\tctx.fillText(\n\t\t\t\tMath.round( worldCoords[0] ) + ',' +\n\t\t\t\tMath.round( worldCoords[1] ),\n\t\t\t\tpX + half + 5,\n\t\t\t\tpY - 2\n\t\t\t);\n\t\t\tif ( zoom < 1.7 ) {\n\t\t\t\tctx.globalAlpha = 1;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction _drawSelected( ctx, matrix ) {\n\tctx.beginPath();\n\t// Now stroke it and draw its handles:\n\tctx.stroke();\n\tdrawHandles(\n\t\tctx,\n\t\tthis._segments,\n\t\tmatrix,\n\t\tthis._project._scope.settings,\n\t\tthis._project._view._zoom\n\t);\n}\n\nmodule.exports = {\n\tdisplayGlyph: displayGlyph,\n\t_drawSelected: _drawSelected\n};\n","var shell = require('./../worker');\n\nvar URL = typeof window !== 'undefined' && ( window.URL || window.webkitURL );\n\nmodule.exports = function init( opts ) {\n\tvar constructor = this;\n\n\t// the worker can be loaded from a file by specifying its url (dev\n\t// environment), or by building it as a blob, from a require'd file.\n\tif ( !opts.workerUrl ) {\n\t\topts.workerUrl = URL.createObjectURL(\n\t\t\tnew Blob([\n\t\t\t\t// IIFE power\n\t\t\t\t'(' + shell.toString() + ')();' +\n\t\t\t\t// For some reason [object Object] is appended to the source\n\t\t\t\t// by Firefox when the worker is created, which causes the\n\t\t\t\t// script to throw without the following comment.\n\t\t\t\t'//',\n\t\t\t\t{ type: 'text/javascript' }\n\t\t\t])\n\t\t);\n\t}\n\n\t// create the worker\n\treturn new Promise(function( resolve ) {\n\t\tvar worker = opts.worker = new Worker( opts.workerUrl ),\n\t\t\thandler = function initWorker() {\n\t\t\t\tworker.removeEventListener('message', handler);\n\t\t\t\tresolve();\n\t\t\t};\n\n\t\tworker.addEventListener('message', handler);\n\t\tworker.postMessage( Array.isArray( opts.workerDeps ) ?\n\t\t\topts.workerDeps :\n\t\t\t[ opts.workerDeps ]\n\t\t);\n\n\t}).then(function() {\n\t\treturn new constructor( opts );\n\t});\n};\n","// switch the current glyph with one that has the same name\n// in the next font, or one with the same unicode, or .undef\nfunction translateGlyph( self ) {\n\tif ( !self.currGlyph ) {\n\t\treturn;\n\t}\n\n\tself.displayGlyph(\n\t\tself.font.glyphMap[ self.currGlyph.name ] ||\n\t\tself.font.charMap[ self.currGlyph.ot.unicode ] ||\n\t\tself.font.glyphMap[ '.undef' ]\n\t);\n}\n\nmodule.exports = function loadFont( name, fontSource ) {\n\t// ignore the job currently running, empty the queue and clear update values\n\tthis.emptyQueue();\n\tthis.latestValues = this.latestRafValues = null;\n\n\t// TODO: memoizing should have a limited size!\n\tif ( name in this.fontsMap ) {\n\t\tthis.font = this.fontsMap[name];\n\t\ttranslateGlyph( this );\n\t\tthis.worker.postMessage({\n\t\t\ttype: 'font',\n\t\t\tname: name\n\t\t});\n\t\treturn Promise.resolve( this.font );\n\t}\n\n\treturn ( fontSource.charAt(0) === '{' ?\n\t\tPromise.resolve( fontSource ) :\n\t\t// fetch the resource from URL\n\t\tfetch( fontSource )\n\n\t).then(function( result ) {\n\t\treturn typeof result === 'string' || result.text();\n\n\t}).then(function( result ) {\n\t\tif ( result !== true ) {\n\t\t\tfontSource = result;\n\t\t}\n\n\t\treturn new Promise(function( resolve ) {\n\t\t\tvar fontObj = JSON.parse( fontSource ),\n\t\t\t\thandler = function( e ) {\n\t\t\t\t\tif ( typeof e.data !== 'object' ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.worker.removeEventListener('message', handler);\n\n\t\t\t\t\t// merge solvingOrders with the source\n\t\t\t\t\tObject.keys( e.data ).forEach(function(key) {\n\t\t\t\t\t\tif ( fontObj.glyphs[key] ) {\n\t\t\t\t\t\t\tfontObj.glyphs[key].solvingOrder = e.data[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.font = prototypo.parametricFont( fontObj );\n\t\t\t\t\tthis.fontsMap[name] = this.font;\n\t\t\t\t\ttranslateGlyph( this );\n\n\t\t\t\t\tresolve( this );\n\t\t\t\t}.bind(this);\n\n\t\t\tthis.worker.addEventListener('message', handler);\n\n\t\t\tthis.worker.postMessage({\n\t\t\t\ttype: 'font',\n\t\t\t\tname: name,\n\t\t\t\tdata: fontSource\n\t\t\t});\n\n\t\t}.bind(this));\n\t}.bind(this));\n};\n","var paper = (typeof window !== \"undefined\" ? window['prototypo'] : typeof global !== \"undefined\" ? global['prototypo'] : null).paper;\n\nfunction wheelHandler( event ) {\n\tvar bcr = this.canvas.getBoundingClientRect(),\n\t\tcurrPos = new paper.Point(\n\t\t\tevent.clientX - bcr.left,\n\t\t\tevent.clientY - bcr.top\n\t\t),\n\t\tviewPos = this.view.viewToProject( currPos ),\n\t\t// normalize the deltaY value. Expected values are ~40 pixels or 3 lines\n\t\tfactor = 1 + ( this.opts.zoomFactor *\n\t\t\t( Math.abs( event.deltaY / event.deltaMode ? 3 : 40 * 20 ) ) ),\n\t\tnewZoom =\n\t\t\tevent.deltaY < 0 ?\n\t\t\t\tthis.view.zoom * factor :\n\t\t\t\tevent.deltaY > 0 ?\n\t\t\t\t\tthis.view.zoom / factor :\n\t\t\t\t\tthis.view.zoom,\n\t\tbeta = this.view.zoom / newZoom,\n\t\tdifference = viewPos.subtract( this.view.center ),\n\t\tnewCenter = viewPos.subtract( difference.multiply(beta) );\n\n\tthis.zoom = newZoom;\n\tthis.view.center = newCenter;\n\n\tevent.preventDefault();\n}\n\nfunction moveHandler(event) {\n\tif ( !this.isMousedown ) {\n\t\treturn;\n\t}\n\n\tvar currPos = new paper.Point( event.clientX, event.clientY ),\n\t\tdelta = currPos.subtract( this.prevPos );\n\n\tthis.prevPos = currPos;\n\n\tthis.view.center = this.view.center.subtract(\n\t\t\tdelta.divide( this.view.zoom ) );\n}\n\nfunction downHandler(event) {\n\tif (event.button && event.button !== 0) {\n\t\treturn;\n\t}\n\n\tthis.isMousedown = true;\n\tthis.prevPos = new paper.Point( event.clientX, event.clientY );\n}\n\nfunction upHandler() {\n\tthis.isMousedown = false;\n}\n\nfunction zoomIn() {\n\tthis.zoom = this.view.zoom * 1 + this.opts.zoomFactor;\n}\n\nfunction zoomOut() {\n\tthis.zoom = this.view.zoom / 1 + this.opts.zoomFactor;\n}\n\nmodule.exports = {\n\tonWheel: wheelHandler,\n\tonMove: moveHandler,\n\tonDown: downHandler,\n\tonUp: upHandler,\n\tzoomIn: zoomIn,\n\tzoomOut: zoomOut\n};\n","function prepareWorker() {\n\tfunction runWorker() {\n\t\tvar font,\n\t\t\thandlers = {},\n\t\t\tfontsMap = {},\n\t\t\tcurrValues,\n\t\t\tcurrSubset = [],\n\t\t\ttranslateSubset = function() {\n\t\t\t\tif ( !currSubset.length ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfont.subset = currSubset.map(function( glyph ) {\n\t\t\t\t\treturn font.charMap[ glyph.ot.unicode ];\n\t\t\t\t}).filter(Boolean);\n\n\t\t\t\tcurrSubset = font.subset;\n\t\t\t};\n\n\t\tprototypo.paper.setup({\n\t\t\twidth: 1024,\n\t\t\theight: 1024\n\t\t});\n\n\t\t// mini router\n\t\tself.onmessage = function(e) {\n\t\t\tvar result;\n\n\t\t\tif ( e.data.type && e.data.type in handlers ) {\n\t\t\t\tresult = handlers[ e.data.type ]( e.data.data, e.data.name );\n\n\t\t\t\tif ( result === null ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tself.postMessage(\n\t\t\t\t\tresult,\n\t\t\t\t\tresult instanceof ArrayBuffer ? [ result ] : undefined );\n\t\t\t}\n\t\t};\n\n\t\thandlers.font = function( fontSource, name ) {\n\t\t\t// TODO: this should be done using a memoizing table of limited size\n\t\t\tif ( name in fontsMap ) {\n\t\t\t\tfont = fontsMap[name];\n\t\t\t\ttranslateSubset();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar fontObj = JSON.parse( fontSource );\n\n\t\t\tfont = prototypo.parametricFont(fontObj);\n\t\t\tfontsMap[name] = font;\n\n\t\t\ttranslateSubset();\n\n\t\t\tvar solvingOrders = {};\n\t\t\tObject.keys( font.glyphMap ).forEach(function(key) {\n\t\t\t\tsolvingOrders[key] = font.glyphMap[key].solvingOrder;\n\t\t\t});\n\n\t\t\treturn solvingOrders;\n\t\t};\n\n\t\thandlers.update = function( params ) {\n\t\t\tcurrValues = params;\n\t\t\tfont.update( currValues );\n\t\t\t// the following is required so that the globalMatrix of glyphs\n\t\t\t// takes the font matrix into account. I assume this is done in the\n\t\t\t// main thread when calling view.update();\n\t\t\tfont._project._updateVersion++;\n\t\t\tfont.updateOTCommands();\n\t\t\treturn font.ot.toBuffer();\n\t\t};\n\n\t\thandlers.alternate = function( params ) {\n\t\t\tfont.setAlternateFor( params.unicode, params.glyphName );\n\n\t\t\tif (!currValues) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tfont.subset = font.subset.map(function( glyph ) {\n\t\t\t\treturn String.fromCharCode(glyph.unicode);\n\t\t\t}).join('');\n\n\t\t\tvar altGlyph = font.glyphMap[params.glyphName];\n\n\t\t\taltGlyph.update( currValues );\n\t\t\taltGlyph.updateOTCommands();\n\n\t\t\tfont.ot.glyphs = font.getGlyphSubset().map(function( glyph ) {\n\t\t\t\treturn glyph.ot;\n\t\t\t});\n\t\t\treturn font.ot.toBuffer();\n\t\t};\n\n\t\thandlers.subset = function( set ) {\n\t\t\tvar prevGlyphs = currSubset.map(function( glyph ) {\n\t\t\t\treturn glyph.name;\n\t\t\t});\n\t\t\tfont.subset = set;\n\t\t\tcurrSubset = font.subset;\n\n\t\t\tif ( !currValues ) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// search for glyphs *added* to the subset\n\t\t\tcurrSubset.filter(function( glyph ) {\n\t\t\t\treturn prevGlyphs.indexOf( glyph.name ) === -1;\n\n\t\t\t// update those glyphs\n\t\t\t}).forEach(function( glyph ) {\n\t\t\t\tglyph.update( currValues );\n\t\t\t\tglyph.updateOTCommands();\n\t\t\t});\n\n\t\t\t// Recreate the correct font.ot.glyphs array, without touching the\n\t\t\t// ot commands\n\t\t\tfont.ot.glyphs = font.getGlyphSubset().map(function( glyph ) {\n\t\t\t\treturn glyph.ot;\n\t\t\t});\n\t\t\treturn font.ot.toBuffer();\n\t\t};\n\n\t\thandlers.otfFont = function(data) {\n\t\t\t// force-update of the whole font, ignoring the current subset\n\t\t\tvar allChars = font.getGlyphSubset( false );\n\t\t\tvar fontValues = data.values || currValues;\n\t\t\tfont.update( fontValues, allChars );\n\n\t\t\tfont.updateOTCommands( allChars, data.merged );\n\n\t\t\tvar family = font.ot.familyName;\n\t\t\tvar style = font.ot.styleName;\n\n\t\t\t//TODO: understand why we need to save the familyName and\n\t\t\t//and set them back into the font.ot for it to be able to\n\t\t\t//export multiple font\n\t\t\tfont.ot.familyName = data.family;\n\t\t\tfont.ot.styleName = data.style;\n\n\t\t\tvar result = font.ot.toBuffer();\n\n\t\t\tfont.ot.familyName = family;\n\t\t\tfont.ot.styleName = style;\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t// This is how bundle dependencies are loaded\n\tif ( typeof global === 'undefined' && 'importScripts' in self ) {\n\t\tvar handler = function initWorker( e ) {\n\t\t\t\tself.removeEventListener('message', handler);\n\t\t\t\tself.importScripts( e.data );\n\t\t\t\trunWorker();\n\t\t\t\tself.postMessage('ready');\n\t\t\t};\n\n\t\tself.addEventListener('message', handler);\n\t}\n}\n\n// When the worker is loaded from URL, worker() needs to be called explicitely\nif ( typeof global === 'undefined' && 'importScripts' in self ) {\n\tprepareWorker();\n} else {\n\tmodule.exports = prepareWorker;\n}\n"]}