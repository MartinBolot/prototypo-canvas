{"version":3,"file":"generated.js","sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/assignPolyfill.js","src/drawNodes.js","src/load.js","src/prototypo-canvas.js","src/worker.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","PrototypoCanvas","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"Object","assign","defineProperty","enumerable","configurable","writable","value","target","undefined","TypeError","to","arguments","nextSource","keysArray","keys","len","nextIndex","nextKey","desc","getOwnPropertyDescriptor","SelectionState","HANDLE_IN","HANDLE_OUT","POINT","SEGMENT","worldCoords","Float32Array","viewCoords","drawHandles","ctx","segments","matrix","settings","zoom","size","handleSize","half","pX","pY","drawHandle","j","hX","Math","round","hY","text","beginPath","strokeStyle","handleColor","fillStyle","moveTo","lineTo","stroke","arc","PI","fill","drawCoords","globalAlpha","fillText","measureText","width","segment","_transformCoordinates","state","_selectionState","nodeColor","fillRect","font","handleFont","_drawSelected","_segments","_project","_scope","_view","_zoom","shell","_","URL","webkitURL","load","opts","fontUrl","prototypoUrl","Promise","all","fontSource","prototypoSource","map","url","fetch","then","results","fontObj","JSON","parse","workerUrl","encodeURIComponent","createObjectURL","Blob","toString","type","resolve","worker","Worker","onmessage","data","postMessage","forEach","key","glyphs","solvingOrder","prototypo","paper","fontBufferHandler","ArrayBuffer","isWorkerBusy","latestBuffer","addToFonts","latestValues","latestSubset","setup","canvas","setAttribute","shoNodes","zoomFactor","jQueryListeners","view","center","project","activeLayer","applyMatrix","scale","_fill","_showNodes","showNodes","parametricFont","isMousedown","bind","$","jQuery","on","wheelHandler","moveHandler","downHandler","document","upHandler","raf","requestAnimationFrame","webkitRequestAnimationFrame","updateLoop","latestRafValues","currGlyph","update","defineProperties","prototype","get","set","bool","displayGlyph","showCoords","event","bcr","getBoundingClientRect","currPos","Point","clientX","left","clientY","top","viewPos","viewToProject","factor","abs","deltaY","deltaMode","newZoom","beta","difference","subtract","newCenter","multiply","preventDefault","delta","prevPos","divide","button","zoomIn","zoomOut","_glyph","glyph","glyphMap","visible","components","component","currValues","fillColor","strokeWidth","strokeColor","contours","contour","fullySelected","skeleton","_needsUpdate","displayChar","charMap","charCodeAt","values","latestWorkerValues","subset","string","currSubset","download","PaperScope","Path","importScripts","decodeURIComponent","location","search","replace","handlers","height","Font","buffer","ot","toBuffer","solvingOrders","params","updateOTCommands","prevSubset","filter","indexOf"],"mappings":"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QACAhC,WAAAgC,MAEA/J,MAAAqF,OAAA0E,OAEA/J,MAAAgK,mBACA9G,aAGAsG,UAAAX,OAAA,SAAAC,QACA,GAAAmB,YAAAjK,KAAA6I,QAAAhN,OAAAc,KAAAqD,KAAAyI,QACAzI,MAAA6I,OAAAC,MACA,IAAAC,YAAA/I,KAAA6I,QAAAhN,OAAAc,KAAAqD,KAAAyI,QAGAM,YAAAmB,OAAA,SAAA1O,MACA,MAAAyO,YAAAE,QAAA3O,SAAA,IAGAgH,QAAA,SAAAhH,MACA,GAAAwE,KAAAyI,QAAAjN,MAAA,CACAwE,KAAAyI,QAAAjN,MAAA6J,OAAA0C,WACA/H,MAAAgK,qBAIAhK,MAAAkD,cAKA,GAAA,iBAAAxI,MAAA,CACAyH,aACA,CACA/H,OAAAD,QAAAgI;AJ9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxvUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// Oject.assign polyfill from MDN https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nif (!Object.assign) {\n\tObject.defineProperty(Object, 'assign', {\n\t\tenumerable: false,\n\t\tconfigurable: true,\n\t\twritable: true,\n\t\tvalue: function(target) {\n\t\t\tif ( target === undefined || target === null ) {\n\t\t\t\tthrow new TypeError('Cannot convert first argument to object');\n\t\t\t}\n\n\t\t\tvar to = Object(target);\n\t\t\tfor ( var i = 1; i < arguments.length; i++ ) {\n\t\t\t\tvar nextSource = arguments[i];\n\t\t\t\tif ( nextSource === undefined || nextSource === null ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tnextSource = Object(nextSource);\n\n\t\t\t\tvar keysArray = Object.keys(Object(nextSource)),\n\t\t\t\t\tlen = keysArray.length,\n\t\t\t\t\tnextIndex;\n\n\t\t\t\tfor ( nextIndex = 0; nextIndex < len; nextIndex++) {\n\t\t\t\t\tvar nextKey = keysArray[nextIndex];\n\t\t\t\t\tvar desc = Object.getOwnPropertyDescriptor(\n\t\t\t\t\t\tnextSource, nextKey\n\t\t\t\t\t);\n\n\t\t\t\t\tif (desc !== undefined && desc.enumerable) {\n\t\t\t\t\t\tto[nextKey] = nextSource[nextKey];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn to;\n\t\t}\n\t});\n}\n\nmodule.exports = Object.assign;\n","// Path#_selectedSegmentState is the addition of all segment's states, and is\n// compared with SelectionState.SEGMENT, the combination of all SelectionStates\n// to see if all segments are fully selected.\nvar SelectionState = {\n\t\tHANDLE_IN: 1,\n\t\tHANDLE_OUT: 2,\n\t\tPOINT: 4,\n\t\tSEGMENT: 7 // HANDLE_IN | HANDLE_OUT | POINT\n\t},\n\tworldCoords = new Float32Array(6),\n\tviewCoords = new Float32Array(6);\n\nfunction drawHandles(ctx, segments, matrix, settings, zoom) {\n\tvar size = settings.handleSize,\n\t\thalf = size / 2,\n\t\tpX,\n\t\tpY;\n\n\tfunction drawHandle(j) {\n\t\tvar hX = Math.round( viewCoords[j] ),\n\t\t\thY = Math.round( viewCoords[j + 1] ),\n\t\t\ttext;\n\n\t\tif ( viewCoords[0] !== viewCoords[j] ||\n\t\t\t\tviewCoords[1] !== viewCoords[j + 1]) {\n\n\t\t\tctx.beginPath();\n\t\t\tctx.strokeStyle = settings.handleColor;\n\t\t\tctx.fillStyle = settings.handleColor;\n\t\t\tctx.moveTo(pX, pY);\n\t\t\tctx.lineTo(hX, hY);\n\t\t\tctx.stroke();\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\tctx.fill();\n\n\t\t\tif ( settings.drawCoords ) {\n\t\t\t\ttext = Math.round( worldCoords[j] ) + ',' +\n\t\t\t\t\tMath.round( worldCoords[j + 1] );\n\n\t\t\t\t// use alpha to reduce the clutter caused by all this text when\n\t\t\t\t// zooming out\n\t\t\t\tif ( zoom < 1.7 ) {\n\t\t\t\t\tctx.globalAlpha = 0.2;\n\t\t\t\t} else if ( zoom < 3 ) {\n\t\t\t\t\tctx.globalAlpha = 0.4;\n\t\t\t\t}\n\t\t\t\tctx.fillText(\n\t\t\t\t\ttext,\n\t\t\t\t\thX - half - 3 - ctx.measureText(text).width,\n\t\t\t\t\t// The text is slightly above the marker. This avoids\n\t\t\t\t\t// overlapping when the handle vector is horizontal, which\n\t\t\t\t\t// is quite a frequent case.\n\t\t\t\t\thY - 2\n\t\t\t\t);\n\t\t\t\tif ( zoom < 3 ) {\n\t\t\t\t\tctx.globalAlpha = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\tvar segment = segments[i];\n\t\tsegment._transformCoordinates(null, worldCoords, false);\n\t\tsegment._transformCoordinates(matrix, viewCoords, false);\n\t\tvar state = segment._selectionState;\n\t\tpX = Math.round( viewCoords[0] );\n\t\tpY = Math.round( viewCoords[1] );\n\t\tif ( state & /*#=*/ SelectionState.HANDLE_IN ) {\n\t\t\tdrawHandle(2);\n\t\t}\n\t\tif ( state & /*#=*/ SelectionState.HANDLE_OUT ) {\n\t\t\tdrawHandle(4);\n\t\t}\n\t\t// Draw a rectangle at segment.point:\n\t\tctx.fillStyle = settings.nodeColor;\n\t\tctx.fillRect( pX - half, pY - half, size, size );\n\t\tctx.font = settings.handleFont;\n\n\t\tif ( settings.drawCoords ) {\n\t\t\tif ( zoom < 1.7 ) {\n\t\t\t\tctx.globalAlpha = 0.4;\n\t\t\t}\n\t\t\tctx.fillText(\n\t\t\t\tMath.round( worldCoords[0] ) + ',' +\n\t\t\t\tMath.round( worldCoords[1] ),\n\t\t\t\tpX + half + 5,\n\t\t\t\tpY - 2\n\t\t\t);\n\t\t\tif ( zoom < 1.7 ) {\n\t\t\t\tctx.globalAlpha = 1;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction _drawSelected( ctx, matrix ) {\n\tctx.beginPath();\n\t// Now stroke it and draw its handles:\n\tctx.stroke();\n\tdrawHandles(\n\t\tctx,\n\t\tthis._segments,\n\t\tmatrix,\n\t\tthis._project._scope.settings,\n\t\tthis._project._view._zoom\n\t);\n}\n\nmodule.exports = { _drawSelected: _drawSelected };\n","var shell = require('./worker'),\n\tassign = require('./assignPolyfill');\n\nvar _ = { assign: assign },\n\tURL = window.URL || window.webkitURL;\n\nfunction load( opts ) {\n\tvar PrototypoCanvas = this;\n\n\topts = _.assign({\n\t\tfontUrl: 'font.json',\n\t\tprototypoUrl: 'prototypo.js'\n\t}, opts);\n\n\t// if the sources are provided\n\treturn Promise.all([\n\t\t!opts.fontSource && opts.fontUrl,\n\t\t!opts.prototypoSource && opts.prototypoUrl\n\t].map(function( url ) {\n\t\t// only fetch the resources if we have just the url, not the source\n\t\treturn url && fetch( url );\n\n\t})).then(function( results ) {\n\t\t// parse fetched resources\n\t\treturn Promise.all([\n\t\t\tresults[0] && results[0].text(),\n\t\t\tresults[1] && results[1].text()\n\t\t]);\n\n\t}).then(function( results ) {\n\t\tif ( results[0] ) {\n\t\t\topts.fontSource = results[0];\n\t\t}\n\t\tif ( results[1] ) {\n\t\t\topts.prototypoSource = results[1];\n\t\t}\n\n\t\topts.fontObj = JSON.parse( opts.fontSource );\n\t\t// the worker can be created by specifying the URL of the complete\n\t\t// file (dev environment), or by creating\n\t\tif ( opts.workerUrl ) {\n\t\t\t// The search fragment of workerUrl must include prototypo.js URL\n\t\t\topts.workerUrl +=\n\t\t\t\t'?bundleurl=' + encodeURIComponent( opts.prototypoUrl );\n\t\t} else {\n\t\t\topts.workerUrl = URL.createObjectURL(\n\t\t\t\tnew Blob([\n\t\t\t\t\topts.prototypoSource + ';\\n\\n' +\n\t\t\t\t\t// IIFE power\n\t\t\t\t\t'(' + shell.toString() + ')();' +\n\t\t\t\t\t// For some reason [object Object] is appended to the source\n\t\t\t\t\t// by Firefox when the worker is created, which causes the\n\t\t\t\t\t// script to throw without the following comment.\n\t\t\t\t\t'//',\n\t\t\t\t\t{ type: 'text/javascript' }\n\t\t\t\t])\n\t\t\t);\n\t\t}\n\n\t\t// create the worker\n\t\treturn new Promise(function( resolve ) {\n\t\t\tvar worker = new Worker( opts.workerUrl );\n\n\t\t\tworker.onmessage = function(e) {\n\t\t\t\t// load the font\n\t\t\t\tif ( e.data.type === 'ready' ) {\n\t\t\t\t\tworker.postMessage({\n\t\t\t\t\t\ttype: 'font',\n\t\t\t\t\t\tdata: opts.fontSource\n\t\t\t\t\t});\n\n\t\t\t\t// reuse the solvingOrders computed in the worker (this is a\n\t\t\t\t// fairly heavy operation, better doing it only once,\n\t\t\t\t// asynchronously)\n\t\t\t\t} else if ( e.data.type === 'solvingOrders' ) {\n\t\t\t\t\topts.worker = worker;\n\t\t\t\t\t// merge solvingOrders with the source\n\t\t\t\t\tObject.keys( e.data.data ).forEach(function(key) {\n\t\t\t\t\t\tif ( e.data.data[key] ) {\n\t\t\t\t\t\t\topts.fontObj.glyphs[key].solvingOrder =\n\t\t\t\t\t\t\t\te.data.data[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t// We're done with the asynchronous stuff!\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t}).then(function() {\n\t\treturn new PrototypoCanvas( opts );\n\t});\n}\n\nmodule.exports = load;\n","var prototypo = (typeof window !== \"undefined\" ? window.prototypo : typeof global !== \"undefined\" ? global.prototypo : null),\n\tassign = require('./assignPolyfill'),\n\t// Grid = require('./grid'),\n\t_drawSelected = require('./drawNodes')._drawSelected,\n\tload = require('./load');\n\nvar _ = { assign: assign },\n\tpaper = prototypo.paper;\n\n// handles buffers coming from the worker\nfunction fontBufferHandler(e) {\n\tif ( !(e.data instanceof ArrayBuffer) ) {\n\t\tthis.isWorkerBusy = false;\n\t\treturn;\n\t}\n\n\tthis.latestBuffer = e.data;\n\tthis.font.addToFonts( e.data );\n\n\t// process latest Values\n\tif ( this.latestValues ) {\n\t\tthis.worker.postMessage({\n\t\t\ttype: 'update',\n\t\t\tdata: this.latestValues\n\t\t});\n\n\t\tdelete this.latestValues;\n\n\t} else if ( this.latestSubset ) {\n\t\tthis.worker.postMessage({\n\t\t\ttype: 'subset',\n\t\t\tdata: this.latestSubset\n\t\t});\n\n\t\tdelete this.latestSubset;\n\n\t} else {\n\t\tthis.isWorkerBusy = false;\n\t}\n}\n\n// constructor\nfunction PrototypoCanvas( opts ) {\n\tpaper.setup( opts.canvas );\n\t// enable pointerevents on the canvas\n\topts.canvas.setAttribute('touch-action', 'none');\n\n\tthis.opts = _.assign({\n\t\tfill: true,\n\t\tshoNodes: false,\n\t\tzoomFactor: 0.05,\n\t\tjQueryListeners: true\n\t}, opts);\n\n\tthis.canvas = opts.canvas;\n\tthis.view = paper.view;\n\tthis.view.center = [ 0, 0 ];\n\tthis.project = paper.project;\n\tthis.project.activeLayer.applyMatrix = false;\n\tthis.project.activeLayer.scale( 1, -1 );\n\tthis.worker = opts.worker;\n\tthis._fill = this.opts.fill;\n\tthis._showNodes = this.opts.showNodes;\n\n\t// this.grid = new Grid( paper );\n\n\tthis.font = prototypo.parametricFont( opts.fontObj );\n\tthis.isMousedown = false;\n\n\tthis.worker.onmessage = fontBufferHandler.bind(this);\n\n\t// jQuery is an optional dependency\n\tif ( ( 'jQuery' in window ) && this.opts.jQueryListeners ) {\n\t\tvar $ = window.jQuery,\n\t\t\ttype = ( 'PointerEventsPolyfill' in window ) ||\n\t\t\t\t( 'PointerEvent' in window ) ? 'pointer' : 'mouse';\n\n\t\t$(opts.canvas).on( 'wheel', this.wheelHandler.bind(this) );\n\n\t\t$(opts.canvas).on( type + 'move', this.moveHandler.bind(this) );\n\n\t\t$(opts.canvas).on( type + 'down', this.downHandler.bind(this) );\n\n\t\t$(document).on( type + 'up', this.upHandler.bind(this) );\n\t}\n\n\tvar raf = window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame,\n\t\tupdateLoop = function() {\n\t\t\traf(updateLoop);\n\n\t\t\tif ( !this.latestRafValues || !this.currGlyph ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.currGlyph.update( this.latestRafValues );\n\t\t\tthis.view.update();\n\t\t\tdelete this.latestRafValues;\n\n\t\t}.bind(this);\n\tupdateLoop();\n}\n\nObject.defineProperties( PrototypoCanvas.prototype, {\n\tzoom: {\n\t\tget: function() {\n\t\t\treturn this.view.zoom;\n\t\t},\n\t\tset: function( zoom ) {\n\t\t\tthis.view.zoom = zoom;\n\t\t\t// this.grid.zoom = zoom;\n\t\t}\n\t},\n\tfill: {\n\t\tget: function() {\n\t\t\treturn this._fill;\n\t\t},\n\t\tset: function( bool ) {\n\t\t\tthis._fill = bool;\n\t\t\tthis.displayGlyph();\n\t\t}\n\t},\n\tshowNodes: {\n\t\tget: function() {\n\t\t\treturn this._showNodes;\n\t\t},\n\t\tset: function( bool ) {\n\t\t\tthis._showNodes = bool;\n\t\t\tthis.displayGlyph();\n\t\t}\n\t},\n\tshowCoords: {\n\t\tget: function() {\n\t\t\treturn paper.settings.drawCoords;\n\t\t},\n\t\tset: function( bool ) {\n\t\t\tpaper.settings.drawCoords = bool;\n\t\t\tthis.displayGlyph();\n\t\t}\n\t}\n});\n\nPrototypoCanvas.prototype.wheelHandler = function( event ) {\n\tvar bcr = this.canvas.getBoundingClientRect(),\n\t\tcurrPos = new paper.Point(\n\t\t\tevent.clientX - bcr.left,\n\t\t\tevent.clientY - bcr.top\n\t\t),\n\t\tviewPos = this.view.viewToProject( currPos ),\n\t\t// normalize the deltaY value. Expected values are ~40 pixels or 3 lines\n\t\tfactor = 1 + ( this.opts.zoomFactor *\n\t\t\t( Math.abs( event.deltaY / event.deltaMode ? 3 : 40 ) ) ) / 20,\n\t\tnewZoom =\n\t\t\tevent.deltaY < 0 ?\n\t\t\t\tthis.view.zoom * factor :\n\t\t\t\tevent.deltaY > 0 ?\n\t\t\t\t\tthis.view.zoom / factor :\n\t\t\t\t\tthis.view.zoom,\n\t\tbeta = this.view.zoom / newZoom,\n\t\tdifference = viewPos.subtract( this.view.center ),\n\t\tnewCenter = viewPos.subtract( difference.multiply(beta) );\n\n\tthis.zoom = newZoom;\n\tthis.view.center = newCenter;\n\n\tevent.preventDefault();\n};\n\nPrototypoCanvas.prototype.moveHandler = function(event) {\n\tif ( !this.isMousedown ) {\n\t\treturn;\n\t}\n\n\tvar currPos = new paper.Point( event.clientX, event.clientY ),\n\t\tdelta = currPos.subtract( this.prevPos );\n\n\tthis.prevPos = currPos;\n\n\tthis.view.center = this.view.center.subtract(\n\t\t\tdelta.divide( this.view.zoom ) );\n};\n\nPrototypoCanvas.prototype.downHandler = function(event) {\n\tif (event.button && event.button !== 0) {\n\t\treturn;\n\t}\n\n\tthis.isMousedown = true;\n\tthis.prevPos = new paper.Point( event.clientX, event.clientY );\n};\n\nPrototypoCanvas.prototype.upHandler = function() {\n\tthis.isMousedown = false;\n};\n\nPrototypoCanvas.prototype.zoomIn = function() {\n\tthis.zoom = this.view.zoom * 1 + this.opts.zoomFactor;\n};\n\nPrototypoCanvas.prototype.zoomOut = function() {\n\tthis.zoom = this.view.zoom / 1 + this.opts.zoomFactor;\n};\n\nPrototypoCanvas.prototype.displayGlyph = function( _glyph ) {\n\tvar glyph =\n\t\t\t// no glyph means we're switching fill mode for the current glyph\n\t\t\t_glyph === undefined ? this.currGlyph :\n\t\t\t// accept glyph name and glyph object\n\t\t\ttypeof _glyph === 'string' ? this.font.glyphMap[_glyph] :\n\t\t\t_glyph;\n\n\tif ( glyph === undefined ) {\n\t\treturn;\n\t}\n\n\t// hide previous glyph\n\tif ( this.currGlyph && this.currGlyph !== glyph ) {\n\t\tthis.currGlyph.visible = false;\n\t\tthis.currGlyph.components.forEach(function(component) {\n\t\t\tcomponent.visible = false;\n\t\t}, this);\n\t}\n\n\tthis.currGlyph = glyph;\n\n\t// make sure the glyph is up-to-update\n\tif ( _glyph && this.currValues ) {\n\t\tthis.currGlyph.update( this.currValues );\n\t}\n\n\t// .. and show it\n\tthis.currGlyph.visible = true;\n\n\tif ( this._fill ) {\n\t\tthis.currGlyph.fillColor = 'black';\n\t\tthis.currGlyph.strokeWidth = 0;\n\t} else {\n\t\tthis.currGlyph.fillColor = null;\n\t\tthis.currGlyph.strokeColor = 'black';\n\t\tthis.currGlyph.strokeWidth = 1;\n\t}\n\n\tthis.currGlyph.contours.forEach(function(contour) {\n\t\tcontour.fullySelected = this._showNodes && !contour.skeleton;\n\t}, this);\n\n\tthis.currGlyph.components.forEach(function(component) {\n\t\tcomponent.visible = true;\n\t\tcomponent.contours.forEach(function(contour) {\n\t\t\tcontour.fullySelected = this._showNodes && !contour.skeleton;\n\t\t}, this);\n\t}, this);\n\n\tthis.view._project._needsUpdate = true;\n\tthis.view.update();\n};\n\nPrototypoCanvas.prototype.displayChar = function( code ) {\n\tthis.displayGlyph( typeof code === 'string' ?\n\t\tthis.font.charMap[ code.charCodeAt(0) ] : code\n\t);\n};\n\nPrototypoCanvas.prototype.update = function( values ) {\n\tthis.latestRafValues = values;\n\n\tif ( !this.isWorkerBusy ) {\n\t\t// block updates\n\t\tthis.isWorkerBusy = true;\n\n\t\tthis.worker.postMessage({\n\t\t\ttype: 'update',\n\t\t\tdata: values\n\t\t});\n\n\t// if the worker is already busy, store the latest values so that we can\n\t// eventually update the font with the latest values\n\t} else {\n\t\tthis.latestWorkerValues = values;\n\t}\n\n\tthis.currValues = values;\n};\n\nPrototypoCanvas.prototype.subset = function( string ) {\n\tif ( !this.isWorkerBusy ) {\n\t\tif ( this.currSubset !== undefined ) {\n\t\t\t// block updates\n\t\t\tthis.isWorkerBusy = true;\n\t\t}\n\n\t\tthis.worker.postMessage({\n\t\t\ttype: 'subset',\n\t\t\tdata: string\n\t\t});\n\n\t// if the worker is already busy, store the latest values so that we can\n\t// eventually update the font with the latest values\n\t} else {\n\t\tthis.latestSubset = string;\n\t}\n\n\tthis.currSubset = string;\n};\n\nPrototypoCanvas.prototype.download = function() {\n\tif ( !this.latestBuffer ) {\n\t\t// the UI should wait for the first update to happen before allowing\n\t\t// the download button to be clicked\n\t\treturn;\n\t}\n\n\tthis.font.download( this.latestBuffer );\n};\n\nPrototypoCanvas.load = load;\n\npaper.PaperScope.prototype.Path.prototype._drawSelected = _drawSelected;\n_.assign( paper.settings, {\n\thandleSize: 6,\n\thandleColor: '#FF725E',\n\tnodeColor: '#00C4D6',\n\tdrawCoords: false,\n\thandleFont: '12px monospace'\n});\n\nmodule.exports = PrototypoCanvas;\n","if ( 'importScripts' in self ) {\n\t// When the worker is loaded by URL, the search fragment must include\n\t// the URL of prototypo.js\n\tself.importScripts( decodeURIComponent(\n\t\tself.location.search.replace(/(\\?|&)bundleurl=(.*?)(&|$)/, '$2')\n\t) );\n}\n\nfunction worker() {\n\tvar font,\n\t\thandlers = {},\n\t\tcurrValues;\n\n\tself.postMessage({ type: 'ready' });\n\n\tprototypo.paper.setup({\n\t\twidth: 1024,\n\t\theight: 1024\n\t});\n\n\t// Overwrite addToFonts to send the buffer over to the UI\n\tprototypo.paper.Font.prototype.addToFonts = function() {\n\t\tvar buffer = this.ot.toBuffer();\n\t\tself.postMessage( buffer, [ buffer ] );\n\t};\n\n\t// mini router\n\tself.onmessage = function(e) {\n\t\thandlers[ e.data.type ]( e.data.data );\n\t};\n\n\thandlers.font = function( fontSource ) {\n\t\tfont = prototypo.parametricFont( JSON.parse( fontSource ) );\n\t\tvar solvingOrders = {};\n\t\tObject.keys( font.glyphMap ).forEach(function(key) {\n\t\t\tsolvingOrders[key] = font.glyphMap[key].solvingOrder;\n\t\t});\n\n\t\tself.postMessage({\n\t\t\ttype: 'solvingOrders',\n\t\t\tdata: solvingOrders\n\t\t});\n\t};\n\n\thandlers.update = function( params ) {\n\t\tcurrValues = params;\n\n\t\tfont.update( params );\n\n\t\tfont.updateOTCommands()\n\t\t\t.addToFonts();\n\t};\n\n\thandlers.subset = function( string ) {\n\t\tvar prevSubset = font.subset || Object.keys( font.charMap );\n\t\tfont.subset = string;\n\t\tvar currSubset = font.subset || Object.keys( font.charMap );\n\n\t\t// search for chars *added* to the subset\n\t\tcurrSubset.filter(function( code ) {\n\t\t\treturn prevSubset.indexOf( code ) === -1;\n\n\t\t// update those glyphs\n\t\t}).forEach(function( code ) {\n\t\t\tif ( font.charMap[code] ) {\n\t\t\t\tfont.charMap[code].update( currValues );\n\t\t\t\tfont.updateOTCommands();\n\t\t\t}\n\t\t});\n\n\t\tfont.addToFonts();\n\t};\n}\n\n// When the worker is loaded from URL, worker() needs to be called explicitely\nif ( 'importScripts' in self ) {\n\tworker();\n} else {\n\tmodule.exports = worker;\n}\n"]}